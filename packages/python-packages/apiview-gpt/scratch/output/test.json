{
    "status": "Error",
    "violations": [
        {
            "rule_ids": [
                "python_design.html#python-client-naming",
                "python_design.html#python-namespaces-async"
            ],
            "line_no": 19,
            "bad_code": "class azure.contoso.NoodleAsyncManager:",
            "suggestion": "class azure.contoso.aio.NoodleAsyncClient:",
            "comment": "The class name should end with a 'Client' suffix. The namespace of the class should have an '.aio' suffix for async clients."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-constructor-policy-arguments"
            ],
            "line_no": 20,
            "bad_code": "async def __init__(self, endpoint, credential, options: dict)",
            "suggestion": "async def __init__(self, endpoint, credential, options: dict, max_retries=18, timeout=2)",
            "comment": "The constructor should accept optional parameters like 'max_retries' and 'timeout'."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-naming"
            ],
            "line_no": 32,
            "bad_code": "class azure.contoso.NoodleManager:",
            "suggestion": "class azure.contoso.NoodleClient:",
            "comment": "The class name should end with a 'Client' suffix."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-connection-string"
            ],
            "line_no": 38,
            "bad_code": "connection_string: Optional[str]",
            "suggestion": "Implement a separate factory classmethod from_connection_string to create a client from a connection string.",
            "comment": "The constructor should not accept a connection string as an argument."
        }
    ]
}