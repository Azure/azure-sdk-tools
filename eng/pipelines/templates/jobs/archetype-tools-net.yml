jobs:
- job: 'build_${{parameters.JobName}}'
  displayName: 'Building and Testing: ${{parameters.ProjectFile}}'
  variables:
  - template: ../variables/globals.yml
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: DotNetCoreInstaller@0
    displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
    inputs:
      version: '$(DotNetCoreVersion)'
  - script: 'dotnet pack ${{parameters.ProjectFile}} -o $(Build.ArtifactStagingDirectory) -warnaserror /p:OfficialBuildId=$(Build.BuildNumber)'
    displayName: 'Build'
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_MULTILEVEL_LOOKUP: 0
  - task: DotNetCoreCLI@2
    displayName: 'Test'
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_MULTILEVEL_LOOKUP: 0
    inputs:
      command: test
      projects: ${{parameters.ProjectFile}}
      arguments: --logger trx
      publishTestResults: false
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/*.trx'
      testRunTitle: 'Windows DotNet $(DotNetCoreVersion)'
      testResultsFormat: 'VSTest'
      mergeTestResults: true
  - task: PublishPipelineArtifact@0
    condition: succeededOrFailed()
    displayName: 'Publish Artifacts'
    inputs:
      artifactName: packages
      targetPath: $(Build.ArtifactStagingDirectory)
  