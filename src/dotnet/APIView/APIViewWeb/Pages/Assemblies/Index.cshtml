@page
@model APIViewWeb.Pages.Assemblies.IndexPageModel
@using APIViewWeb
@using System
@using System.Text.RegularExpressions
@using APIViewWeb.Helpers
@using APIViewWeb.Models
@{
    ViewData["Title"] = "Reviews";
    var userPreference = PageModelHelpers.GetUserPreference(Model._preferenceCache, User);
    TempData["UserPreference"] = userPreference;
}
<div class="container-fluid sticky-top nav-cst-theme">
    <div class="row mx-5 py-2">
        <div class="col-md-10 px-0 d-sm-flex flex-row justify-content-sm-start">
            <div class="input-group" id="reviews-table-search-container">
                <input type="search" class="form-control" id="reviews-table-search-box" placeholder="Search.. e.g pr:<Pull-Request Number>, package:<Package Name>, author:<Github UserName>" />
                <button class="btn btn-outline-primary" id="reviews-search-button" aria-labelledby="reviews-table-search-box" type="button"><i class="fa-solid fa-magnifying-glass"></i></button>
            </div>
        </div>
        <div class="col-md-2 px-0 d-sm-flex flex-row justify-content-sm-end">
            @if (userPreference.HideIndexPageOptions.HasValue && userPreference.HideIndexPageOptions == true)
            {
            <input type="checkbox" class="btn-check" id="index-right-offcanvas-toggle" autocomplete="off">
            }
            else
            {
            <input type="checkbox" checked class="btn-check" id="index-right-offcanvas-toggle" autocomplete="off">
            }
            <label class="btn btn-outline-primary" accesskey="m" for="index-right-offcanvas-toggle"><i class="fa fa-bars"></i>&nbsp;&nbsp;Options</label>
        </div>
    </div>
</div>

@{
    var offCanvasClass = " show-offcanvas";
    if (userPreference.HideIndexPageOptions.HasValue && userPreference.HideIndexPageOptions == true)
        offCanvasClass = String.Empty;
}
<div id="right-offcanvas-menu" class="right-offcanvas@(offCanvasClass)">
    <div class="offcanvas-menu-content" id="index-offcanvas-menu-content">
        <p class="h6">Filters</p>
        <div class="input-group input-group-sm mb-2">
            <span class="input-group-text">Languages</span>
            <select multiple id="language-filter-select" aria-label="Language Filter">
                <partial name="_SelectPickerPartial" model="Model.ReviewsProperties.Languages" />
            </select>
        </div>
        <div class="input-group input-group-sm mb-2">
            <span class="input-group-text">State</span>
            <select multiple id="state-filter-select" aria-label="State Filter">
                <partial name="_SelectPickerPartial" model="Model.ReviewsProperties.State" />
            </select>
        </div>
        @*
        Disabling Approval since it has no benefit to users at this point
        <div class="input-group input-group-sm mb-2">
            <span class="input-group-text">Status</span>
            <select multiple id="status-filter-select" aria-label="Status Filter">
                <partial name="_SelectPickerPartial" model="Model.ReviewsProperties.Status" />
            </select>
        </div>
        *@
 
        <button type="button" class="btn btn-outline-primary btn-sm mt-2" id="reset-filter-button"><i class="fa-solid fa-xmark"></i>&nbsp;&nbsp;Reset Filters</button>
        <hr class="border">
    </div>
</div>
@{
    var mainContainerClass = " move-main-content-container-left";
    if (userPreference.HideIndexPageOptions.HasValue && userPreference.HideIndexPageOptions == true)
        mainContainerClass = String.Empty;
}
<div class="container-fluid mb-5@(mainContainerClass)" id="index-main-container">
    <div class="mx-5 row">
        <div class="col-md-12" id="reviews-filter-partial">
            <partial name="_ReviewsPartial" model="Model.PagedResults" />
        </div> 
    </div>
</div>