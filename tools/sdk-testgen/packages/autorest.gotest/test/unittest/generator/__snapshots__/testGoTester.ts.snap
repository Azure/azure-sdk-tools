// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GoTestGenerator from RP agrifood Generate MockTest and SDK example 1`] = `
Object {
  "ze_generated_example_extensions_client_test.go": "//go:build go1.18
// +build go1.18



package armagrifood_test

import (
	\\"context\\"
	\\"log\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood\\"
	\\"reflect\\"
	\\"time\\"
)



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Create.json
func ExampleExtensionsClient_Create() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewExtensionsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	_, err = client.Create(ctx,
\\"<extension-id>\\",
\\"<farm-beats-resource-name>\\",
\\"<resource-group-name>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Get.json
func ExampleExtensionsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewExtensionsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.Get(ctx,
\\"<extension-id>\\",
\\"<farm-beats-resource-name>\\",
\\"<resource-group-name>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Update.json
func ExampleExtensionsClient_Update() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewExtensionsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.Update(ctx,
\\"<extension-id>\\",
\\"<farm-beats-resource-name>\\",
\\"<resource-group-name>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Delete.json
func ExampleExtensionsClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewExtensionsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	_, err = client.Delete(ctx,
\\"<extension-id>\\",
\\"<farm-beats-resource-name>\\",
\\"<resource-group-name>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_ListByFarmBeats.json
func ExampleExtensionsClient_NewListByFarmBeatsPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewExtensionsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	pager := client.NewListByFarmBeatsPager(\\"<resource-group-name>\\",
\\"<farm-beats-resource-name>\\",
&armagrifood.ExtensionsClientListByFarmBeatsOptions{ExtensionIDs: []string{},
ExtensionCategories: []string{},
MaxPageSize: nil,
SkipToken: nil,
})
	for pager.More() {
        nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf(\\"failed to advance page: %v\\", err)
		}
		for _, v := range nextResult.Value {
            // TODO: use page item
            _ = v
		}
	}
}


",
  "ze_generated_example_farmbeatsextensions_client_test.go": "//go:build go1.18
// +build go1.18



package armagrifood_test

import (
	\\"context\\"
	\\"log\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood\\"
	\\"reflect\\"
	\\"time\\"
)



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsExtensions_List.json
func ExampleFarmBeatsExtensionsClient_NewListPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsExtensionsClient(cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	pager := client.NewListPager(&armagrifood.FarmBeatsExtensionsClientListOptions{FarmBeatsExtensionIDs: []string{},
FarmBeatsExtensionNames: []string{},
ExtensionCategories: []string{},
PublisherIDs: []string{},
MaxPageSize: nil,
})
	for pager.More() {
        nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf(\\"failed to advance page: %v\\", err)
		}
		for _, v := range nextResult.Value {
            // TODO: use page item
            _ = v
		}
	}
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsExtensions_Get.json
func ExampleFarmBeatsExtensionsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsExtensionsClient(cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.Get(ctx,
\\"<farm-beats-extension-id>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}


",
  "ze_generated_example_farmbeatsmodels_client_test.go": "//go:build go1.18
// +build go1.18



package armagrifood_test

import (
	\\"context\\"
	\\"log\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood\\"
	\\"reflect\\"
	\\"time\\"
)



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Get.json
func ExampleFarmBeatsModelsClient_Get() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.Get(ctx,
\\"<resource-group-name>\\",
\\"<farm-beats-resource-name>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_CreateOrUpdate.json
func ExampleFarmBeatsModelsClient_CreateOrUpdate() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.CreateOrUpdate(ctx,
\\"<farm-beats-resource-name>\\",
\\"<resource-group-name>\\",
armagrifood.FarmBeats{
Tags: map[string]*string{
\\"key1\\": to.Ptr(\\"value1\\"),
\\"key2\\": to.Ptr(\\"value2\\"),
},
Location: to.Ptr(\\"<location>\\"),
},
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Update.json
func ExampleFarmBeatsModelsClient_Update() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.Update(ctx,
\\"<farm-beats-resource-name>\\",
\\"<resource-group-name>\\",
armagrifood.FarmBeatsUpdateRequestModel{
Tags: map[string]*string{
\\"key1\\": to.Ptr(\\"value1\\"),
\\"key2\\": to.Ptr(\\"value2\\"),
},
},
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Delete.json
func ExampleFarmBeatsModelsClient_Delete() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	_, err = client.Delete(ctx,
\\"<resource-group-name>\\",
\\"<farm-beats-resource-name>\\",
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_ListBySubscription.json
func ExampleFarmBeatsModelsClient_NewListBySubscriptionPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	pager := client.NewListBySubscriptionPager(&armagrifood.FarmBeatsModelsClientListBySubscriptionOptions{MaxPageSize: nil,
SkipToken: nil,
})
	for pager.More() {
        nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf(\\"failed to advance page: %v\\", err)
		}
		for _, v := range nextResult.Value {
            // TODO: use page item
            _ = v
		}
	}
}



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_ListByResourceGroup.json
func ExampleFarmBeatsModelsClient_NewListByResourceGroupPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	pager := client.NewListByResourceGroupPager(\\"<resource-group-name>\\",
&armagrifood.FarmBeatsModelsClientListByResourceGroupOptions{MaxPageSize: nil,
SkipToken: nil,
})
	for pager.More() {
        nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf(\\"failed to advance page: %v\\", err)
		}
		for _, v := range nextResult.Value {
            // TODO: use page item
            _ = v
		}
	}
}


",
  "ze_generated_example_locations_client_test.go": "//go:build go1.18
// +build go1.18



package armagrifood_test

import (
	\\"context\\"
	\\"log\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood\\"
	\\"reflect\\"
	\\"time\\"
)



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Locations_CheckNameAvailability_AlreadyExists.json
func ExampleLocationsClient_CheckNameAvailability() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewLocationsClient(\\"<subscription-id>\\", cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	res, err := client.CheckNameAvailability(ctx,
armagrifood.CheckNameAvailabilityRequest{
Name: to.Ptr(\\"<name>\\"),
Type: to.Ptr(\\"<type>\\"),
},
nil)
	if err != nil {
		log.Fatalf(\\"failed to finish the request: %v\\", err)
	}
    // TODO: use response item
    _ = res
}


",
  "ze_generated_example_operations_client_test.go": "//go:build go1.18
// +build go1.18



package armagrifood_test

import (
	\\"context\\"
	\\"log\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood\\"
	\\"reflect\\"
	\\"time\\"
)



// Generated from example definition: https://github.com/Azure/azure-rest-api-specs/tree/main/specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Operations_List.json
func ExampleOperationsClient_NewListPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf(\\"failed to obtain a credential: %v\\", err)
	}
	ctx := context.Background()
	client, err := armagrifood.NewOperationsClient(cred, nil)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
	pager := client.NewListPager(nil)
	for pager.More() {
        nextResult, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf(\\"failed to advance page: %v\\", err)
		}
		for _, v := range nextResult.Value {
            // TODO: use page item
            _ = v
		}
	}
}


",
  "zt_generated_mock_test.go": "//go:build go1.18
// +build go1.18



package armagrifood_test

import (
	\\"context\\"
	\\"fmt\\"
	\\"net/http\\"
	\\"os\\"
	\\"runtime/debug\\"
	\\"testing\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm\\"
    \\"github.com/Azure/azure-sdk-for-go/sdk/azcore/cloud\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/policy\\"
    \\"github.com/Azure/azure-sdk-for-go/sdk/azcore/runtime\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azidentity\\"
	\\"golang.org/x/net/http2\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/agrifood/armagrifood\\"
	\\"reflect\\"
	\\"time\\"
)



var (
	ctx            context.Context
    options        arm.ClientOptions
	cred           azcore.TokenCredential
	err            error
	mockHost       string
)



func TestExtensions_Create(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Create.json
	client, err := armagrifood.NewExtensionsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            _, err = client.Create(ctx,
\\"provider.extension\\",
\\"examples-farmbeatsResourceName\\",
\\"examples-rg\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Create.json: %v\\", err)
        }
}


func TestExtensions_Get(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Get.json
	client, err := armagrifood.NewExtensionsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.Get(ctx,
\\"provider.extension\\",
\\"examples-farmbeatsResourceName\\",
\\"examples-rg\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Get.json: %v\\", err)
        }
}


func TestExtensions_Update(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Update.json
	client, err := armagrifood.NewExtensionsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.Update(ctx,
\\"provider.extension\\",
\\"examples-farmbeatsResourceName\\",
\\"examples-rg\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Update.json: %v\\", err)
        }
}


func TestExtensions_Delete(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Delete.json
	client, err := armagrifood.NewExtensionsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            _, err = client.Delete(ctx,
\\"provider.extension\\",
\\"examples-farmbeatsResourceName\\",
\\"examples-rg\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_Delete.json: %v\\", err)
        }
}


func TestExtensions_ListByFarmBeats(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_ListByFarmBeats.json
	client, err := armagrifood.NewExtensionsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
        pager := client.NewListByFarmBeatsPager(\\"examples-rg\\",
\\"examples-farmbeatsResourceName\\",
&armagrifood.ExtensionsClientListByFarmBeatsOptions{ExtensionIDs: []string{},
ExtensionCategories: []string{},
MaxPageSize: nil,
SkipToken: nil,
})
        for pager.More() {
            _, err := pager.NextPage(ctx)
            if err != nil {
                t.Fatalf(\\"Failed to advance page for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Extensions_ListByFarmBeats.json: %v\\", err)
                break
            }
        }
}


func TestFarmBeatsExtensions_List(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsExtensions_List.json
	client, err := armagrifood.NewFarmBeatsExtensionsClient(cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
        pager := client.NewListPager(&armagrifood.FarmBeatsExtensionsClientListOptions{FarmBeatsExtensionIDs: []string{},
FarmBeatsExtensionNames: []string{},
ExtensionCategories: []string{},
PublisherIDs: []string{},
MaxPageSize: nil,
})
        for pager.More() {
            _, err := pager.NextPage(ctx)
            if err != nil {
                t.Fatalf(\\"Failed to advance page for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsExtensions_List.json: %v\\", err)
                break
            }
        }
}


func TestFarmBeatsExtensions_Get(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsExtensions_Get.json
	client, err := armagrifood.NewFarmBeatsExtensionsClient(cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.Get(ctx,
\\"DTN.ContentServices\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsExtensions_Get.json: %v\\", err)
        }
}


func TestFarmBeatsModels_Get(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Get.json
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.Get(ctx,
\\"examples-rg\\",
\\"examples-farmBeatsResourceName\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Get.json: %v\\", err)
        }
}


func TestFarmBeatsModels_CreateOrUpdate(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_CreateOrUpdate.json
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.CreateOrUpdate(ctx,
\\"examples-farmbeatsResourceName\\",
\\"examples-rg\\",
armagrifood.FarmBeats{
Tags: map[string]*string{
\\"key1\\": to.Ptr(\\"value1\\"),
\\"key2\\": to.Ptr(\\"value2\\"),
},
Location: to.Ptr(\\"eastus2\\"),
},
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_CreateOrUpdate.json: %v\\", err)
        }
}


func TestFarmBeatsModels_Update(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Update.json
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.Update(ctx,
\\"examples-farmBeatsResourceName\\",
\\"examples-rg\\",
armagrifood.FarmBeatsUpdateRequestModel{
Tags: map[string]*string{
\\"key1\\": to.Ptr(\\"value1\\"),
\\"key2\\": to.Ptr(\\"value2\\"),
},
},
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Update.json: %v\\", err)
        }
}


func TestFarmBeatsModels_Delete(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Delete.json
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            _, err = client.Delete(ctx,
\\"examples-rg\\",
\\"examples-farmBeatsResourceName\\",
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_Delete.json: %v\\", err)
        }
}


func TestFarmBeatsModels_ListBySubscription(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_ListBySubscription.json
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
        pager := client.NewListBySubscriptionPager(&armagrifood.FarmBeatsModelsClientListBySubscriptionOptions{MaxPageSize: nil,
SkipToken: nil,
})
        for pager.More() {
            _, err := pager.NextPage(ctx)
            if err != nil {
                t.Fatalf(\\"Failed to advance page for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_ListBySubscription.json: %v\\", err)
                break
            }
        }
}


func TestFarmBeatsModels_ListByResourceGroup(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_ListByResourceGroup.json
	client, err := armagrifood.NewFarmBeatsModelsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
        pager := client.NewListByResourceGroupPager(\\"examples-rg\\",
&armagrifood.FarmBeatsModelsClientListByResourceGroupOptions{MaxPageSize: nil,
SkipToken: nil,
})
        for pager.More() {
            _, err := pager.NextPage(ctx)
            if err != nil {
                t.Fatalf(\\"Failed to advance page for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/FarmBeatsModels_ListByResourceGroup.json: %v\\", err)
                break
            }
        }
}


func TestLocations_CheckNameAvailability(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Locations_CheckNameAvailability_AlreadyExists.json
	client, err := armagrifood.NewLocationsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err := client.CheckNameAvailability(ctx,
armagrifood.CheckNameAvailabilityRequest{
Name: to.Ptr(\\"existingaccountname\\"),
Type: to.Ptr(\\"Microsoft.AgFoodPlatform/farmBeats\\"),
},
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Locations_CheckNameAvailability_AlreadyExists.json: %v\\", err)
        }

    
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Locations_CheckNameAvailability_Available.json
    client, err = armagrifood.NewLocationsClient(\\"11111111-2222-3333-4444-555555555555\\", cred, &options)
	if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
            res, err = client.CheckNameAvailability(ctx,
armagrifood.CheckNameAvailabilityRequest{
Name: to.Ptr(\\"newaccountname\\"),
Type: to.Ptr(\\"Microsoft.AgFoodPlatform/farmBeats\\"),
},
nil)
        if err != nil {
            t.Fatalf(\\"Failed to get result for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Locations_CheckNameAvailability_Available.json: %v\\", err)
        }
}


func TestOperations_List(t *testing.T) {
    // From example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Operations_List.json
	client, err := armagrifood.NewOperationsClient(cred, &options)
    if err != nil {
		log.Fatalf(\\"failed to create client: %v\\", err)
	}
        pager := client.NewListPager(nil)
        for pager.More() {
            _, err := pager.NextPage(ctx)
            if err != nil {
                t.Fatalf(\\"Failed to advance page for example specification/agrifood/resource-manager/Microsoft.AgFoodPlatform/preview/2020-05-12-preview/examples/Operations_List.json: %v\\", err)
                break
            }
        }
}


// TestMain will exec each test
func TestMain(m *testing.M) {
	setUp()
	retCode := m.Run() // exec test and this returns an exit code to pass to os
	tearDown()
	os.Exit(retCode)
}

func getEnv(key, fallback string) string {
    if value, ok := os.LookupEnv(key); ok {
        return value
    }
    return fallback
}

func setUp() {
	ctx = context.Background()
	mockHost = getEnv(\\"AZURE_VIRTUAL_SERVER_HOST\\", \\"https://localhost:8443\\")

	tr := &http.Transport{}
	if err := http2.ConfigureTransport(tr); err != nil {
		fmt.Printf(\\"Failed to configure http2 transport: %v\\", err)
	}
	tr.TLSClientConfig.InsecureSkipVerify = true
	client := &http.Client{Transport: tr}
	
    cred = &MockCredential{}

	options = arm.ClientOptions{
		ClientOptions: policy.ClientOptions{
			Logging: policy.LogOptions{
				IncludeBody: true,
			},
			Transport: client,
            Cloud: cloud.Configuration{
				Services: map[cloud.ServiceName]cloud.ServiceConfiguration{
					cloud.ResourceManager: {
						Audience: mockHost,
						Endpoint: mockHost,
					},
				},
			},
		},
	}
}

func tearDown() {

}

type MockCredential struct {
}

func (c *MockCredential) GetToken(ctx context.Context, opts policy.TokenRequestOptions) (*azcore.AccessToken, error) {
	return &azcore.AccessToken{Token: \\"MockToken\\", ExpiresOn: time.Now().Add(time.Hour * 24).UTC()}, nil
}",
}
`;

exports[`GoTestGenerator from RP signalR Generate scenario test 1`] = `
Object {
  "zt_generated_signalr_live_test.go": "//go:build go1.18
// +build go1.18



package test_test

import (
	\\"context\\"
	\\"testing\\"

	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/arm\\"
    \\"github.com/Azure/azure-sdk-for-go/sdk/internal/recording\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/internal/testutil\\"
    \\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources\\"
    \\"github.com/stretchr/testify/suite\\"
)
import (
	\\"encoding/json\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/azcore/to\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources\\"
	\\"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/t/test\\"
	\\"reflect\\"
	\\"time\\"
)



type SignalrTestSuite struct {
	suite.Suite

	ctx     context.Context
	cred    azcore.TokenCredential
	options *arm.ClientOptions
    location string
    resourceGroupName string
    subscriptionId string
}

func (testsuite *SignalrTestSuite) SetupSuite() {
	testsuite.ctx = context.Background()
	testsuite.cred, testsuite.options = testutil.GetCredAndClientOptions(testsuite.T())
        testsuite.location = testutil.GetEnv(\\"LOCATION\\", \\"westus\\")
        testsuite.resourceGroupName = testutil.GetEnv(\\"RESOURCE_GROUP_NAME\\", \\"scenarioTestTempGroup\\")
        testsuite.subscriptionId = testutil.GetEnv(\\"AZURE_SUBSCRIPTION_ID\\", \\"\\")

    testutil.StartRecording(testsuite.T(), \\"sdk/resourcemanager//test/testdata\\")
    resourceGroup, _, err := testutil.CreateResourceGroup(testsuite.ctx, testsuite.subscriptionId, testsuite.cred, testsuite.options, testsuite.location)
	testsuite.Require().NoError(err)
	testsuite.resourceGroupName = *resourceGroup.Name
}

func (testsuite *SignalrTestSuite) TearDownSuite() {
	_, err := testutil.DeleteResourceGroup(testsuite.ctx, testsuite.subscriptionId, testsuite.cred, testsuite.options, testsuite.resourceGroupName)
	testsuite.Require().NoError(err)
	testutil.StopRecording(testsuite.T())
}

func TestSignalrTestSuite(t *testing.T) {
	suite.Run(t, new(SignalrTestSuite))
}


func (testsuite *SignalrTestSuite) TestSignalr() {
    var resourceName string
var err error
    // From step Generate_Unique_Name
    template:= map[string]interface{}{
\\"$schema\\": \\"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#\\",
\\"contentVersion\\": \\"1.0.0.0\\",
\\"outputs\\":map[string]interface{}{
\\"resourceName\\":map[string]interface{}{
\\"type\\": \\"string\\",
\\"value\\": \\"[variables('name').value]\\",
},
},
\\"resources\\":[]interface{}{
},
\\"variables\\":map[string]interface{}{
\\"name\\":map[string]interface{}{
\\"type\\": \\"string\\",
\\"metadata\\":map[string]interface{}{
\\"description\\": \\"Name of the SignalR service.\\",
},
\\"value\\": \\"[concat('sw',uniqueString(resourceGroup().id))]\\",
},
},
}
    params:= map[string]interface{}{
    }
    deployment:= armresources.Deployment{
		Properties: &armresources.DeploymentProperties{
			Template:   template,
			Parameters: params,
			Mode:       to.Ptr(armresources.DeploymentModeIncremental),
		},
	}
    deploymentExtend, err:= testutil.CreateDeployment(testsuite.ctx, testsuite.subscriptionId, testsuite.cred, testsuite.options, testsuite.resourceGroupName, \\"Generate_Unique_Name\\", &deployment)
    testsuite.Require().NoError(err)
    resourceName = deploymentExtend.Properties.Outputs.(map[string]interface{})[\\"resourceName\\"].(map[string]interface{})[\\"value\\"].(string)

    
    // From step SignalR_CheckNameAvailability
    signalRClient, err := test.NewSignalRClient(testsuite.subscriptionId, testsuite.cred, testsuite.options)
    testsuite.Require().NoError(err)
                _, err = signalRClient.CheckNameAvailability(testsuite.ctx,
testsuite.location,
test.NameAvailabilityParameters{
Name: to.Ptr(resourceName),
Type: to.Ptr(\\"Microsoft.SignalRService/SignalR\\"),
},
nil)
            testsuite.Require().NoError(err)

    
    // From step SignalR_CreateOrUpdate
                signalRClientCreateOrUpdateResponse, err:= signalRClient.BeginCreateOrUpdate(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
test.ResourceInfo{
Location: to.Ptr(testsuite.location),
Tags: map[string]*string{
\\"key1\\": to.Ptr(\\"value1\\"),
},
Identity: &test.ManagedIdentity{
Type: to.Ptr(test.ManagedIdentityTypeSystemAssigned),
},
Kind: to.Ptr(test.ServiceKindSignalR),
Properties: &test.SignalRProperties{
Cors: &test.SignalRCorsSettings{
AllowedOrigins: []*string{
to.Ptr(\\"https://foo.com\\"),
to.Ptr(\\"https://bar.com\\")},
},
DisableAADAuth: to.Ptr(false),
DisableLocalAuth: to.Ptr(false),
Features: []*test.SignalRFeature{
{
Flag: to.Ptr(test.FeatureFlagsServiceMode),
Properties: map[string]*string{
},
Value: to.Ptr(\\"Serverless\\"),
},
{
Flag: to.Ptr(test.FeatureFlagsEnableConnectivityLogs),
Properties: map[string]*string{
},
Value: to.Ptr(\\"True\\"),
},
{
Flag: to.Ptr(test.FeatureFlagsEnableMessagingLogs),
Properties: map[string]*string{
},
Value: to.Ptr(\\"False\\"),
},
{
Flag: to.Ptr(test.FeatureFlagsEnableLiveTrace),
Properties: map[string]*string{
},
Value: to.Ptr(\\"False\\"),
}},
NetworkACLs: &test.SignalRNetworkACLs{
DefaultAction: to.Ptr(test.ACLActionDeny),
PrivateEndpoints: []*test.PrivateEndpointACL{
{
Allow: []*test.SignalRRequestType{
to.Ptr(test.SignalRRequestTypeServerConnection)},
Name: to.Ptr(resourceName + \\".1fa229cd-bf3f-47f0-8c49-afb36723997e\\"),
}},
PublicNetwork: &test.NetworkACL{
Allow: []*test.SignalRRequestType{
to.Ptr(test.SignalRRequestTypeClientConnection)},
},
},
PublicNetworkAccess: to.Ptr(\\"Enabled\\"),
TLS: &test.SignalRTLSSettings{
ClientCertEnabled: to.Ptr(false),
},
Upstream: &test.ServerlessUpstreamSettings{
Templates: []*test.UpstreamTemplate{
{
Auth: &test.UpstreamAuthSettings{
Type: to.Ptr(test.UpstreamAuthTypeManagedIdentity),
ManagedIdentity: &test.ManagedIdentitySettings{
Resource: to.Ptr(\\"api://example\\"),
},
},
CategoryPattern: to.Ptr(\\"*\\"),
EventPattern: to.Ptr(\\"connect,disconnect\\"),
HubPattern: to.Ptr(\\"*\\"),
URLTemplate: to.Ptr(\\"https://example.com/chat/api/connect\\"),
}},
},
},
SKU: &test.ResourceSKU{
Name: to.Ptr(\\"Standard_S1\\"),
Capacity: to.Ptr[int32](1),
Tier: to.Ptr(test.SignalRSKUTierStandard),
},
},
&test.SignalRClientBeginCreateOrUpdateOptions{ResumeToken: \\"\\",
})
            testsuite.Require().NoError(err)
            _, err = testutil.PullResultForTest(ctx, signalRClientCreateOrUpdateResponse)
            testsuite.Require().NoError(err)

    
    // From step SignalR_Get
                _, err = signalRClient.Get(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
nil)
            testsuite.Require().NoError(err)

    
    // From step SignalR_Update
                signalRClientUpdateResponse, err:= signalRClient.BeginUpdate(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
test.ResourceInfo{
Location: to.Ptr(testsuite.location),
Tags: map[string]*string{
\\"key1\\": to.Ptr(\\"value1\\"),
},
Identity: &test.ManagedIdentity{
Type: to.Ptr(test.ManagedIdentityTypeSystemAssigned),
},
Kind: to.Ptr(test.ServiceKindSignalR),
Properties: &test.SignalRProperties{
Cors: &test.SignalRCorsSettings{
AllowedOrigins: []*string{
to.Ptr(\\"https://foo.com\\"),
to.Ptr(\\"https://bar.com\\")},
},
DisableAADAuth: to.Ptr(false),
DisableLocalAuth: to.Ptr(false),
Features: []*test.SignalRFeature{
{
Flag: to.Ptr(test.FeatureFlagsServiceMode),
Properties: map[string]*string{
},
Value: to.Ptr(\\"Serverless\\"),
},
{
Flag: to.Ptr(test.FeatureFlagsEnableConnectivityLogs),
Properties: map[string]*string{
},
Value: to.Ptr(\\"True\\"),
},
{
Flag: to.Ptr(test.FeatureFlagsEnableMessagingLogs),
Properties: map[string]*string{
},
Value: to.Ptr(\\"False\\"),
},
{
Flag: to.Ptr(test.FeatureFlagsEnableLiveTrace),
Properties: map[string]*string{
},
Value: to.Ptr(\\"False\\"),
}},
NetworkACLs: &test.SignalRNetworkACLs{
DefaultAction: to.Ptr(test.ACLActionDeny),
PrivateEndpoints: []*test.PrivateEndpointACL{
{
Allow: []*test.SignalRRequestType{
to.Ptr(test.SignalRRequestTypeServerConnection)},
Name: to.Ptr(resourceName + \\".1fa229cd-bf3f-47f0-8c49-afb36723997e\\"),
}},
PublicNetwork: &test.NetworkACL{
Allow: []*test.SignalRRequestType{
to.Ptr(test.SignalRRequestTypeClientConnection)},
},
},
PublicNetworkAccess: to.Ptr(\\"Enabled\\"),
TLS: &test.SignalRTLSSettings{
ClientCertEnabled: to.Ptr(false),
},
Upstream: &test.ServerlessUpstreamSettings{
Templates: []*test.UpstreamTemplate{
{
Auth: &test.UpstreamAuthSettings{
Type: to.Ptr(test.UpstreamAuthTypeManagedIdentity),
ManagedIdentity: &test.ManagedIdentitySettings{
Resource: to.Ptr(\\"api://example\\"),
},
},
CategoryPattern: to.Ptr(\\"*\\"),
EventPattern: to.Ptr(\\"connect,disconnect\\"),
HubPattern: to.Ptr(\\"*\\"),
URLTemplate: to.Ptr(\\"https://example.com/chat/api/connect\\"),
}},
},
},
SKU: &test.ResourceSKU{
Name: to.Ptr(\\"Standard_S1\\"),
Capacity: to.Ptr[int32](1),
Tier: to.Ptr(test.SignalRSKUTierStandard),
},
},
&test.SignalRClientBeginUpdateOptions{ResumeToken: \\"\\",
})
            testsuite.Require().NoError(err)
            _, err = testutil.PullResultForTest(ctx, signalRClientUpdateResponse)
            testsuite.Require().NoError(err)

    
    // From step SignalR_ListKeys
                _, err = signalRClient.ListKeys(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
nil)
            testsuite.Require().NoError(err)

    
    // From step SignalR_RegenerateKey
                signalRClientRegenerateKeyResponse, err:= signalRClient.BeginRegenerateKey(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
test.RegenerateKeyParameters{
KeyType: to.Ptr(test.KeyTypePrimary),
},
&test.SignalRClientBeginRegenerateKeyOptions{ResumeToken: \\"\\",
})
            testsuite.Require().NoError(err)
            _, err = testutil.PullResultForTest(ctx, signalRClientRegenerateKeyResponse)
            testsuite.Require().NoError(err)

    
    // From step SignalR_Restart
                signalRClientRestartResponse, err:= signalRClient.BeginRestart(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
&test.SignalRClientBeginRestartOptions{ResumeToken: \\"\\",
})
            testsuite.Require().NoError(err)
            _, err = testutil.PullResultForTest(ctx, signalRClientRestartResponse)
            testsuite.Require().NoError(err)

    
    // From step Usages_List
    usagesClient, err := test.NewUsagesClient(testsuite.subscriptionId, testsuite.cred, testsuite.options)
    testsuite.Require().NoError(err)
            usagesClientNewListPagerPager:= usagesClient.NewListPager(testsuite.location,
nil)
            for usagesClientNewListPagerPager.More() {
            }

    
    // From step SignalR_ListByResourceGroup
            signalRClientNewListByResourceGroupPagerPager:= signalRClient.NewListByResourceGroupPager(testsuite.resourceGroupName,
nil)
            for signalRClientNewListByResourceGroupPagerPager.More() {
            }

    
    // From step SignalR_ListBySubscription
            signalRClientNewListBySubscriptionPagerPager:= signalRClient.NewListBySubscriptionPager(nil)
            for signalRClientNewListBySubscriptionPagerPager.More() {
            }

    
    // From step Operations_List
    operationsClient, err := test.NewOperationsClient(testsuite.cred, testsuite.options)
    testsuite.Require().NoError(err)
            operationsClientNewListPagerPager:= operationsClient.NewListPager(nil)
            for operationsClientNewListPagerPager.More() {
            }

    
    // From step SignalR_Delete
                signalRClientDeleteResponse, err:= signalRClient.BeginDelete(testsuite.ctx,
testsuite.resourceGroupName,
resourceName,
&test.SignalRClientBeginDeleteOptions{ResumeToken: \\"\\",
})
            testsuite.Require().NoError(err)
            _, err = testutil.PullResultForTest(ctx, signalRClientDeleteResponse)
            testsuite.Require().NoError(err)
}",
}
`;
