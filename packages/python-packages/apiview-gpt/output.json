{
  "status": "Error",
  "violations": [
    {
      "rule_ids": [
        "python_design.html#python-client-naming",
        "python_design.html#python-namespaces-async"
      ],
      "line_no": 2,
      "bad_code": "class azure.contoso.ContosoAsyncManager:",
      "suggestion": "class azure.contoso.aio.ContosoAsyncClient:",
      "comment": "The class name should end with a Client suffix. The class should use an .aio suffix added to the namespace of the sync client for async clients."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-constructor-policy-arguments"
      ],
      "line_no": 3,
      "bad_code": "async def __init__(self, endpoint, credential, options: dict)",
      "suggestion": "async def __init__(self, endpoint, credential, **options)",
      "comment": "The constructor should accept optional default request options as keyword arguments."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-naming"
      ],
      "line_no": 13,
      "bad_code": "class azure.contoso.ContosoManager:",
      "suggestion": "Rename the class to 'ContosoClient' to follow the naming convention.",
      "comment": "The class name should end with a 'Client' suffix."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-constructor-policy-arguments"
      ],
      "line_no": 14,
      "bad_code": "def __init__(self, endpoint, credential, options: dict)",
      "suggestion": "Add optional default request options as keyword arguments in the constructor and pass them along to its pipeline policies.",
      "comment": "The constructor should accept optional default request options as keyword arguments."
    }
  ]
}