@page ""
@model APIViewWeb.Pages.Assemblies.RequestedReviews
@using APIViewWeb.Helpers
@using APIViewWeb.Models
@{
    ViewData["Title"] = "Requested Reviews";
    var userPreference = PageModelHelpers.GetUserPreference(Model._preferenceCache, User) ?? new UserPreferenceModel();
    TempData["UserPreference"] = userPreference;
}
<div class="mx-5 row">
    <div class="col-md-12" id="reviews-filter-partial">
        <div class="mt-3 row">
            <h3>Pending Reviews</h3>
            <div class="col-12 p-0 border rounded table-responsive shadow-sm">
                <table id="reviews-table" class="table table-sm table-hover m-0" style="width:100%">
                    <thead>
                        <tr>
                            <th scope="col" class="pl-4">Name</th>
                            <th scope="col" class="border-left pl-3">Author</th>
                            <th scope="col" class="border-left pl-3">Last Updated</th>
                            <th scope="col" class="border-left pl-3">Type</th>
                            <th scope="col" class="border-left pl-3">Requested on</th>
                            <th scope="col" class="border-left pl-3">Requested by</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ActiveAPIRevisions.Any())
                        {
                            @foreach (var apiRevision in Model.ActiveAPIRevisions)
                            {
                                var assignment = apiRevision.AssignedReviewers.First(ar => ar.AssingedTo == User.GetGitHubLogin());
                                var approvalRequestedOn = assignment.AssingedOn;
                                var requestBy = assignment.AssignedBy;

                                var truncationIndex = @Math.Min(apiRevision.PackageName.Length, 100);
                                <tr class="package-data-row">
                                    <td class="align-middle pl-4 pt-0 pb-0">
                                        @if (apiRevision.Language != null)
                                        {
                                            string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(@apiRevision.Language);
                                            @if (!string.IsNullOrEmpty(apiRevision.Files.FirstOrDefault().LanguageVariant) && apiRevision.Files.FirstOrDefault().LanguageVariant != "default")
                                            {
                                                iconClassName += "-" + apiRevision.Files.FirstOrDefault().LanguageVariant.ToLower();
                                            }
                                            <span role="img" class="mx-1 icon icon-language @iconClassName" aria-label="@apiRevision.Language @apiRevision.Files.FirstOrDefault().LanguageVariant"></span>
                                        }
                                        <a class="review-name align-middle" asp-page="./Review" asp-route-id="@apiRevision.ReviewId" asp-route-revisionId="@apiRevision.Id">@apiRevision.PackageName.Substring(0, @truncationIndex)</a>
                                        @if (apiRevision.IsApproved == true)
                                        {
                                            <i class="fas fa-check-circle text-success ml-2"></i>
                                        }
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <a username="@apiRevision.CreatedBy">@apiRevision.CreatedBy</a>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@apiRevision.LastUpdatedOn.ToLocalTime()"></span>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span>@apiRevision.APIRevisionType.ToString()</span>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@approvalRequestedOn.ToLocalTime()"></span>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <a username="@requestBy">@requestBy</a>
                                    </td>
                                </tr>
                            }
                        }
                        else 
                        {
                            <tr class="package-data-row"> 
                                <td colspan="5">No new reviews require approval.</td>
                            </tr>
                    
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="mt-3 row">
            <h3>Recently-Approved Reviews</h3>
            <div class="col-12 p-0 border rounded table-responsive shadow-sm">
                <table id="reviews-table" class="table table-sm table-hover m-0" style="width:100%">
                    <thead>
                        <tr>
                            <th scope="col" class="pl-4">Name</th>
                            <th scope="col" class="border-left pl-3">Author</th>
                            <th scope="col" class="border-left pl-3">Last Updated</th>
                            <th scope="col" class="border-left pl-3">Type</th>
                            <th scope="col" class="border-left pl-3">Approved last</th>
                            <th scope="col" class="border-left pl-3">Approved by</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ApprovedAPIRevisions.Any())
                        {
                            @foreach (var apiRevision in Model.ApprovedAPIRevisions)
                            {
                                var assignment = apiRevision.AssignedReviewers.First(ar => ar.AssingedTo == User.GetGitHubLogin());
                                var approvalRequestedOn = assignment.AssingedOn;
                                var requestBy = assignment.AssignedBy;

                                var truncationIndex = @Math.Min(apiRevision.PackageName.Length, 100);
                                <tr class="package-data-row">
                                    <td class="align-middle pl-4 pt-0 pb-0">
                                        @if (apiRevision.Language != null)
                                        {
                                            string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(@apiRevision.Language);
                                            @if (!string.IsNullOrEmpty(apiRevision.Files.FirstOrDefault().LanguageVariant) && apiRevision.Files.FirstOrDefault().LanguageVariant != "default")
                                            {
                                                iconClassName += "-" + apiRevision.Files.FirstOrDefault().LanguageVariant.ToLower();
                                            }
                                            <span role="img" class="mx-1 icon icon-language @iconClassName" aria-label="@apiRevision.Language @apiRevision.Files.FirstOrDefault().LanguageVariant"></span>
                                        }
                                        <a class="review-name align-middle" asp-page="./Review" asp-route-id="@apiRevision.ReviewId">@apiRevision.PackageName.Substring(0, @truncationIndex)</a>
                                        @if (apiRevision.IsApproved == true)
                                        {
                                            <i class="fas fa-check-circle text-success ml-2"></i>
                                        }
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <a username="@apiRevision.CreatedBy">@apiRevision.CreatedBy</a>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@apiRevision.LastUpdatedOn.ToLocalTime()"></span>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span>@apiRevision.APIRevisionType.ToString()</span>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@approvalRequestedOn.ToLocalTime()"></span>
                                    </td>
                                    <td class="align-middle border-left pl-3">
                                        <span>
                                            @foreach(var approver in apiRevision.Approvers) {
                                                 <a username="@approver"> @approver </a>
                                            }
                                        </span>
                                    </td>
                                </tr>
                            }
                        }
                        else 
                        {
                            <tr class="package-data-row">
                                <td colspan="6">No reviews have been recently approved.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>