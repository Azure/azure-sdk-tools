# External variables:
# ProjectFile - The project to build and test. This variable is defined in pipeline web ui because we want to be able to provide it at queue time and that isn't supported in yaml yet.
# VersioningProps - A collection of extra msbuild versioning properties like OfficialBuildId, PreReleaseVersionLabel, and DotNetFinalVersionKind

trigger:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - src/dotnet/Azure.ClientSdk.Analyzers

pr:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - src/dotnet/Azure.ClientSdk.Analyzers

resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20210603.1

variables:
  DotNetCoreVersion: '3.0.100'
  NugetSecurityAnalysisWarningLevel: 'none'

stages:
  - stage: 'Build_and_Test'
    jobs:
      - job: 'Build'

        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DotNetCoreInstaller@0
            displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
            inputs:
              version: '$(DotNetCoreVersion)'

          - script: 'dotnet pack $(ProjectFile) -o $(Build.ArtifactStagingDirectory) -warnaserror $(VersioningProps)'
            displayName: 'Build and Package'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0

          - task: PublishBuildArtifacts@1
            condition: succeededOrFailed()
            displayName: 'Publish Artifacts'
            inputs:
              ArtifactName: packages

      - job: 'Test'

        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DotNetCoreInstaller@0
            displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
            inputs:
              version: '$(DotNetCoreVersion)'

          - task: DotNetCoreCLI@2
            displayName: 'Build & Test'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
            inputs:
              command: test
              projects: '$(ProjectFile)'
              arguments: --logger trx
              publishTestResults: false

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/*.trx'
              testRunTitle: 'Windows DotNet $(DotNetCoreVersion)'
              testResultsFormat: 'VSTest'
              mergeTestResults: true

  - ${{ if ne(variables['System.TeamProject'], 'Public') }}:
    - template: pipelines/stages/net-release-to-feed.yml@azure-sdk-build-tools
