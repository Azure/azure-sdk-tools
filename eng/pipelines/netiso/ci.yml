jobs:
  - job: testnetiso
    pool:
      name: bebroder-test-netiso-wus2
    displayName: test-netiso
    steps:
      - checkout: self
      - task: AzureCLI@2
        displayName: NetIso
        inputs:
          azureSubscription: azure-sdk-tests
          azurePowerShellVersion: LatestVersion
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $ITERATION = "5"
            $GROUP = "bebroder-test-netiso-multi"
            $OPENACCOUNT = "bebrodernetisoopen$ITERATION"
            $CLOSEDACCOUNT = "bebrodernetisoclosed$ITERATION"
            $CROSSREGIONACCOUNT = "bebrodernetisocross$ITERATION"
            $CONTAINER = "test"
            $BLOB = "test"

            $OPENCOSMOSACCOUNT = "bebrodernetisoopen$ITERATION"
            $CLOSEDCOSMOSACCOUNT = "bebrodernetisoclosed$ITERATION"
            $CROSSREGIONCOSMOSACCOUNT = "bebrodernetisocross$ITERATION"

            Write-Host "test data" > testdata

            az account set -s "Azure SDK Developer Playground"

            Write-Host "===================================================================================================="
            Write-Host "Getting key for open account open"
            $KEY = az storage account keys list --resource-group $GROUP --account-name $OPENACCOUNT --query '[0].value' -o tsv
            Write-Host "Downloading blob from open account"
            az storage blob download  --account-name $OPENACCOUNT --account-key $KEY --container-name $CONTAINER --file testdataopen --name $BLOB -o tsv
            Write-Host "Printing data from open account"
            cat testdataopen
            Write-Host "testing upload to open account"
            az storage blob upload --account-name $OPENACCOUNT --account-key $KEY --container-name $CONTAINER --file testdata --name $BLOB --overwrite

            Write-Host "===================================================================================================="
            Write-Host "Getting key from net iso account closed"
            $KEY = az storage account keys list --resource-group $GROUP --account-name $CLOSEDACCOUNT --query '[0].value' -o tsv
            Write-Host "Downloading blob from net iso account closed"
            az storage blob download  --account-name $CLOSEDACCOUNT --account-key $KEY --container-name $CONTAINER --file testdataclosed --name $BLOB -o tsv
            Write-Host "Printing data from net iso account closed"
            cat testdataclosed
            Write-Host "testing upload to closed account"
            az storage blob upload --account-name $CLOSEDACCOUNT --account-key $KEY --container-name $CONTAINER --file testdata --name $BLOB --overwrite

            Write-Host "===================================================================================================="
            Write-Host "Getting key from net iso account cross"
            $KEY = az storage account keys list --resource-group $GROUP --account-name $CROSSREGIONACCOUNT --query '[0].value' -o tsv
            Write-Host "Downloading blob from net iso account cross"
            az storage blob download  --account-name $CROSSREGIONACCOUNT --account-key $KEY --container-name $CONTAINER --file testdatacross --name $BLOB -o tsv
            Write-Host "Printing data from net iso account cross"
            cat testdatacross
            Write-Host "testing upload to cross account"
            az storage blob upload --account-name $CROSSREGIONACCOUNT --account-key $KEY --container-name $CONTAINER --file testdata --name $BLOB --overwrite

            Write-Host "===================================================================================================="
            # https://downloads.mongodb.com/compass/mongodb-mongosh_2.2.6_amd64.deb | Out-Null
            # sudo dpkg -i ./mongodb-mongosh_2.2.6_amd64.deb
            #Write-Host "Getting mongo shell"
            #wget https://github.com/mongodb-js/mongosh/releases/download/v2.2.6/mongodb-mongosh-shared-openssl3_2.2.6_amd64.deb
            #sudo apt remove mongodb-mongosh -y
            #sudo dpkg -i mongodb-mongosh-shared-openssl3_2.2.6_amd64.deb

            Write-Host "===================================================================================================="
            Write-Host "Getting creds for open account"
            $OPEN_KEYS = az cosmosdb keys list --resource-group $GROUP --name $OPENCOSMOSACCOUNT --output tsv --query primaryMasterKey
            $OPEN_PRIMARY_KEY = echo $OPEN_KEYS | cut -f1
            $OPEN_CONNECTION_STRING = "mongodb://${OPENCOSMOSACCOUNT}:${OPEN_PRIMARY_KEY}@${OPENCOSMOSACCOUNT}.mongo.cosmos.azure.com:10255/test?ssl=true&replicaSet=globaldb"
            Write-Host "Running mongo query"
            docker run -p 28000:27017 mongo:latest bash -c "mongosh '$OPEN_CONNECTION_STRING' --eval 'db.test.find().pretty()'"

            Write-Host "===================================================================================================="
            Write-Host "Getting creds for closed account"
            $CLOSED_KEYS = az cosmosdb keys list --resource-group $GROUP --name $CLOSEDCOSMOSACCOUNT --output tsv --query primaryMasterKey
            $CLOSED_PRIMARY_KEY = echo $CLOSED_KEYS | cut -f1
            $CLOSED_CONNECTION_STRING = "mongodb://${CLOSEDCOSMOSACCOUNT}:${CLOSED_PRIMARY_KEY}@${CLOSEDCOSMOSACCOUNT}.mongo.cosmos.azure.com:10255/test?ssl=true&replicaSet=globaldb"
            Write-Host "Running mongo query"
            docker run -p 28000:27017 mongo:latest bash -c "mongosh '$CLOSED_CONNECTION_STRING' --eval 'db.test.find().pretty()'"

            Write-Host "===================================================================================================="
            Write-Host "Getting creds for cross account"
            $CROSSREGION_KEYS = az cosmosdb keys list --resource-group $GROUP --name $CROSSREGIONCOSMOSACCOUNT --output tsv --query primaryMasterKey
            $CROSSREGION_PRIMARY_KEY = echo $CROSSREGION_KEYS | cut -f1
            $CROSSREGION_CONNECTION_STRING = "mongodb://${CROSSREGIONCOSMOSACCOUNT}:${CROSSREGION_PRIMARY_KEY}@${CROSSREGIONCOSMOSACCOUNT}.mongo.cosmos.azure.com:10255/test?ssl=true&replicaSet=globaldb"
            Write-Host "Running mongo query"
            docker run -p 28000:27017 mongo:latest bash -c "mongosh '$CROSSREGION_CONNECTION_STRING' --eval 'db.test.find().pretty()'"
