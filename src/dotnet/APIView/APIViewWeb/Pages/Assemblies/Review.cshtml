@page "{id}/{revisionId?}"
@model APIViewWeb.Pages.Assemblies.ReviewPageModel
@{
    Layout = "ReviewLayout";
    ViewData["Title"] = Model.Review.DisplayName;
}

<div class="container-fluid">
    <div class="row mt-2 mb-1 pl-1">
        <div class="col">
            <h3>
                @if (Model.Review.ServiceName != null)
                {
                    @Model.Review.ServiceName
                    <span>&nbsp;|&nbsp;</span>
                }
                <small class="text-muted">@Model.Review.PackageDisplayName&nbsp;&nbsp;<span class="badge badge-info"><em>@Model.Review.Language</em></span></small>
            </h3>
        </div>
    </div>
    <div class="row mb-1">
        <div class="col-md-6 my-1">
            <div class="d-flex flex-md-wrap flex-lg-nowrap justify-content-between">
                <div class="input-group input-group-sm shadow-sm mr-2 my-1" id="rXXeview-select-box">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="rXXeview-input-group-select">Review</label>
                    </div>
                    <select class="custom-select" data-width="100%" id="rXXeview-input-group-select">
                        <option selected>azure-core-amqp (version 2.3.0-beta.1) - Candidate 2.3.0-beta-1</option>
                        <option value="1">azure-security-attestation (version 1.0.0-beta.2)</option>
                        <option value="2">@@azure/communication-phone-numbers - Phone Numbers including basic Short Codes client functionalitie</option>
                        <option value="3">azure-communication-phonenumbers (version 1.0.3)</option>
                    </select>
                </div>
                <div class="input-group input-group-sm shadow-sm mr-2 my-1" id="revision-select-input-group">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="revision-select-input-group">Revision</label>
                    </div>
                    <select class="custom-select" data-width="100%" id="revisions-custom-select">
                        @foreach (var revision in Model.Review.Revisions.Reverse())
                        {
                            var optionName = revision.IsApproved ? $"{@revision.DisplayName} [APPROVED]" : @revision.DisplayName;
                            var urlValue = @Url.ActionLink("Review", "Assemblies", new {
                                id = @Model.Review.ReviewId,
                                revisionId = @revision.RevisionId,
                                doc = @Model.ShowDocumentation
                            });
                            if (@revision.DisplayName == @Model.Revision.DisplayName)
                            {
                                <option selected value="@urlValue">@optionName</option>
                            }
                            else
                            {
                                <option value="@urlValue">@optionName</option>
                            }
                        }
                    </select>
                </div>
                @if (@Model.PreviousRevisions.Any())
                {
                    <div class="input-group input-group-sm shadow-sm mr-2 my-1" id="diff-select-input-group">
                        <div class="input-group-prepend">
                            @if (Model.DiffRevisionId != null)
                            {
                                var urlValue = @Url.ActionLink("Review", "Assemblies", new {
                                    id = @Model.Review.ReviewId,
                                    revisionId = "",
                                    doc = @Model.ShowDocumentation
                                });
                                <button class="btn btn-outline-secondary diff-button" type="button" value="@urlValue">Diff with</button>
                            }
                            else
                            {
                                var urlValue = @Url.ActionLink("Review", "Assemblies", new {
                                    id = @Model.Review.ReviewId,
                                    diffRevisionId = @Model.PreviousRevisions.Last().RevisionId,
                                    doc = @Model.ShowDocumentation,
                                    diffOnly = @Model.ShowDiffOnly
                                });
                                <button class="btn btn-outline-secondary diff-button" type="button" value="@urlValue">Diff</button>
                            }
                        </div>
                        <select class="custom-select" data-width="100%" id="diff-custom-select">
                            if (@Model.DiffRevisionId == null)
                            {
                                <option value="" selected></option>
                            }
                            @foreach (var revision in Model.PreviousRevisions.Reverse())
                            {
                                var optionName = revision.IsApproved ? $"{@revision.DisplayName} [APPROVED]" : @revision.DisplayName;
                                var urlValue = @Url.ActionLink("Review", "Assemblies", new {
                                    id = @Model.Review.ReviewId,
                                    diffRevisionId = @revision.RevisionId,
                                    doc = @Model.ShowDocumentation,
                                    diffOnly = @Model.ShowDiffOnly
                                });
                                if (@Model.DiffRevisionId != null)
                                {
                                    if (@Model.DiffRevisionId == @revision.RevisionId)
                                    {
                                        <option value="@urlValue" selected>@optionName</option>
                                    }
                                    else
                                    {
                                        <option value="@urlValue">@optionName</option>
                                    }
                                }
                                else
                                {
                                    if (@Model.DiffRevisionId != @revision.RevisionId)
                                    {
                                        <option value="@urlValue">@optionName</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-6 my-1">
            <div class="float-right ml-2 my-1">
                <form asp-resource="@Model.Review" class="form-inline" method="post" asp-page-handler="ToggleClosed">
                    @if (Model.Review.IsClosed)
                    {
                        <button type="submit" class="btn btn-sm border shadow-sm btn-light">
                            <i class="fa fa-sm fa-undo" aria-hidden="true"></i>&nbsp;&nbsp;Reopen
                        </button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-sm border shadow-sm btn-light">
                            <i class="far fa-window-close" aria-hidden="true"></i>&nbsp;&nbsp;Close
                        </button>
                    }
                </form>
            </div>
            <div class="float-right ml-2 my-1">
                <form asp-resource="@Model.Review" class="form-inline" method="post" asp-page-handler="ToggleSubscribed">
                    @if (Model.Review.GetUserEmail(User) != null)
                    {
                        if (Model.Review.IsUserSubscribed(User))
                        {
                            <button type="submit" class="btn border btn-sm shadow-sm btn-light">
                                <i class="far fa-minus-square" aria-hidden="true"></i>&nbsp;&nbsp;Unsubscribe
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn border btn-sm shadow-sm btn-light">
                                <i class="far fa-plus-square" aria-hidden="true"></i>&nbsp;&nbsp;Subscribe
                            </button>
                        }
                    }
                    else
                    {
                        <button type="submit" class="btn btn-sm shadow-sm btn-light" disabled data-placement="bottom" data-toggle="tooltip" title="Link a microsoft.com email to your Github account to subscribe">
                            <i class="fa fa-plus-square" aria-hidden="true"></i>&nbsp;&nbsp;Subscribe
                        </button>
                    }
                </form>
            </div>
            <div class="dropdown d-inline-block float-right ml-2 my-1">
                <a class="btn btn-light btn-sm border shadow-sm dropdown-toggle" href="#" role="button" data-toggle="dropdown">
                    <i class="fas fa-sm fa-sliders-h"></i>&nbsp;&nbsp;Options
                </a>
                <div class="dropdown-menu dropdown-menu-right">
                    <span class="dropdown-item checkbox">
                        <label>
                            <input type="checkbox" checked="checked" id="show-comments-checkbox">
                            &nbsp;Show comments
                        </label>
                    </span>
                    <span class="dropdown-item" id="show-documentation-component">
                        <input asp-for="@Model.ShowDocumentation" class="show-doc-checkbox">
                        <a class="text-dark show-document" asp-all-route-data=@Model.GetRoutingData(diffRevisionId: Model.DiffRevisionId, showDocumentation: !Model.ShowDocumentation, showDiffOnly: Model.ShowDiffOnly)>
                            <label>&nbsp;Show documentation</label>
                        </a>
                    </span>
                    <span class="dropdown-item checkbox">
                        <label>
                            <input type="checkbox" id="hide-line-numbers">
                            &nbsp;Hide Line Number
                        </label>
                    </span>
                    @if (!String.IsNullOrEmpty(Model.DiffRevisionId))
                    {
                        <span class="dropdown-item">
                            <input asp-for="@Model.ShowDiffOnly" class="show-diffonly-checkbox">
                            <a class="text-dark show-diffonly" asp-all-route-data=@Model.GetRoutingData(diffRevisionId: Model.DiffRevisionId, showDocumentation: Model.ShowDocumentation, showDiffOnly: !Model.ShowDiffOnly)>
                                <label>&nbsp;Show only diff</label>
                            </a>
                        </span>
                    }
                </div>
            </div>
            <div class="float-right my-1">
                <form asp-resource="@Model.Review" class="form-inline" asp-page-handler="ToggleApproval" method="post" asp-requirement="@ApproverRequirement.Instance">
                    <input type="hidden" name="revisionId" value="@Model.Revision.RevisionId" />
                    @if (Model.DiffRevision == null || Model.DiffRevision.Approvers.Count > 0)
                    {
                        @if(Model.Revision.Approvers.Contains(User.GetGitHubLogin()))
                        {
                            <button type="submit" class="btn btn-sm shadow-sm btn-light ml-2">
                                <i class="fa fa-sm fa-undo" aria-hidden="true"></i>&nbsp;&nbsp;Revert Approval
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-sm shadow-sm btn-success ml-2">
                                <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve
                            </button>
                        }
                    }
                    else
                    {
                        @if(Model.Revision.Approvers.Contains(User.GetGitHubLogin()))
                        {
                            <button type="submit" class="btn btn-sm shadow-sm btn-light ml-2" disabled data-placement="bottom" data-toggle="tooltip" title="API review cannot be approved when comparing against unapproved revision.">
                                <i class="fa fa-sm fa-thumbs-down" aria-hidden="true"></i>&nbsp;&nbsp;Revert Approval
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-sm shadow-sm btn-light ml-2" disabled data-placement="bottom" data-toggle="tooltip" title="API review cannot be approved when comparing against unapproved revision.">
                                <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve
                            </button>
                        }
                    }
                </form>
            </div>
            <div class="float-right ml-2 my-1">
                @{
                    var popOverContent = $"<b>{Model.ActiveConversations}</b> active revision threads.<br><b>{Model.TotalActiveConversations}</b> total active threads.<br>"
                    + $"<b>Current Revision:</b> <em>{@Model.Revision.DisplayName}</em>";
                    @if (Model.DiffRevisionId != null)
                    {
                        popOverContent += $"<br><b>Current Diff:</b> <em>{@Model.DiffRevision?.DisplayName}</em>";
                    }
                    <button type="button" class="btn btn-info btn-sm shadow-sm" data-placement="bottom" data-trigger="focus" data-toggle="popover" data-html="true" data-title="Page Info" data-content="@popOverContent">
                        <i class="far fa-comment-alt mr-2"></i><span class="badge badge-light">@Model.ActiveConversations / @Model.TotalActiveConversations</span>
                    </button>
                }
            </div>
            <div class="float-right ml-2 my-1">
                @if (Model.Revision.Approvers.Count > 0)
                {
                    var approvers = String.Join(", ", Model.Revision.Approvers);
                    <button type="button" class="btn btn-sm shadow-sm btn-success" data-placement="bottom" data-trigger="focus" data-toggle="popover" data-title="Approvers" data-content="@approvers">
                        <i class="fas fa-check-circle"></i> APPROVED
                        <span class="badge badge-light">@Model.Revision.Approvers.Count</span>
                    </button>
                }
                else
                {
                    <button type="button" class="btn btn-light btn-sm shadow-sm">
                        PENDING
                    </button>
                }
            </div>
        </div>
    </div>
    <div class="row px-3" data-review-id="@Model.Review.ReviewId" data-revision-id="@Model.Revision.RevisionId" data-language="@Model.Review.Language">
        <div id="review-left" class="col-2 rounded-1 border">
            <div class="namespace-view">
                @if (Model.CodeFile != null)
                {
                    <partial name="Shared/Navigation" model=" Model.CodeFile.Navigation" />
                }
            </div>
        </div>

        <div id="review-right" class="col-10 rounded-1 border">
            <table class="code-window">
                <tbody>
                    @foreach (var line in Model.Lines)
                    {
                        <partial name="_CodeLine" model="@line" />
                    }
                </tbody>
            </table>
        </div>
    </div>
    <partial name="_CommentFormPartial" /> 
</div>