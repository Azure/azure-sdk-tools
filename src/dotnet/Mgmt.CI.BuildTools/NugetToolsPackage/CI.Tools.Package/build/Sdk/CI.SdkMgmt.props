<?xml version="1.0" encoding="utf-8" ?>
<Project>
  <PropertyGroup>
    <RootDir>$(RepoRoot)</RootDir>    
    <RootDirNoTrailSep>$([System.IO.Path]::GetFullPath($(RootDir)).Trim('\'))</RootDirNoTrailSep>
  </PropertyGroup>
  
  <PropertyGroup>
    <pkg_root_RepoRoot>$(RootDirNoTrailSep)</pkg_root_RepoRoot>
    <pkg_root_RepoSrcDir>$(pkg_root_RepoRoot)\src</pkg_root_RepoSrcDir>
    <pkg_root_RepoSdkDir>$(pkg_root_RepoRoot)\sdk</pkg_root_RepoSdkDir>
    <pkg_root_RepoToolsDir>$(pkg_root_RepoRoot)\tools</pkg_root_RepoToolsDir>
    <pkg_root_RepoNugetFeedDir>$(pkg_root_RepoToolsDir)\LocalNugetFeed</pkg_root_RepoNugetFeedDir>
    <pkg_root_RepoTestResultsDir>$(pkg_root_RepoRoot)\TestResults</pkg_root_RepoTestResultsDir>
    <pkg_root_RepoBinariesDir>$(pkg_root_RepoRoot)\binaries</pkg_root_RepoBinariesDir>
    <!-- $(PackageOutputPath) is being set at root\Directory.Build.props -->
    <pkg_root_RepoNugPkgOutputDir>$(PackageOutputPath)</pkg_root_RepoNugPkgOutputDir>
  </PropertyGroup>

  <PropertyGroup>
    <Ignored_BinariesDir>$(pkg_root_RepoRoot)\binaries</Ignored_BinariesDir>
    <Ignored_NugPkgOutPutDir>$(Ignored_BinariesDir)\packages</Ignored_NugPkgOutPutDir>
  </PropertyGroup>
  <PropertyGroup>
    <PkgCurrentDir>$(MSBuildThisFileDirectory)</PkgCurrentDir>
    <PkgRootRelPath>$(PkgCurrentDir)..\</PkgRootRelPath>
    <PkgRootAbsPath>$([System.IO.Path]::GetFullPath($(PkgRootRelPath)))</PkgRootAbsPath>
    <PkgRootTrailSep>$(PkgRootAbsPath)</PkgRootTrailSep>
    <PkgRootDirPath>$([System.IO.Path]::GetFullPath($(PkgRootTrailSep)).Trim('\'))</PkgRootDirPath>
  </PropertyGroup>
  <PropertyGroup>
    <PkgSdkDirPath>$(PkgRootDirPath)\Sdk</PkgSdkDirPath>
    <PkgTaskDirPath>$(PkgRootDirPath)\tasks</PkgTaskDirPath>
    <PkgTargetDirPath>$(PkgRootDirPath)\targets</PkgTargetDirPath>
    <PkgPsModulesDirPath>$(PkgRootDirPath)\psModules</PkgPsModulesDirPath>
  </PropertyGroup>

  <PropertyGroup>
    <DotNetRuntimeContext>$(MSBuildRuntimeType)</DotNetRuntimeContext>
    <FxVersionTasksToUse Condition=" '$(DotNetRuntimeContext)' == 'Core' ">netstandard2.0</FxVersionTasksToUse>
    <FxVersionTasksToUse Condition=" '$(FxVersionTasksToUse)' == '' AND '$(DotNetRuntimeContext)' != 'Core' ">net461</FxVersionTasksToUse>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <IsOSX Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true' ">true</IsOSX>
    <IsLinux Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true' ">true</IsLinux>
  </PropertyGroup>

  <PropertyGroup Label="Detect if it's a test project">
    <IsTestProject Condition=" $(MSBuildThisProjectFileName.EndsWith('.text.csproj')) ">true</IsTestProject>
    <IsTestProject Condition=" '$(IsTestProject)' == '' OR $(MSBuildThisProjectFileName.EndsWith('.tests.csproj')) ">true</IsTestProject>
    <IsTestProject Condition=" '$(IsTestProject)' == '' OR $(MSBuildThisProjectFileName.EndsWith('.Test.csproj')) ">true</IsTestProject>
    <IsTestProject Condition=" '$(IsTestProject)' == '' OR $(MSBuildThisProjectFileName.EndsWith('.Tests.csproj')) ">true</IsTestProject>
  </PropertyGroup>

  <PropertyGroup Label="Detect if SDK project">
    <IsSdkProject Condition=" '$(IsTestProject)' == '' OR '$(IsTestProject)' != 'true' ">true</IsSdkProject>
  </PropertyGroup>

  <Import Project="..\targets\core\_Directory.Build.props" />
  <!-- <Import Condition=" '$(IsTestProject)' == 'true' " Project="..\targets\core\_test.props" />
  <Import Condition=" '$(IsSdkProject)' == 'true' " Project="..\targets\core\_AzSdk.props" /> -->
</Project>