# Cloud Configuration will be splat into parameters of `Add-AzEnvironment`. It
# should be JSON in the form (not all fields are required):
# {
#   "Name": "<environment name>",
#   "PublishSettingsFileUrl": "<publish settings file url>",
#   "ServiceEndpoint": "<service endpoint>",
#   "ManagementPortalUrl": "<management portal url>",
#   "ActiveDirectoryEndpoint": "<active directory endpoint>",
#   "ActiveDirectoryServiceEndpointResourceId": "<active directory service endpoint resource id>",
#   "ResourceManagerEndpoint": "<resource manager endpoint>",
#   "GalleryEndpoint": "<gallery endpoint>",
#   "GraphEndpoint": "<graph endpoint>",
#   "GraphAudience": "<graph audience>",
#   "AzureKeyVaultDnsSuffix": "<key vault suffix>",
#   "AzureKeyVaultServiceEndpointResourceId": "<key vault service endpoint resource id>"
# }

steps:
  - bash: sudo chown -R runner ~/.Azure
    displayName: (MacOS) Grant access to ~/.Azure
    condition: contains(variables['OSVmImage'], 'mac')

  # This alternative invocation is being setup so that PowerShell will use
  # TLS 1.2 when downloading from the PowerShell Gallery. We are seeing instances
  # of failed downloads similar to reported in this article and it seemed this
  # this helped resolve the issue. I've adding it as a conditioned step because
  # I'm not confident that this is the solution ... so I'd like to test it on a few
  # pipelines prior to making it the default.
  # Article: https://techcommunity.microsoft.com/t5/windows-powershell/failed-downloading-az-and-other-modules-for-powershell/m-p/1292985


  # New-TestResources command requires Az module with TLS 1.2
  - pwsh: |
      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Install-Module -Name Az -Scope CurrentUser -AllowClobber -Force -Verbose
    condition: and(succeeded(), eq(variables.UseTls12, true))
    displayName: Install Azure PowerShell module (TLS 1.2)

  # New-TestResources command requires Az module with system default TLS version
  - pwsh: |
      Install-Module -Name Az -Scope CurrentUser -AllowClobber -Force -Verbose
    condition: and(succeeded(), ne(variables.UseTls12, true))
    displayName: Install Azure PowerShell module

  - task: Powershell@2
    inputs:
      displayName: Register Dogfood environment
      targetType: inline
      pwsh: true
      script: |
        $environmentSpec = @"
          $(env-config-dogfood)
        "@ | ConvertFrom-Json -AsHashtable;
        Add-AzEnvironment @environmentSpec
