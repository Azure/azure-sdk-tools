# NOTE: Please refer to https://aka.ms/azsdk/engsys/ci-yaml before editing this file.
trigger:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/apiview/emitters/typespec-apiview

pr:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/apiview/emitters/typespec-apiview

extends:
  template: /eng/pipelines/templates/stages/1es-redirect.yml
  parameters:
    stages:
      - stage: 'Build'
        variables:
          - template: /eng/pipelines/templates/variables/image.yml
          - name: NodeVersion
            value: '16.x'
          - name: TypeSpecEmitterDirectory
            value: 'tools/apiview/emitters/typespec-apiview'
          - name: ArtifactName
            value: 'apiview'
        jobs:
          - job: 'Build'

            pool:
              name: $(LINUXNEXTPOOL)
              image: $(LINUXNEXTVMIMAGE)
              os: linux

            steps:
              - task: NodeTool@0
                inputs:
                  versionSpec: '$(NodeVersion)'
                displayName: 'Use NodeJS $(NodeVersion)'

              - script: |
                  npm install
                workingDirectory: $(TypeSpecEmitterDirectory)
                displayName: "Install npm packages for TypeSpec emiter"

              - script: |
                  npm run-script build
                workingDirectory: $(TypeSpecEmitterDirectory)
                displayName: "Build TypeSpec emitter"

              - script: |
                  npm run-script test
                workingDirectory: $(TypeSpecEmitterDirectory)
                displayName: "Test TypeSpec emitter"

              - pwsh: |
                  npm pack $(TypeSpecEmitterDirectory)
                  Copy-Item ./*.tgz $(Build.ArtifactStagingDirectory)
                displayName: "Pack TypeSpec Emitter"

              - task: 1ES.PublishPipelineArtifact@1
                inputs:
                  targetPath: '$(Build.ArtifactStagingDirectory)'
                  artifactName: $(ArtifactName)

      - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'), ne(variables['Skip.PublishPackage'], 'true'))}}:
        - stage: 'Release'
          dependsOn: Build
          condition: Succeeded()
          variables:
            - template: /eng/pipelines/templates/variables/image.yml
            - name: FeedRegistry
              value: 'https://registry.npmjs.org/'
            - name: ArtifactName
              value: 'apiview'
          jobs:
          - job: PublishPackage
            displayName: 'Publish typespec-apiview package to devops feed'
            pool:
              name: $(LINUXNEXTPOOL)
              image: $(LINUXNEXTVMIMAGE)
              os: linux
            steps:
            - checkout: none
            - download: current

            - pwsh: |
                $detectedPackageName=Get-ChildItem $(Pipeline.Workspace)/$(ArtifactName)/*.tgz
                Write-Host "Detected package name: $detectedPackageName"
                $registry="$(FeedRegistry)"
                $regAuth=$registry.replace("https:","")
                $env:NPM_TOKEN="$(azure-sdk-npm-token)"
                npm config set $regAuth`:_authToken=`$`{NPM_TOKEN`}
                Write-Host "Publishing to $($regAuth)"
                Write-Host "npm publish $detectedPackageName --registry=$registry --always-auth=true --access='public'"
                npm publish $detectedPackageName --registry=$registry --always-auth=true --access="public"
              displayName: Publish package
