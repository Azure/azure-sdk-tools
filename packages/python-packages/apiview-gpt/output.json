{
  "status": "Error",
  "violations": [
    {
      "rule_ids": [
        "python_design.html#python-client-naming",
        "python_design.html#python-namespaces-async"
      ],
      "line_no": 2,
      "bad_code": "class azure.contoso.ContosoAsyncManager:",
      "suggestion": "class azure.contoso.aio.ContosoManagerClient:",
      "comment": "The class name should end with 'Client' and the namespace for async clients should have '.aio' suffix."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-constructor-policy-arguments"
      ],
      "line_no": 3,
      "bad_code": "async def __init__(self, endpoint, credential, options: dict)",
      "suggestion": "def __init__(self, endpoint, credential, **kwargs)",
      "comment": "The constructor should accept optional default request options as keyword arguments and pass them along to its pipeline policies."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-naming",
        "python_design.html#python-client-separate-sync-async"
      ],
      "line_no": 13,
      "bad_code": "class azure.contoso.ContosoManager:",
      "suggestion": "class azure.contoso.ContosoClient:\n...\nclass azure.contoso.aio.ContosoClient:",
      "comment": "The class name should end with a 'Client' suffix. The class should provide separate classes for synchronous and asynchronous operations."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-constructor-policy-arguments"
      ],
      "line_no": 14,
      "bad_code": "def __init__(\nself,\nendpoint,\ncredential,\noptions: dict\n)",
      "suggestion": "def __init__(\nself,\nendpoint,\ncredential,\n**kwargs\n)",
      "comment": "The class should accept optional default request options as keyword arguments and pass them along to its pipeline policies."
    },
    {
      "rule_ids": [
        "python_design.html#python-client-naming",
        "python_design.html#python-client-separate-sync-async"
      ],
      "line_no": 30,
      "bad_code": "class azure.contoso.WidgetResult:",
      "suggestion": "Provide two separate client classes for synchronous and asynchronous operations.",
      "comment": "Service client types should be named with a Client suffix. Do not combine async and sync operations in the same class."
    }
  ]
}