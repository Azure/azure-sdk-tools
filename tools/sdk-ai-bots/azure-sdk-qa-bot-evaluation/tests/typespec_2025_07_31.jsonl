{"testcase": "Looking for examples on running TypeSpec in ADO Pipelines", "query": "title: Looking for examples on running TypeSpec in ADO Pipelines\n\nquestion: We're looking to work in ADO internally before promoting swagger to github - is there any examples of teams using the TypeSpec method for swagger internally vai ADO pipelines?", "ground_truth": "https://azure.github.io/typespec-azure/docs/howtos/rest-api-publish/buildpipelines/#_top\nbut this is only about typespec itself. If you plan to merge in the spec repo later there is many additional validations that will not be verified this way\nA large set of them are available to install and run locally: [azure-rest-api-specs/documentation/SwaggerValidationTools.md at master · Azure/azure-rest-api-specs](https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/SwaggerValidationTools.md):\n```\nThere are some tools that can help you make sure your specifications conform to the accepted guidelines. Better upfront validation before the final pull request is sent will result in quicker turnaround time.\nValidation tools available locally\nThe various tools mentioned above are also available for local download.\nInstall Node.js (7.10.0 or greater)\nLinter Validator:\n- `npm install -g autorest`\n-  `autoRest <path to readme.md> --azure-validator=true`\nStatic Validator (Semantic):\n- `npm install -g oav`\n- `bash-3.2$ oav validate-spec <spec-path>`\nStatic Validator (Model):\n- `npm install -g oav`\n- `bash-3.2$ oav validate-example <spec-path>`\nSwagger diff tool\n- `npm install -g oad@0.1.7`\n- `bash-3.2$ oad compare <old-spec> <new-spec>`\n```\nThe TypeSpec validation tool (tsv) is also available locally, but for now it's only available in the azure-rest-api-specs repo and the package is not published. You can clone the repo and run it from there, though it assumes everything is run from within that repo, so it may have issues elsewhere.\nThe current focus for engineering system improvements is the azure-rest-api-specs repo itself. You can use draft PRs to validate work in progress, and some of the checks can be run locally—with varying levels of usability.", "context": "", "response_length": 1781}
{"testcase": "TypeSpec Validation error", "query": "title: TypeSpec Validation error\n\nquestion: I have error: https://github.com/Azure/azure-rest-api-specs/actions/runs/16475997770/job/46577654359?pr=35887:\n```\nRule Compile failed\n{\"not_added\":[],\"conflicted\":[],\"created\":[],\"deleted\":[],\"modified\":[\"specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2025-03-03/GalleryRP.json\"],\"renamed\":[],\"files\":[{\"path\":\"specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2025-03-03/GalleryRP.json\",\"index\":\" \",\"working_dir\":\"M\"}],\"staged\":[],\"ahead\":0,\"behind\":0,\"current\":\"HEAD\",\"tracking\":null,\"detached\":true}diff --git a/specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2025-03-03/GalleryRP.json b/specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2025-03-03/GalleryRP.json\nindex 58f42ef3f..cc93d3906 100644\n--- a/specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2025-03-03/GalleryRP.json\n+++ b/specification/compute/resource-manager/Microsoft.Compute/GalleryRP/stable/2025-03-03/GalleryRP.json\n@@ -7079,8 +7079,7 @@\n\"description\": \"Optional. Any input parameters that needs to passed to the script and are accessed within the script for its execution.\",\n\"items\": {\n\"$ref\": \"#/definitions/GalleryScriptParameter\"\n-          },\n-          \"x-ms-identifiers\": []\n+          }\n}\n},\n\"required\": [\nFiles have been changed after `tsp compile`. Run `tsp compile` and ensure all files are included in your change.\nError: TypeSpec Validation failed for project specification/compute/Gallery.Management run the following command locally to validate.\n> npm ci\n> npx tsv specification/compute/Gallery.Management\nFor more detailed docs see https://aka.ms/azsdk/specs/typespec-validation\n```\nIs it because I have\n```\n@@ -7079,8 +7079,7 @@\n\"description\": \"Optional. Any input parameters that needs to passed to the script and are accessed within the script for its execution.\",\n\"items\": {\n\"$ref\": \"#/definitions/GalleryScriptParameter\"\n-          },\n-          \"x-ms-identifiers\": []\n+          }\n}\n},\n\"required\": [\n```\nwhere x-ms-identifier is empty? That is intended.", "ground_truth": "The swagger generated by TypeSpec is constantly changing across TypeSpec versions.  Do you believe the new swagger is incorrect?\nAlso, keep in mind the version of TypeSpec may be different in main, the base and source branches of your PR, and locally.  Unless you think the new generated swagger is incorrect, you want to update forward.\nx-ms-identifier is no longer needed https://github.com/Azure/typespec-azure/issues/2868:\n```\nissue 2868:\ntitle: [Deprecation] x-ms-identifiers extension is no longer useful\ncontent: As title, and confirmed by @cweining, this swagger extension is completely useless for them who is from the original team that added this extension in swagger. Please remove it from typespec-autorest emitter\n```", "context": "", "response_length": 731}
{"testcase": "Define Proxy object with 200/202 Http response", "query": "title: Define Proxy object with 200/202 Http response\n\nquestion: How do I define a Put API for ARM proxy object which should return 200 or 202 success response .  Example : ProxyResource", "ground_truth": "You shouldn't.  PUT operations should return 200 and 201, per the RPC.  There are some templates that allow overriding the default responses, but this would only be appropriate for older APIs.  Newer APIs should not define such operations.", "context": "", "response_length": 239}
{"testcase": "Generating Examples in typespec/swagger", "query": "title: Generating Examples in typespec/swagger\n\nquestion: Objective :  Generating MinMax set examples\nPR :[Introduce first Public Preview API version for microsoft.fileshares (2025-06-01-preview) by afedyashov · Pull Request #36135 · Azure/azure-rest-api-specs](https://github.com/Azure/azure-rest-api-specs/pull/36135)\nProblem 1 :  How do we control naming\noav generate-examples is updating swagger as \"Operations_List_MinimumSet_Gen\"\nnpx tsv  updates the swagger as \"Operations_List_MinimumSet\":\n```\n+ \"Operations_List_MinimumSet\": {\n\"$ref\": \"./examples/Operations_List_MinimumSet_Gen.json\"\n}\n```\nProblem 2  : npx tsv is removing MinimumSet example generated by oav generate-examples\n```\n{\n\"x-ms-examples\": {\n-    \"FileShares_ListBySubscription_MaximumSet_Gen\": {\n+    \"FileShares_ListBySubscription_MaximumSet\": {\n\"$ref\": \"./examples/FileShares_ListBySubscription_MaximumSet_Gen.json\"\n-    },\n-    \"FileShares_ListBySubscription_MinimumSet_Gen\": {\n-      \"$ref\": \"./examples/FileShares_ListBySubscription_MinimumSet_Gen.json\"\n}\n```\nProblem 3 :  How do I synchronize examples in typespec and swagger folder\nProblem 4 : oav generate examples for minimum set  is adding an item with location property in it\n```\n{\n\"title\": \"FileShareSnapshot_List_MinimumSet - generated by [MinimumSet] rule\",\n\"operationId\": \"FileShareSnapshot_List\",\n\"parameters\": {\n\"api-version\": \"2025-06-01-preview\",\n\"subscriptionId\": \"0681745E-3F9F-4966-80E6-69624A3B29F2\",\n\"resourceGroupName\": \"rgfileshares\",\n\"resourceName\": \"Replace this value with a string matching RegExp ^([a-z]|[0-9])\n},\n\"responses\": {\n\"200\": {\n\"body\": {\n\"value\": [\n{\n\"location\" : “Fjksielghsnf”\n}\n]\n}\n}\n}\n}\n```", "ground_truth": "For Problem 1,  The 'title' field in the example file determines the name of the example in the 'x-ms-examples' extension, file names have nothing to do with it.  TypeSpec and tsv have no preference for the names of example files, as long as they are in the configured example directory.  It is possible, however, for an example to be dropped if it shares the same 'title'  and 'operation Id'  with another example file.\nFor Problem 2, oav generate-examples is a best-effort tool to help you get started generating examples from Swagger.  You may need to further edit the examples after generation.\nFor Problem 3, The source of truth for your examples, is the \"examples\" folder alongside your TSP sources.  tsp compile copies these examples alongside your generated swagger.\nFor Problem 4,  'location' is required in any tracked resource, so a set of values with one resource would have this property.", "context": "", "response_length": 901}
