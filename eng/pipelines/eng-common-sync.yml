# Mirror the eng/common folder to all subscribed langauge repos.
parameters:
- name: PRDataFileName
  type: string
  default: PRsCreated.txt
- name: ArtifactName
  type: string
  default: pullrequestdata

trigger: none

pr:
  branches:
    include:
      - ExtendEngCommonSync
  paths:
    include:
      - eng/common

pool:
  vmImage: windows-2019

stages:
  - stage: CreateSync
    jobs:
      - job: SyncEngCommon
        displayName: Sync eng/common Directory

        steps:
        - template: ./templates/steps/sync-directory.yml
          parameters:
            CommitMessage: "Sync eng/common directory with azure-sdk-tools"
            DirectoryToSync: "eng/common"
            PRBranchName: "sync-eng-common"
            PRTitle: "Sync eng/common directory"
            PRBody: >- 
              Sync eng/common directory with azure-sdk-tools for PR
            #CommitMessage: "Sync eng/common directory with azure-sdk-tools repository for Tools PR $(System.PullRequest.PullRequestNumber)"
            #DirectoryToSync: "eng/common"
            #PRBranchName: "sync-eng-common-$(System.PullRequest.SourceBranch)-$(System.PullRequest.PullRequestNumber)"
            #PRTitle: "Sync eng/common directory with azure-sdk-tools for PR $(System.PullRequest.PullRequestNumber)"
            #PRBody: >- 
            #  Sync eng/common directory with azure-sdk-tools for PR https://github.com/Azure/azure-sdk-tools/pull/$(System.PullRequest.PullRequestNumber) <br>
            #  See [eng/common workflow](https://github.com/Azure/azure-sdk-tools/blob/master/eng/common/README.md#workflow)
            PRDataArtifactPath: $(Build.ArtifactStagingDirectory)/${{ parameters.PRDataFileName }}
            Repos:
              #- azure-sdk-for-android
              #- azure-sdk-for-c
              #- azure-sdk-for-cpp
              #- azure-sdk-for-go
              #- azure-sdk-for-ios
              #- azure-sdk-for-java
              #- azure-sdk-for-js
              - azure-sdk-for-net
              #- azure-sdk-for-python

        - task: PublishPipelineArtifact@1
          condition: succeeded()
          inputs:
            artifactName: ${{ parameters.ArtifactName }}
            path: $(Build.ArtifactStagingDirectory)/${{ parameters.PRDataFileName }}
 
  - stage: VerifyAndMerge
    jobs:
      - deployment: VerifyandMergeSyncPrs
        displayName: Verify and Merge Sync PRs
        environment: github

        steps:
          - download: current
            artifact: ${{parameters.ArtifactName}}
            timeoutInMinutes: 5
          
          - pwsh: |
              $PRData = Get-Content $(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{ parameters.PRDataFileName }}
              foreach ($line in $PRData)
              {
                Write-Output $line
              }
            displayName: View Created PR Data