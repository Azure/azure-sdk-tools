# External variables:
# ProjectFile - The project to build and test. This variable is defined in pipeline web ui because we want to be able to provide it at queue time and that isn't supported in yaml yet.
# VersioningProps - A collection of extra msbuild versioning properties like OfficialBuildId, PreReleaseVersionLabel, and DotNetFinalVersionKind

trigger:
  - master

variables:
  DotNetCoreVersion: '2.1.503'
  WebProjectPath: 'src/dotnet/APIView/APIViewWeb/'
  TestProjectPath: 'src/dotnet/APIView/APIViewTest/'
  NodeVersion: '12.x'

stages:
  - stage: 'Build_and_Test'
    jobs:
      - job: 'Build'

        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DotNetCoreInstaller@0
            displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
            inputs:
              version: '$(DotNetCoreVersion)'

          - task: NodeTool@0
            inputs:
              versionSpec: '$(NodeVersion)'
            displayName: 'Use NodeJS $(NodeVersion)'

          - script: |
              npm install -g npm@6.9.0
            displayName: "Install npm 6.9.0"

          - script: |
              npm install $(WebProjectPath)
            displayName: "Install npm packages"

          - task: Maven@3
            inputs:
              mavenPomFile: 'src/java/apiview-java-processor/pom.xml'
              goals: 'clean package'
            displayName: "Build Java Api processor"

          - script: 'dotnet build $(WebProjectPath) -warnaserror $(VersioningProps)'
            displayName: 'Build'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0

          - task: PublishBuildArtifacts@1
            condition: succeededOrFailed()
            displayName: 'Publish Artifacts'
            inputs:
              ArtifactName: packages

      - job: 'Test'

        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DotNetCoreInstaller@0
            displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
            inputs:
              version: '$(DotNetCoreVersion)'

          - task: DotNetCoreCLI@2
            displayName: 'Build & Test'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
            inputs:
              command: test
              projects: '$(TestProjectPath)'
              arguments: --logger trx
              publishTestResults: false

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/*.trx'
              testRunTitle: 'Windows DotNet $(DotNetCoreVersion)'
              testResultsFormat: 'VSTest'
              mergeTestResults: true