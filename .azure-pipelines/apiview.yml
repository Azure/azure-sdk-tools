trigger:
  branches:
    include:
      - master
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - src/dotnet
      - src/java

pr:
  branches:
    include:
      - master
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - src/dotnet
      - src/java

variables:
  DotNetCoreVersion: '3.0.100'
  WebProjectDirectory: 'src/dotnet/APIView/APIViewWeb/'
  WebProjectPath: 'src/dotnet/APIView/APIViewWeb/APIViewWeb.csproj'
  TestProjectPath: 'src/dotnet/APIView/APIViewTest/APIViewTest.csproj'
  NodeVersion: '12.x'
  BuildConfiguration: 'Release'

stages:
  - stage: 'Main'
    jobs:
      - job: 'Build'

        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DotNetCoreInstaller@2
            displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
            inputs:
              version: '$(DotNetCoreVersion)'

          - task: NodeTool@0
            inputs:
              versionSpec: '$(NodeVersion)'
            displayName: 'Use NodeJS $(NodeVersion)'

          - script: |
              npm install -g npm@6.9.0
            displayName: "Install npm 6.9.0"

          - script: |
              npm install
            workingDirectory: $(WebProjectDirectory)
            displayName: "Install npm packages"

          - task: Maven@3
            inputs:
              mavenPomFile: 'src/java/apiview-java-processor/pom.xml'
              goals: 'clean package'

          - script: 'dotnet build $(WebProjectPath) -warnaserror'
            displayName: 'Build and Package'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0

          - task: DotNetCoreCLI@2
            displayName: 'Publish site'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
            inputs:
              command: 'publish'
              projects: '$(WebProjectPath)'
              publishWebProjects: false
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true

          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'APIView'
              

      - job: 'Test'

        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DotNetCoreInstaller@2
            displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
            inputs:
              version: '$(DotNetCoreVersion)'

          - task: DotNetCoreCLI@2
            displayName: 'Build & Test'
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
            inputs:
              command: test
              projects: '$(TestProjectPath)'
              arguments: --logger trx
              publishTestResults: false

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/*.trx'
              testRunTitle: 'Windows DotNet $(DotNetCoreVersion)'
              testResultsFormat: 'VSTest'
              mergeTestResults: true
