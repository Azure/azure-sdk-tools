trigger:
  branches:
    include:
      - master
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/eslint-plugin-azure-sdk

pr:
  branches:
    include:
      - master
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/eslint-plugin-azure-sdk

variables:
  NodeVersion: "10.x"
  skipComponentGovernanceDetection: true

stages:
  - stage: Build
    jobs:
      - job: Build

        pool:
          vmImage: ubuntu-16.04

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "$(NodeVersion)"
            displayName: "Install Node.js $(NodeVersion)"

          - script: |
              set -e
              npm install
              npm run format:check
              npm run lint
              npm test
              npm run build
              npm pack
              cp *.tgz $(Build.ArtifactStagingDirectory)
            workingDirectory: tools/eslint-plugin-azure-sdk
            displayName: "Build, test and package"

          - script: |
              set -e
              npm audit
            workingDirectory: tools/eslint-plugin-azure-sdk
            condition: eq(variables['RunNpmAudit'], 'true')
            displayName: "Audit package"

          - publish: $(Build.ArtifactStagingDirectory)
            displayName: Publish package to run artifacts
            artifact: packages
            condition: succeededOrFailed()

  # The Prerelease and Release stages are conditioned on whether we are building a pull request and the branch.
  - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
    - stage: Prerelease
      dependsOn: Build
      jobs:
        - deployment: PublishPackage
          environment: azure-sdk
          
          pool:
            vmImage: ubuntu-16.04

          strategy:
            runOnce:
              deploy:
                steps:
                  - script: |
                      export DETECTED_PACKAGE_NAME=`ls $(Pipeline.Workspace)/packages/*.tgz`
                      echo "##vso[task.setvariable variable=Package.Archive]$DETECTED_PACKAGE_NAME"
                    displayName: Detecting package archive

                  - task: Npm@1
                    inputs:
                      command: 'custom'
                      workingDir: '$(Pipeline.Workspace)/packages'
                      customCommand: 'publish $(Package.Archive)'
                      customRegistry: 'useFeed'
                      customFeed: '7a8a7255-a1aa-48df-a904-c77c0b78cb03'
                    displayName: 'Publish package to azure-sdk public feed'

    - stage: Release
      dependsOn: Prerelease
      jobs:
        - deployment: PublishPackage
          environment: npm
          
          pool:
            vmImage: ubuntu-16.04

          strategy:
            runOnce:
              deploy:
                steps:
                  - script: |
                      export DETECTED_PACKAGE_NAME=`ls $(Pipeline.Workspace)/packages/*.tgz`
                      echo "##vso[task.setvariable variable=Package.Archive]$DETECTED_PACKAGE_NAME"
                    displayName: Detecting package archive

                  - task: Npm@1
                    inputs:
                      command: 'custom'
                      workingDir: '$(Pipeline.Workspace)/packages'
                      customCommand: 'publish $(Package.Archive) --access=public'
                      customEndpoint: 'NPM @azure'
                    displayName: 'Publish to npmjs.org'
