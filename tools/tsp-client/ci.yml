trigger:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/tsp-client

pr:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/tsp-client

extends:
  template: /eng/pipelines/templates/stages/1es-redirect.yml
  parameters:
    stages:
      - stage: InstallAndBuild
        variables:
          - template: /eng/pipelines/templates/variables/globals.yml
          - template: /eng/pipelines/templates/variables/image.yml
          - name: NodeVersion
            value: '18.x'
          - name: VAR_ARTIFACT_NAME
            value: 'drop'
          - name: VAR_BUILD_ARTIFACT_STAGING_DIRECTORY
            value: $(Build.ArtifactStagingDirectory)
        jobs:
          - job:
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux
            steps:
              - template: /tools/tsp-client/build-tsp-client.yml
                parameters:
                  Publish: true
          - job:
            pool:
              name: $(WINDOWSPOOL)
              image: $(WINDOWSVMIMAGE)
              os: windows
            steps:
              - template: /tools/tsp-client/build-tsp-client.yml
          - job:
            pool:
              name: $(MACPOOL)
              vmImage: $(MACVMIMAGE)
              os: macOS
            steps:
              - template: /tools/tsp-client/build-tsp-client.yml

      - ${{if ne(variables['Build.Reason'], 'PullRequest')}}:
        - stage: Release
          dependsOn: InstallAndBuild
          condition: succeeded()
          variables:
            - template: /eng/pipelines/templates/variables/globals.yml
            - template: /eng/pipelines/templates/variables/image.yml
            - name: NodeVersion
              value: '18.x'
            - name: VAR_ARTIFACT_NAME
              value: 'drop'
            - name: VAR_BUILD_ARTIFACT_STAGING_DIRECTORY
              value: $(Build.ArtifactStagingDirectory)
          jobs:
          - job: approve
            pool: server
            steps:
            - task: ManualValidation@0
              inputs:
                notifyUsers: 'Click to approve if it''s an expected public release.'
          - job: release
            dependsOn: approve
            condition: and(succeeded(), ne(variables['USER_SKIP_PUBLIC_RELEASE'], 'true'))
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux
            steps:
            - task: NodeTool@0
              inputs:
                versionSpec: '$(NodeVersion)'
              displayName: 'Install Node.js'
            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: '$(VAR_ARTIFACT_NAME)'
                targetPath: '$(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)'
            - bash: |
                echo -e "\e[32m[$(date -u)] LOG: publish the package"
                echo "//registry.npmjs.org/:_authToken=$(azure-sdk-npm-token)" >> ~/.npmrc
                for file in $(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)/$(VAR_ARTIFACT_NAME)/*.tgz
                do
                  echo -e "\e[32m[$(date -u)] LOG: File: $file"
                  npm publish $file --access public || { echo 'publish $file failed' ; exit 1; }
                done
                rm ~/.npmrc || { echo 'rm ~/.npmrc failed' ; exit 1; }
              displayName: Publish
              workingDirectory: $(System.DefaultWorkingDirectory)/tools/tsp-client

