{
    "comments": [
        {
            "rule_ids": [],
            "line_no": 1,
            "bad_code": "",
            "suggestion": null,
            "comment": "### API Summary\n\n**Purpose**  \nThis API provides a service for managing secrets within an Azure Key Vault. It facilitates comprehensive secret management operations by enabling the creation, retrieval, updating, and deletion (CRUD) of secrets. It also supports advanced operations such as backing up secrets, restoring them from backups, recovering deleted secrets, and rotating or rolling secrets.\n\n**API Version**  \nThe API versioning is defined by the `ApiVersion` object. Among the available versions, the most recent is `V7_7_preview_1`.\n\n**Client Classes**  \nThe API exposes two primary client classes: the synchronous `SecretClient` and its asynchronous counterpart in the `aio` namespace, also named `SecretClient`. Both clients provide the same set of functionalities, differing only in their execution approach.\n\n**Functional Overview**  \nThe client classes enable extensive interactions with secrets stored in an Azure Key Vault. They support the full lifecycle of secret management by offering CRUD operations and additional actions such as backup, restoration, recovery, and purge processes. These clients also allow for listing secrets and their versions as well as for modifying secret properties. With integrated context management and support for tracing built into their operation, the `SecretClient` classes serve as the main interface for secure and scalable key vault secret management.",
            "source": "summary"
        },
        {
            "rule_ids": [
                "python_design.html#python-models-enum-name-uppercase"
            ],
            "line_no": 15,
            "bad_code": "V7_7_preview_1 = \"7.7-preview.1\"",
            "suggestion": "V7_7_PREVIEW_1 = \"7.7-preview.1\"",
            "comment": "Enum member names should be fully uppercase for consistency and clarity.",
            "source": "merged"
        },
        {
            "rule_ids": [
                "python_design.html#python-namespaces-async"
            ],
            "line_no": 271,
            "bad_code": "@distributed_trace",
            "suggestion": "@distributed_trace_async",
            "comment": "Async methods should use the async distributed trace decorator for consistency and correctness.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 272,
            "bad_code": "async def list_deleted_secrets(self, **kwargs: Any) -> AsyncItemPaged[DeletedSecret]",
            "suggestion": "def list_deleted_secrets(self, **kwargs: Any) -> AsyncItemPaged[DeletedSecret]",
            "comment": "Async list operations must not be declared with the async keyword.",
            "source": "guideline"
        },
        {
            "rule_ids": [
                "python_design.html#python-namespaces-async"
            ],
            "line_no": 274,
            "bad_code": "@distributed_trace",
            "suggestion": "@distributed_trace_async",
            "comment": "Async methods should use the async distributed trace decorator for consistency and correctness.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 275,
            "bad_code": "async def list_properties_of_secret_versions(self, ",
            "suggestion": "def list_properties_of_secret_versions(self, **kwargs: Any) -> AsyncItemPaged[SecretProperties]",
            "comment": "Async list operations must not be declared with the async keyword.",
            "source": "guideline"
        },
        {
            "rule_ids": [
                "python_design.html#python-namespaces-async"
            ],
            "line_no": 281,
            "bad_code": "@distributed_trace",
            "suggestion": "@distributed_trace_async",
            "comment": "Async methods should use the async distributed trace decorator for consistency and correctness.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 282,
            "bad_code": "async def list_properties_of_secrets(self, **kwargs: Any) -> AsyncItemPaged[SecretProperties]",
            "suggestion": "def list_properties_of_secrets(self, **kwargs: Any) -> AsyncItemPaged[SecretProperties]",
            "comment": "Async list operations must not be declared with the async keyword.",
            "source": "guideline"
        }
    ]
}