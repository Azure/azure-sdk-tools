# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/js-sdk-release-tools

pr:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/js-sdk-release-tools

extends:
  template: /eng/pipelines/templates/stages/1es-redirect.yml
  parameters:
    stages:
      - stage: InstallAndBuild
        variables:
          - template: /eng/pipelines/templates/variables/globals.yml
          - template: /eng/pipelines/templates/variables/image.yml
          - name: NodeVersion
            value: '18.x'

        jobs:
          - job: Build
            pool:
              name: $(LINUXNEXTPOOL)
              image: $(LINUXNEXTVMIMAGE)
              os: linux
            steps:
            - task: NodeTool@0
              inputs:
                versionSpec: '$(NodeVersion)'
              displayName: 'Install Node.js'

            - script: |
                npm install
              displayName: 'npm install'
              workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools

            - script: |
                npm pack
              displayName: 'npm pack'
              workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools

            - script: 'cp azure-tools-js-sdk-release-tools-*.tgz $(Build.ArtifactStagingDirectory)'
              displayName: 'copy to staging dir'
              workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools

            - task: 1ES.PublishPipelineArtifact@1
              inputs:
                targetPath: '$(Build.ArtifactStagingDirectory)'
                ArtifactName: 'drop'

      - ${{if ne(variables['Build.Reason'], 'PullRequest')}}:
        - stage: Release
          dependsOn: InstallAndBuild
          condition: succeeded()
          variables:
            - template: /eng/pipelines/templates/variables/globals.yml
            - template: /eng/pipelines/templates/variables/image.yml
            - name: NodeVersion
              value: '18.x'

          jobs:
          - job: approve
            pool: server
            steps:
            - task: ManualValidation@0
              inputs:
                notifyUsers: 'Click to approve if it''s an expected public release.'

          - job: release
            dependsOn: approve
            condition: and(succeeded(), ne(variables['USER_SKIP_PUBLIC_RELEASE'], 'true'))
            pool:
              name: $(LINUXNEXTPOOL)
              image: $(LINUXNEXTVMIMAGE)
              os: linux
            steps:
            - task: NodeTool@0
              inputs:
                versionSpec: '$(NodeVersion)'
              displayName: 'Install Node.js'
            
            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: 'drop'
                targetPath: '$(Build.ArtifactStagingDirectory)'

            - script: |
                echo -e "\e[32m[$(date -u)] LOG: Ensure latest npm is installed"
                sudo npm install -g npm || { echo 'npm install failed' ; exit 1; }
                sudo npm install -g pnpm || { echo 'pnpm install failed' ; exit 1; }

                echo -e "\e[32m[$(date -u)] LOG: publish the package"
                echo "//registry.npmjs.org/:_authToken=$(azure-sdk-npm-token)" >> ~/.npmrc
                for file in $(Build.ArtifactStagingDirectory)/*.tgz
                do
                  echo -e "\e[32m[$(date -u)] LOG: File: $file"
                  npm publish $file --access public || { echo 'publish $file failed' ; exit 1; }
                done
                rm ~/.npmrc || { echo 'rm ~/.npmrc failed' ; exit 1; }
              displayName: Publish
              workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools
