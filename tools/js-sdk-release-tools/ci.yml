# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/js-sdk-release-tools

pr:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - tools/js-sdk-release-tools

variables:
  - template: ../../eng/pipelines/templates/variables/globals.yml
  - name: NodeVersion
    value: '14.x'
  - name: VAR_ARTIFACT_NAME
    value: 'drop'
  - name: VAR_BUILD_ARTIFACT_STAGING_DIRECTORY
    value: $(Build.ArtifactStagingDirectory)

stages:
  - stage: InstallAndBuild
    jobs:
      - job: Build
        strategy:
          matrix:
            linux:
              imageName: ubuntu-22.04
            mac:
              imageName: 'macos-latest'
            windows:
              imageName: 'windows-latest'
        pool:
          vmImage: $(imageName)
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '$(NodeVersion)'
          displayName: 'Install Node.js'

        - script: |
            npm install
          displayName: 'npm install'
          workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools

        - script: |
            npm pack
          displayName: 'npm pack'
          workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools
          condition: contains(variables['imageName'], 'ubuntu')

        - script: 'cp azure-tools-js-sdk-release-tools-*.tgz $(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)'
          displayName: 'copy to staging dir'
          workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools
          condition: contains(variables['imageName'], 'ubuntu')

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)'
            ArtifactName: '$(VAR_ARTIFACT_NAME)'
            publishLocation: 'Container'
          condition: contains(variables['imageName'], 'ubuntu')

  - ${{if ne(variables['Build.Reason'], 'PullRequest')}}:
    - stage: Release
      dependsOn: InstallAndBuild
      condition: succeeded()
      jobs:
      - job: approve
        pool: server
        steps:
        - task: ManualValidation@0
          inputs:
            notifyUsers: 'Click to approve if it''s an expected public release.'
      - job: release
        dependsOn: approve
        condition: and(succeeded(), ne(variables['USER_SKIP_PUBLIC_RELEASE'], 'true'))
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '$(NodeVersion)'
          displayName: 'Install Node.js'
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: '$(VAR_ARTIFACT_NAME)'
            downloadPath: '$(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)'
        - script: |
            echo -e "\e[32m[$(date -u)] LOG: Ensure latest npm is installed"
            sudo npm install -g npm || { echo 'npm install failed' ; exit 1; }
            sudo npm install -g pnpm || { echo 'pnpm install failed' ; exit 1; }

            echo -e "\e[32m[$(date -u)] LOG: publish the package"
            echo "//registry.npmjs.org/:_authToken=$(azure-sdk-npm-token)" >> ~/.npmrc
            for file in $(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)/$(VAR_ARTIFACT_NAME)/*.tgz
            do
              echo -e "\e[32m[$(date -u)] LOG: File: $file"
              npm publish $file --access public || { echo 'publish $file failed' ; exit 1; }
            done
            rm ~/.npmrc || { echo 'rm ~/.npmrc failed' ; exit 1; }
          displayName: Publish
          workingDirectory: $(System.DefaultWorkingDirectory)/tools/js-sdk-release-tools

