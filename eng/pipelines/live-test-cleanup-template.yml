parameters:
  - name: DryRun
    type: boolean
    default: false
  - name: DisplayName
    type: string
  - name: ServiceConnection
    type: string
  - name: SubscriptionConfigurations
    type: object
    default:
      - $(sub-config-azure-cloud-test-resources)
  - name: SubscriptionConfigurationFilePaths
    type: object
    default: []
  - name: GithubAliasCachePath
    type: string
  - name: AdditionalParameters
    type: string
    default: ""
  - name: Pool
    type: string

steps:
  - pwsh: Write-Host "##vso[task.setvariable variable=Pool;]${{ parameters.Pool }}"

  - template: /eng/common/TestResources/build-test-resource-config.yml
    parameters:
      SubscriptionConfigurations: ${{ parameters.SubscriptionConfigurations }}
      SubscriptionConfigurationFilePaths: ${{ parameters.SubscriptionConfigurationFilePaths }}
      EnvVars:
        Pool: $(Pool)

  - ${{ if ne(parameters.ServiceConnection, '') }}:
    - task: AzurePowerShell@5
      inputs:
        azureSubscription: ${{ parameters.ServiceConnection }}
        azurePowerShellVersion: LatestVersion
        pwsh: true
        ScriptType: InlineScript
        Inline: |
          eng/common/scripts/Import-AzModules.ps1
          Import-Module Az.Accounts

          $subscriptionConfiguration = @'
            $(SubscriptionConfiguration)
          '@ | ConvertFrom-Json -AsHashtable

          ./eng/scripts/live-test-resource-cleanup.ps1 `
            -OpensourceApiApplicationToken $(opensource-api-token) `
            -GithubAliasCachePath ${{ parameters.GithubAliasCachePath }} `
            @subscriptionConfiguration `
            -Verbose `
            ${{ parameters.AdditionalParameters }} `
            -WhatIf:$${{ parameters.DryRun }}

      displayName: ${{ parameters.DisplayName }}
      continueOnError: true
      env:
        PoolSubnet: $(PoolSubnet)

  - ${{ else }}:
    - pwsh: |
        eng/common/scripts/Import-AzModules.ps1
        Import-Module Az.Accounts

        $subscriptionConfiguration = @'
          $(SubscriptionConfiguration)
        '@ | ConvertFrom-Json -AsHashtable

        ./eng/scripts/live-test-resource-cleanup.ps1 `
          -OpensourceApiApplicationToken $(opensource-api-token) `
          -GithubAliasCachePath ${{ parameters.GithubAliasCachePath }} `
          @subscriptionConfiguration `
          -Verbose `
          ${{ parameters.AdditionalParameters }} `
          -WhatIf:$${{ parameters.DryRun }}
      displayName: ${{ parameters.DisplayName }}
      continueOnError: true
      env:
        PoolSubnet: $(PoolSubnet)

