@page
@model APIViewWeb.Pages.Assemblies.IndexPageModel
@using APIViewWeb
@{
    ViewData["Title"] = "Reviews";
}
<nav>
    <div class="container-xxl py-2 px-5 border-bottom">
        <div class="row d-flex flex-row align-items-center">
            <div class="col"></div>
            <div class="col-7 d-flex flex-row align-items-center">
                <div class="input-group mr-2">
                    <label class="input-group-text reviews-table-filter-label"><i class="fas fa-search"></i></label>
                    <input type="search" class="form-control" id="reviews-table-search-box" placeholder="Filter by review name" autofocus>
                </div>
                <div class="mb-0 mr-2">
                    <select id="reviews-table-language-filter" class="form-select">
                        <option value="">Filter by Language</option>
                        <option value="">All</option>
                        <option value="^C$">C</option>
                        <option value="^C#$">C#</option>
                        <option value="^C\+\+$">C++</option>
                        <option value="^Go$">Go</option>
                        <option value="^Java$">Java</option>
                        <option value="^JavaScript$">JavaScript / TypeScript</option>
                        <option value="^Python$">Python</option>
                        <option value="^Protocol$">Protocol</option>
                        <option value="^Swift$">Swift</option>
                        <option value="^Xml$">Xml</option>
                    </select>
                </div>
                <div class="dropdown mr-2">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-sliders-h"></i>
                        &nbsp;More Options
                    </button>

                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <div class="dropdown-item">
                            <div class="btn-group pr-1">
                                <a class="toggle-buttons-left btn btn-sm btn-outline-secondary" active-if="!@Model.Closed" asp-all-route-data=@Model.GetRoutingData(closed: false)>Open</a>
                                <a class="toggle-buttons-right btn btn-sm btn-outline-secondary" active-if="@Model.Closed" asp-all-route-data=@Model.GetRoutingData(closed: true)>Closed</a>
                            </div>
                        </div>
                        <div class="dropdown-item">
                            <div class="btn-group ">
                                <a class="toggle-buttons-left btn btn-sm btn-outline-secondary" active-if="!@Model.Automatic" asp-all-route-data=@Model.GetRoutingData(automatic: false)>Manual</a>
                                <a class="toggle-buttons-right btn btn-sm btn-outline-secondary" active-if="@Model.Automatic" asp-all-route-data=@Model.GetRoutingData(automatic: true)>Automatic</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col"></div>
        </div>
    </div>
</nav>

<div class="row d-flex flex-row pr-5 pl-5 pt-2 pb-2 mt-0 align-items-center" style="background-color: #E7E9EB;">
        <div class="col">
            <div class="float-left">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#uploadModel"><i class="fas fa-plus"></i>&nbsp;&nbsp;Create Review</button>
            </div>
            <div class="float-right">
                <div class="input-group mb-0">
                    <label class="input-group-text reviews-table-filter-label"><i class="fas fa-filter m-1"></i></label>
                    <select id="reviews-table-language-filter" class="form-select">
                        <option value="">All</option>
                        <option value="^C$">C</option>
                        <option value="^C#$">C#</option>
                        <option value="^C\+\+$">C++</option>
                        <option value="^Go$">Go</option>
                        <option value="^Java$">Java</option>
                        <option value="^JavaScript$">JavaScript / TypeScript</option>
                        <option value="^Python$">Python</option>
                        <option value="^Protocol$">Protocol</option>
                        <option value="^Swift$">Swift</option>
                        <option value="^Xml$">Xml</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="input-group">
                <label class="input-group-text reviews-table-filter-label"><i class="fas fa-search"></i></label>
                <input type="search" class="form-control" id="reviews-table-search-box" placeholder="Filter by review name" autofocus>
            </div>
        </div>
        <div class="col">
            <div class="float-right">
                <div class="dropleft">
                    <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Options&nbsp;
                        <i class="fas fa-sliders-h"></i>
                    </button>

                    <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                        <div class="dropdown-item">
                            <div class="btn-group pr-1">
                                <a class="toggle-buttons-left btn btn-sm btn-outline-secondary" active-if="!@Model.Closed" asp-all-route-data=@Model.GetRoutingData(closed: false)>Open</a>
                                <a class="toggle-buttons-right btn btn-sm btn-outline-secondary" active-if="@Model.Closed" asp-all-route-data=@Model.GetRoutingData(closed: true)>Closed</a>
                            </div>
                        </div>
                        <div class="dropdown-item">
                            <div class="btn-group ">
                                <a class="toggle-buttons-left btn btn-sm btn-outline-secondary" active-if="!@Model.Automatic" asp-all-route-data=@Model.GetRoutingData(automatic: false)>Manual</a>
                                <a class="toggle-buttons-right btn btn-sm btn-outline-secondary" active-if="@Model.Automatic" asp-all-route-data=@Model.GetRoutingData(automatic: true)>Automatic</a>
                                <a class="btn btn-secondary" active-if="@Model.FilterType == ReviewType.PullRequest" asp-all-route-data=@Model.GetRoutingData(filterType: ReviewType.PullRequest)>Pull Request Reviews</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>


<div class="modal fade" id="uploadModel" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form asp-page-handler="Upload" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title">Create Review</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="custom-file">
                            <input asp-for="Upload.Files" type="file" class="custom-file-input">
                            <label asp-for="Upload.Files" class="custom-file-label">Select file to include in API review</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input" asp-for="Upload.RunAnalysis" checked>
                            <label class="form-check-label">
                                Run static analysis
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <input asp-for="Label" class="form-control" type="text" placeholder="Enter an optional review label">
                    </div>
                    <div class="form-group">
                        <label>What to upload:</label>

                        <ul class="nav nav-pills nav-fill mb-3">
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#c-help">C</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#csharp-help">C#</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#cpp-help">C++</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#go-help">Go</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#java-help">Java</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#js-help">JS/TS</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#python-help">Python</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#protocol-help">Protocol</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#swift-help">Swift</a>
                            </li>
                        </ul>

                        <!-- Tab panes -->
                        <div class="tab-content border rounded p-3">
                            <div class="tab-pane active" id="csharp-help">
                                <ol>
                                    <li>
                                        Run
                                        <code>dotnet pack</code>
                                    </li>
                                    Upload the resulting .nupkg file.
                                </ol>
                            </div>
                            <div class="tab-pane" id="java-help">Run a <code>mvn package</code> build on your project, which will generate a number of build artifacts in the <code>/target</code> directory. In there, find the file ending <code>sources.jar</code>, and select it.</div>
                            <div class="tab-pane" id="c-help">
                                <ol>
                                    <li>
                                        Install clang 10 or later.
                                    </li>
                                    <li>
                                        Run
                                        <code>clang [inputs like az_*.h] -Xclang -ast-dump=json -I ..\..\..\core\core\inc -I "c:\Program Files (x86)\Microsoft Visual Studio\2019\Preview\VC\Tools\MSVC\14.26.28801\include\" > az_core.ast</code>
                                    </li>
                                    <li>
                                        Archive the file <code>Compress-Archive az_core.ast -DestinationPath az_core.zip</code>
                                    </li>
                                    <li>
                                        Upload the resulting archive.
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="python-help">
                                <ol>
                                    <li>
                                        Generate wheel for the package.
                                        <code>python setup.py bdist_wheel -d [dest_folder]</code>
                                    </li>
                                    <li>
                                        Upload generated whl file
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="js-help">
                                <ol>
                                    <li>
                                        Use <code>api-extractor</code> to generate a <a href="https://api-extractor.com/pages/setup/generating_docs/">docModel file</a>
                                    </li>
                                    <li>
                                        Upload generated api.json file
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="cpp-help">
                                <ol>
                                    <li>
                                        Install clang 10 or later. Your environment may require additional include directories.
                                    </li>
                                    <li>
                                        Run
                                        <code>clang++ [input like .\sdk\storage\azure-storage-files-datalake\inc\azure\storage\files\datalake\datalake.hpp] -I .\sdk\storage\azure-storage-files-datalake\inc -I .\sdk\core\azure-core\inc -Xclang  -ast-dump -I .\sdk\storage\azure-storage-common\inc  -I .\sdk\storage\azure-storage-blobs\inc > Azure_Storage_Files_Datalake.ast</code>
                                    </li>
                                    <li>
                                        Archive the file <code>Compress-Archive Azure_Storage_Files_Datalake.ast -DestinationPath Azure_Storage_Files_Datalake.zip</code>
                                    </li>
                                    <li>
                                        Rename the file <code>Rename-Item Azure_Storage_Files_Datalake.zip -NewName  Azure_Storage_Files_Datalake.cppast</code>
                                    </li>
                                    <li>
                                        Upload the resulting archive.
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="go-help">
                                <ol>
                                    <li>
                                        Archive source module directory in which go.mod is present. <code>Compress-Archive ./sdk/azcore -DestinationPath azcore.zip</code>
                                    </li>
                                    <li>
                                        Rename the file <code>Rename-Item azcore.zip -NewName  azcore.gosource</code>
                                    </li>
                                    <li>
                                        Upload the resulting archive.
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="protocol-help">
                                <ol>
                                    <li>
                                        Upload generated yml file from autorest 
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="swift-help">
                                <ol>
                                    <li>
                                        Generate JSON file for the source by running Swift APIView parser in XCode.
                                        More information is available here on <a href="https://github.com/Azure/azure-sdk-tools/blob/main/src/swift/README.md">Swift API parser</a> 
                                    </li>
                                    <li>
                                        Upload generated JSON
                                    </li>
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-cloud-upload-alt"></i> Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="mr-5 ml-5 mt-2 mb-2 pb-1 border rounded">
    <table id="reviews-table" class="display nowrap">
        <thead >
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Creator</th>
                <th scope="col">Updated</th>
                <th scope="col">Type</th>
                <th scope="col">Language</th>
                <th></th>
                <th scope="col">PackageName</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var assembly in Model.Assemblies)
            {
                <tr>
                    <td>
                        <a class="review-name" asp-page="./Review" asp-route-id="@assembly.ReviewId">@assembly.DisplayName</a>
                        @if (assembly.Revisions.LastOrDefault()?.IsApproved == true)
                        {
                            <span class="badge badge-pill badge-success ml-1 p-1"><i class="fas fa-check-circle"></i> APPROVED</span>
                        }
                    </td>
                    <td>
                        <a username="@assembly.Author">@assembly.Author</a>
                    </td>
                    <td>
                        <span data-placement="left" data-toggle="tooltip" title="@assembly.LastUpdated" date="@assembly.LastUpdated.ToLocalTime()"></span>
                    </td>
                    <td>
                        @if (assembly.IsAutomatic)
                        {
                            <span>Automatic</span>
                        }
                        else
                        {
                            <span>Manual</span>
                        }
                    </td>
                    <td>
                        <span>@assembly.Language</span>
                    </td>
                    <td>
                        @if (assembly.Author == User.GetGitHubLogin())
                        {
                            <a asp-page="./Delete" asp-route-id="@assembly.ReviewId">
                                <button type="button" class="btn pt-0 pb-0 pl-1 pr-1 btn-outline-danger"><i class="fas fa-times-circle"></i> Delete</button>
                            </a>
                        }
                        else
                        {
                            <span data-placement="left" data-toggle="tooltip" title="Only review creator can delete.">
                                <button type="button" class="btn pt-0 pb-0 pl-1 pr-1 btn-outline-secondary invisible" disabled="true"><i class="fas fa-times-circle"></i> Delete</button>
                            </span>
                        }
                    </td>
                    <td>
                        <span>@assembly.PackageName</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
