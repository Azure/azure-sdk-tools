parameters:
- name: Repos
  type: object
  default:
    - RepoOwner: Azure
      RepoName: azure-sdk-tools
      RecordSession: ''
    - RepoOwner: Azure
      RepoName: azure-sdk
      RecordSession: ''
    - RepoOwner: Azure
      RepoName: azure-sdk-for-android
      RecordSession: 'resources/session-records'
    - RepoOwner: Azure
      RepoName: azure-sdk-for-c
      RecordSession: ''
    - RepoOwner: Azure
      RepoName: azure-sdk-for-cpp
      RecordSession: ''
    - RepoOwner: Azure
      RepoName: azure-sdk-for-go
      RecordSession: ''
    - RepoOwner: Azure
      RepoName: azure-sdk-for-ios
      RecordSession: ''
    - RepoOwner: Azure
      RepoName: azure-sdk-for-java
      RecordSession: 'resources/session-records'
    - RepoOwner: Azure
      RepoName: azure-sdk-for-js
      RecordSession: 'recordings/node'
    - RepoOwner: Azure
      RepoName: azure-sdk-for-net
      RecordSession: 'tests/SessionRecords'
    - RepoOwner: Azure
      RepoName: azure-sdk-for-python
      RecordSession: 'tests/recordings'
- name: MigrationMap
  type: object
  default: []
trigger: none
pr: none

jobs:
  - job: Migration
    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
    variables:
      - template: ./templates/variables/globals.yml
    steps:
      - ${{ each repo in parameters.Repos }}:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            SkipCheckoutNone: true
            Repositories:
              - Name: ${{ repo.RepoOwner }}/${{ repo.RepoName }}
                WorkingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
            Paths:
              - /*
        - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        - pwsh: |
            Write-Host "checking ${{ repo.RecordSession }}"
            $files = Get-ChildItem ./ -Recurse -File
            if("${{ repo.RecordSession }}") {
              $files = $files | Where-Object {$_.FullName -NotMatch "${{ repo.RecordSession }}"}
            }
            Write-Host "getting all files"
            # Scan all Files
            foreach ($file in $files) {
              $content = Get-Content $file.FullName -Raw
              $newcontent = ""
              foreach ($migrate in ${{ parameters.MigrationMap}} ) {
                Write-Host $migrate.MigrateFrom
                Write-Host $migrate.MigrateTo
                if ($content -match $migrate.MigrateFrom) {
                  Write-Host $file.FullName
                  $newcontent = $content -replace "$($migrate.MigrateFrom)", "$($migrate.MigrateTo)"
                }
              }
              if ($newcontent) {
                Set-Content -Path $file.FullName -Value $newcontent.Trim() -NoNewLine
              }
            }
          displayName: Update pool version for "${{ repo.RepoName }}"
          workingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
        - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
          parameters:
            BaseBranchName: $(DefaultBranch)
            PRBranchName: migrate-pool
            CommitMsg: "Migrate to new pool"
            RepoOwner: ${{ repo.RepoOwner }}
            RepoName: ${{ repo.RepoName }}
            PRTitle: "[Testing phase, don't review] Migrate to new pool"
            OpenAsDraft: true
            WorkingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
            PushArgs: -f
          