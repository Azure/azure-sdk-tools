warning: in the working copy of 'src/dotnet/APIView/APIViewUnitTests/CodeFileTests.cs', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/src/dotnet/APIView/APIView/Model/V2/ReviewLine.cs b/src/dotnet/APIView/APIView/Model/V2/ReviewLine.cs[m
[1mindex 7eb147755..d4ed189ce 100644[m
[1m--- a/src/dotnet/APIView/APIView/Model/V2/ReviewLine.cs[m
[1m+++ b/src/dotnet/APIView/APIView/Model/V2/ReviewLine.cs[m
[36m@@ -125,14 +125,14 @@[m [mnamespace APIView.Model.V2[m
         {[m
             if(obj is ReviewLine other)[m
             {[m
[31m-                return ToString() == other.ToString();[m
[32m+[m[32m                return ToString() == other.ToString() && LineId == other.LineId && RelatedToLine == other.RelatedToLine;[m
             }[m
             return false;[m
         }[m
 [m
         public override int GetHashCode()[m
         {[m
[31m-            return ToString().GetHashCode();[m
[32m+[m[32m            return $"{ToString()}-{LineId}-{RelatedToLine}".GetHashCode();[m
         }[m
 [m
         public string GetTokenNodeIdHash(string parentNodeIdHash, int lineIndex)[m
[1mdiff --git a/src/dotnet/APIView/APIViewUnitTests/APIViewUnitTests.csproj b/src/dotnet/APIView/APIViewUnitTests/APIViewUnitTests.csproj[m
[1mindex 5253e3ace..5b25a0873 100644[m
[1m--- a/src/dotnet/APIView/APIViewUnitTests/APIViewUnitTests.csproj[m
[1m+++ b/src/dotnet/APIView/APIViewUnitTests/APIViewUnitTests.csproj[m
[36m@@ -51,6 +51,12 @@[m
     <None Update="SampleTestFiles\azure-core-1.47.0-sources4.json">[m
       <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
     </None>[m
[32m+[m[32m    <None Update="SampleTestFiles\azure-schemaregistry_python-with-overload_relatedto-NEW.json">[m
[32m+[m[32m      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[32m+[m[32m    </None>[m
[32m+[m[32m    <None Update="SampleTestFiles\azure-schemaregistry_python-with-overload_relatedto-OLD.json">[m
[32m+[m[32m      <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
[32m+[m[32m    </None>[m
     <None Update="SampleTestFiles\azure-schemaregistry_python.json">[m
       <CopyToOutputDirectory>Always</CopyToOutputDirectory>[m
     </None>[m
[1mdiff --git a/src/dotnet/APIView/APIViewUnitTests/CodeFileTests.cs b/src/dotnet/APIView/APIViewUnitTests/CodeFileTests.cs[m
[1mindex df5149d3d..fb6e77a42 100644[m
[1m--- a/src/dotnet/APIView/APIViewUnitTests/CodeFileTests.cs[m
[1m+++ b/src/dotnet/APIView/APIViewUnitTests/CodeFileTests.cs[m
[36m@@ -215,5 +215,44 @@[m [mnamespace APIViewUnitTests[m
             Assert.True(namespaceLine.Children.Last().Tokens.Count == 0);[m
 [m
         }[m
[32m+[m
[32m+[m[32m        [Fact][m
[32m+[m[32m        public async Task VerifyPythonGroupedDiff()[m
[32m+[m[32m        {[m
[32m+[m[32m            var codeFileA = new CodeFile();[m
[32m+[m[32m            var codeFileB = new CodeFile();[m
[32m+[m[32m            var filePath = Path.Combine("SampleTestFiles", "azure-schemaregistry_python-with-overload_relatedto-NEW.json");[m
[32m+[m[32m            var fileInfo = new FileInfo(filePath);[m
[32m+[m[32m            var fileStream = fileInfo.Open(FileMode.Open, FileAccess.Read, FileShare.Read);[m
[32m+[m[32m            codeFileA = await CodeFile.DeserializeAsync(fileStream);[m
[32m+[m[32m            filePath = Path.Combine("SampleTestFiles", "azure-schemaregistry_python-with-overload_relatedto-OLD.json");[m
[32m+[m[32m            fileInfo = new FileInfo(filePath);[m
[32m+[m[32m            fileStream = fileInfo.Open(FileMode.Open, FileAccess.Read, FileShare.Read);[m
[32m+[m[32m            codeFileB = await CodeFile.DeserializeAsync(fileStream);[m
[32m+[m[32m            bool isSame = CodeFileHelpers.AreCodeFilesSame(codeFileA, codeFileB);[m
[32m+[m[32m            Assert.False(isSame);[m
[32m+[m
[32m+[m[32m            var diff = CodeFileHelpers.FindDiff(codeFileA.ReviewLines, codeFileB.ReviewLines);[m
[32m+[m[32m            Assert.True(FindAnyDiffLine(diff));[m
[32m+[m
[32m+[m[32m            //Verify first line in diff view is the global text[m
[32m+[m[32m            Assert.True(diff.First().LineId == "GLOBAL");[m
[32m+[m
[32m+[m[32m            //Verify that last line of namespace line's children is empty line[m
[32m+[m[32m            var namespaceLine = diff.First(l => l.LineId == "azure.schemaregistry");[m
[32m+[m[32m            Assert.Equal("namespace azure.schemaregistry", namespaceLine.ToString());[m
[32m+[m
[32m+[m[32m            // Make sure first 3 lines under schema registry with LineID are  "{def azure.schemaregistry.foo(}"[m
[32m+[m[32m            int i = 0, line = 0;[m
[32m+[m[32m            while(line < namespaceLine.Children.Count && i < 3)[m
[32m+[m[32m            {[m
[32m+[m[32m                if(!string.IsNullOrEmpty(namespaceLine.Children[line].LineId))[m
[32m+[m[32m                {[m
[32m+[m[32m                    Assert.True(namespaceLine.Children[line].ToString() == "def azure.schemaregistry.foo(");[m
[32m+[m[32m                    i++;[m
[32m+[m[32m                }[m
[32m+[m[32m                line++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
     }[m
 }[m
