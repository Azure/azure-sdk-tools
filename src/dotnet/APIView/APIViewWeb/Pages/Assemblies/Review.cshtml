@page "{id}/{revisionId?}"
@model APIViewWeb.Pages.Assemblies.ReviewPageModel
@using APIViewWeb.Helpers
@using APIViewWeb.Models
@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = Model.Review.DisplayName;
    var userPreference = PageModelHelpers.GetUserPreference(Model._preferenceCache, User);
    TempData["UserPreference"] = userPreference;
    TempData["LanguageCssSafeName"] = Model.Review.GetLanguageCssSafeName();
    ViewBag.HasSections = (Model.CodeFile.LeafSections?.Count > 0) ? true : false;
}

<div id="right-offcanvas-menu" class="right-offcanvas">
    <div class="offcanvas-menu-content" id="review-offcanvas-menu-content">
        <p class="h6">Page Settings</p>
        <ul class="list-group">
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                    <label class="form-check-label" for="flexSwitchCheckDefault">Show Comments</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
                    <label class="form-check-label" for="flexSwitchCheckChecked">Show Comments</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
                    <label class="form-check-label" for="flexSwitchCheckChecked">Show Documentation</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDisabled" disabled>
                    <label class="form-check-label" for="flexSwitchCheckDisabled">Show Line Number</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckCheckedDisabled2" checked disabled>
                    <label class="form-check-label" for="flexSwitchCheckCheckedDisabled2">Show Left Navigation</label>
                </div>
            </li>
        </ul>
                    
        <div class="btn-group btn-group-sm my-1">
            @if (Model.Revision.Approvers.Count > 0)
            {
                var approvers = String.Join(", ", Model.Revision.Approvers);
                <button type="button" class="btn border btn-sm shadow-sm btn-light" data-placement="bottom" data-trigger="focus" data-toggle="popover" data-title="Approvers" data-content="@approvers">
                    <i class="fas fa-check-circle text-success"></i>
                    <span class="badge badge-light">@Model.Revision.Approvers.Count</span>
                </button>
            }
            else
            {
                <button type="button" class="btn border btn-sm shadow-sm btn-light">
                    <i class="fa-solid fa-circle-minus"></i>
                </button>
            }
            <button class="btn btn-light btn-sm border shadow-sm dropdown-toggle" href="#" role="button" data-toggle="dropdown">
                Approval
            </button>
                
            <div class="dropdown-menu dropdown-menu-right">
                <span class="dropdown-header">
                    Select users to request for review
                </span>
                <span class="dropdown modal-dialog-scrollable">
                    <form asp-resource="@Model.Review" asp-page-handler="RequestReviewers" method="post"
                        class ="selectpicker show-tick show-menu-arrow " data-style="btn-light btn-sm border" data-selected-text-format="value" 
                        data-live-search="true" data-size="10" data-width="100%" data-container="body" data-tick-icon="fa-solid fa-check">
                        @{
                            var anyChecked = false;
                        }
                        <div style="max-height:400px;width:max-content;overflow-y:auto">
                            @foreach (var approver in Model.PreferredApprovers)
                            {
                                <span class="checkbox dropdown-item">
                                    <label>
                                        @if (Model.Review.RequestedReviewers != null && Model.Review.RequestedReviewers.Contains(approver))
                                        {
                                            <input type="checkbox" class="selectDropdownForRequest" name="reviewers" value="@approver" checked>
                                            anyChecked = true;
                                        }
                                        else 
                                        {
                                            <input type="checkbox" class="selectDropdownForRequest"  name="reviewers" value="@approver">
                                        }
                                        &nbsp;&nbsp;<img username="@approver" size="28" class="comment-icon align-self-start mr-2" height="28" width="28" />
                                        @approver
                                    </label>
                                </span>
                            }
                        </div>
                        <span class="dropdown-item-text">
                            @if (anyChecked)
                            {
                                <button class="btn btn-sm btn-light shadow-sm" id="submitReviewRequest" onclick="document.getElementById('submitRequestForReview').click()" disabled>Request Selected</button>
                            }
                            else 
                            {
                                <button class="btn btn-sm btn-light shadow-sm" id="submitReviewRequest" onclick="var r = document.getElementsByName('reviewers'); r.forEach((e) => e.checked = true); document.getElementById('submitRequestForReview').click();">Request All</button>
                            }                                
                            <button type="submit" id="submitRequestForReview" hidden></button>
                        </span>
                    </form>
                </span>
            </div>
        </div>
        <div class="my-1">
            <form asp-resource="@Model.Review" class="form-inline" asp-page-handler="ToggleApproval" method="post" asp-requirement="@ApproverRequirement.Instance">
                <input type="hidden" name="revisionId" value="@Model.Revision.RevisionId" />
                @if (Model.DiffRevision == null || Model.DiffRevision.Approvers.Count > 0)
                {
                    @if(Model.Revision.Approvers.Contains(User.GetGitHubLogin()))
                    {
                        <button type="submit" class="btn btn-sm shadow-sm btn-light ml-2">
                            <i class="fa fa-sm fa-undo" aria-hidden="true"></i>&nbsp;&nbsp;Revert Approval
                        </button>
                    }
                    else
                    {
                        @if (Model.ActiveConversations > 0 && Model.PreferredApprovers.Contains(User.GetGitHubLogin()))
                        {
                            <button type="button" class="btn btn-sm shadow-sm btn-success ml-2" data-toggle="modal" data-target="#approveModel">
                                <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve
                            </button>

                            <div class="modal fade" id="approveModel" tabindex="-1" role="dialog">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title">Approve Review</h5>
                                        </div>
                                        <div class="modal-body">
                                            <p> There are still active conversations. <br /> Would you like to review these first? </p>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-sm border shadow-sm btn-outline-dark" data-dismiss="modal">Cancel</button>
                                            <a asp-page="Conversation" asp-route-id="@Model.Review.ReviewId">
                                                <div class="btn btn-sm border shadow-sm btn-outline-dark">Check Conversations</div>
                                            </a>
                                            <button type="submit" class="btn btn-sm shadow-sm btn-success ml-2">
                                                <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve Anyway
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            @if (Model.PreferredApprovers.Contains(User.GetGitHubLogin()))
                            {
                                <button type="submit" class="btn btn-sm shadow-sm btn-success ml-2">
                                    <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve
                                </button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-sm shadow-sm btn-success ml-2" hidden>
                                    <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Cannot Approve
                                </button>
                            }
                        }
                    }
                }
                else
                {
                    @if(Model.Revision.Approvers.Contains(User.GetGitHubLogin()))
                    {
                        <button type="submit" class="btn btn-sm shadow-sm btn-light ml-2" disabled data-placement="bottom" data-toggle="tooltip" title="API review cannot be approved when comparing against unapproved revision.">
                            <i class="fa fa-sm fa-thumbs-down" aria-hidden="true"></i>&nbsp;&nbsp;Revert Approval
                        </button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-sm shadow-sm btn-light ml-2" disabled data-placement="bottom" data-toggle="tooltip" title="API review cannot be approved when comparing against unapproved revision.">
                            <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve
                        </button>
                    }
                }
            </form>
        </div>
        <div class="dropdown d-inline-block my-1 ml-2">
            <a class="btn btn-light btn-sm border shadow-sm dropdown-toggle" href="#" role="button" data-toggle="dropdown">
                <i class="fas fa-sm fa-sliders-h"></i>&nbsp;&nbsp;Options
            </a>
            <div class="dropdown-menu dropdown-menu-right">
                <span class="dropdown-item checkbox">
                    <label>
                        <input type="checkbox" checked="checked" id="show-comments-checkbox">
                        &nbsp;Show Comments
                    </label>
                </span>
                <span class="dropdown-item checkbox">
                    <label>
                        <input type="checkbox" checked="checked" id="show-system-comments-checkbox">
                        &nbsp;Show System Comments
                    </label>
                </span>
                <span class="dropdown-item" id="show-documentation-component">
                    <input asp-for="@Model.ShowDocumentation" class="show-doc-checkbox">
                    <a class="text-dark show-document" asp-all-route-data=@Model.GetRoutingData(diffRevisionId: Model.DiffRevisionId, showDocumentation: !Model.ShowDocumentation, showDiffOnly: Model.ShowDiffOnly, revisionId: Model.Revision.RevisionId)>
                        <label>&nbsp;Show Documentation</label>
                    </a>
                </span>
                <span class="dropdown-item checkbox" id="show-hidden-api-component">
                    <label>
                        @if (userPreference.ShowHiddenApis == true)
                        {
                            <input type="checkbox" id="show-hidden-api-checkbox" checked>
                        }
                        else
                        {
                            <input type="checkbox" id="show-hidden-api-checkbox" >
                        }
                        &nbsp;Show Hidden APIs
                    </label>
                </span>
                <span class="dropdown-item checkbox">
                    <label>
                        @if (userPreference.HideLineNumbers == true)
                        {
                            <input type="checkbox" id="hide-line-numbers" checked>
                        }
                        else
                        {
                            <input type="checkbox" id="hide-line-numbers" >
                        }
                        &nbsp;Hide Line Number
                    </label>
                </span>
                <span class="dropdown-item checkbox">
                    <label>
                        @if (userPreference.HideLeftNavigation == true)
                        {
                            <input type="checkbox" id="hide-left-navigation" checked>
                        }
                        else
                        {
                            <input type="checkbox" id="hide-left-navigation">  
                        }
                        &nbsp;Hide Left Navigation
                    </label>
                </span>
                @if (!String.IsNullOrEmpty(Model.DiffRevisionId))
                {
                    <span class="dropdown-item">
                        <input asp-for="@Model.ShowDiffOnly" class="show-diffonly-checkbox">
                        <a class="text-dark show-diffonly" asp-all-route-data=@Model.GetRoutingData(diffRevisionId: Model.DiffRevisionId, showDiffOnly: !Model.ShowDiffOnly, revisionId: Model.Revision.RevisionId)>
                            <label>&nbsp;Show Only Diff</label>
                        </a>
                    </span>
                }
            </div>
        </div>
        <div class="my-1 ml-2">
            <form asp-resource="@Model.Review" class="form-inline" method="post" asp-page-handler="ToggleSubscribed">
                @if (Model.Review.GetUserEmail(User) != null)
                {
                    if (Model.Review.IsUserSubscribed(User))
                    {
                        <button type="submit" class="btn border btn-sm shadow-sm btn-light">
                            <i class="far fa-minus-square" aria-hidden="true"></i>&nbsp;&nbsp;Unsubscribe
                        </button>
                    }
                    else
                    {
                        <button type="submit" class="btn border btn-sm shadow-sm btn-light">
                            <i class="far fa-plus-square" aria-hidden="true"></i>&nbsp;&nbsp;Subscribe
                        </button>
                    }
                }
                else
                {
                    <button type="submit" class="btn btn-sm shadow-sm btn-light" disabled data-placement="bottom" data-toggle="tooltip" title="Link a microsoft.com email to your Github account to subscribe">
                        <i class="fa fa-plus-square" aria-hidden="true"></i>&nbsp;&nbsp;Subscribe
                    </button>
                }
            </form>
        </div>
        @if (Model.Review.FilterType != ReviewType.Automatic)
        {
            <div class="my-1 ml-2">
                <form asp-resource="@Model.Review" class="form-inline" method="post" asp-page-handler="ToggleClosed">
                    @if (Model.Review.IsClosed)
                    {
                        <button type="submit" class="btn btn-sm border shadow-sm btn-light">
                            <i class="fa fa-sm fa-undo" aria-hidden="true"></i>&nbsp;&nbsp;Reopen
                        </button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-sm border shadow-sm btn-light">
                            <i class="far fa-window-close" aria-hidden="true"></i>&nbsp;&nbsp;Close
                        </button>
                    }
                </form>
            </div>
        }
    </div>
</div>

<div class="container-fluid mx-0 px-0 sub-header-content">
    <div class="row mx-1 px-0 py-2">
        <div class="col-md-8">
            <div class="input-group input-group-sm" id="review-info-bar">
                <partial name="Shared/_ReviewBadge" model="Model.Review" />

                <span class="input-group-text">Revision:</span>

                <select id="revision-select" aria-label="Revision Select">
                    @foreach (var revision in Model.Review.Revisions.Reverse())
                    {
                        var optionName = revision.IsApproved ? $"{@revision.DisplayNameShort} ✔" : @revision.DisplayNameShort;
                        var urlValue = @Url.ActionLink("Review", "Assemblies", new
                        {
                            id = @Model.Review.ReviewId,
                            revisionId = @revision.RevisionId,
                            doc = @Model.ShowDocumentation
                        });
                        if (@revision.DisplayName == @Model.Revision.DisplayName)
                        {
                            <option selected value="@urlValue">@optionName</option>
                        }
                        else
                        {
                            <option value="@urlValue">@optionName</option>
                        }
                    }
                </select>

                @if (@Model.PreviousRevisions.Any())
                {
                    @if (Model.DiffRevisionId != null)
                    {

                        var urlValue = @Url.ActionLink("Review", "Assemblies", new
                        {
                            id = @Model.Review.ReviewId,
                            revisionId = @Model.Revision.RevisionId,
                            diffRevisionId = @Model.DiffRevisionId,
                            doc = @Model.ShowDocumentation,
                            diffOnly = @Model.ShowDiffOnly
                        });
                        <a class="input-group-text" href="@urlValue">Diff With:</a>
                    }
                    else
                    {
                        var urlValue = @Url.ActionLink("Review", "Assemblies", new
                        {
                            id = @Model.Review.ReviewId,
                            revisionId = @Model.Revision.RevisionId,
                            diffRevisionId = @Model.PreviousRevisions.Last().RevisionId,
                            doc = @Model.ShowDocumentation,
                            diffOnly = @Model.ShowDiffOnly
                        });
                        <a class="input-group-text" href="@urlValue">Diff:</a>
                    }
                    <select id="diff-select" aria-label="Diff Select">
                        if (@Model.DiffRevisionId == null)
                        {
                        <option value="" selected></option>
                        }
                        @foreach (var revision in Model.PreviousRevisions.Reverse())
                        {
                            var optionName = revision.IsApproved ? $"{@revision.DisplayNameShort} ✔" : @revision.DisplayNameShort;
                            var urlValue = @Url.ActionLink("Review", "Assemblies", new
                            {
                                id = @Model.Review.ReviewId,
                                diffRevisionId = @revision.RevisionId,
                                diffOnly = @Model.ShowDiffOnly,
                                revisionId = @Model.Revision.RevisionId,
                                doc = @Model.ShowDocumentation
                            });
                            if (@Model.DiffRevisionId != null)
                            {
                                if (@Model.DiffRevisionId == @revision.RevisionId)
                                {
                                    <option value="@urlValue" selected>@optionName</option>
                                }
                                else
                                {
                                    <option value="@urlValue">@optionName</option>
                                }
                            }
                            else
                            {
                                if (@Model.DiffRevisionId != @revision.RevisionId)
                                {
                                    <option value="@urlValue">@optionName</option>
                                }
                            }
                        }
                    </select>
                }
                @{
                    var popOverContent = $"<b>{Model.ActiveConversations}</b> active revision threads.<br><b>{Model.UsageSampleConversations}</b> active usage sample threads.<br><b>{Model.TotalActiveConversations}</b> total active threads.<br>"
                    + $"<b>Current Revision:</b> <em>{@Model.Revision.DisplayName}</em>";
                    @if (Model.DiffRevisionId != null)
                    {
                        popOverContent += $"<br><b>Current Diff:</b> <em>{@Model.DiffRevision?.DisplayName}</em>";
                    }
                    <button type="button" class="btn btn-outline-secondary" id="jump-to-first-comment">
                        <i class="far fa-comment-alt"></i>
                    </button>
                    <button type="button" class="btn btn-info" data-placement="bottom" data-trigger="focus" data-toggle="popover" data-html="true" data-title="Page Info" data-content="@popOverContent">
                        <span class="badge badge-light">@Model.ActiveConversations / @Model.TotalActiveConversations</span>
                    </button>
                }
            </div>
        </div>
        <div class="col-md-1">
        </div>
        <div class="col-md-3">
        </div>
    </div>

    <partial name="Shared/_ReviewNavBar" />
</div>
<div class="container-fluid pt-3" id="review-main-container">
    <div class="row mx-3 g-2" data-review-id="@Model.Review.ReviewId" data-revision-id="@Model.Revision.RevisionId" data-language="@Model.Review.Language">
        @{
            var reviewLeftDisplay = String.Empty;
            var reviewRightSize = "10";
            if (userPreference.HideLeftNavigation == true)
            {
                reviewLeftDisplay = "d-none";
                reviewRightSize = "12";
            }

            var reviewApprovedClass = (Model.Revision.Approvers.Count > 0) ? "review-approved" : "border rounded-1";
        }
        <div id="review-left" class="col-2 @reviewApprovedClass @reviewLeftDisplay">
            <div>
                <div class="namespace-view">
                    @if (Model.CodeFile != null)
                    {
                        <partial name="Shared/Navigation" model="Model.CodeFile.Navigation" />
                    }
                </div>
            </div>
        </div>

        <div id="review-right" class="col-@reviewRightSize @reviewApprovedClass">
            <table class="code-window">
                <tbody>
                    @foreach (var line in Model.Lines)
                    {
                        <partial name="_CodeLine" model="@line" />
                    }
                </tbody>
            </table>
        </div>
    </div>
    <partial name="_CommentFormPartial" model="@Model.TaggableUsers" /> 
</div>
