parameters:
- name: Repos
  type: object
  default:
    - RepoOwner: Azure
      RepoName: azure-sdk-tools
      ExcludePath: ''
    - RepoOwner: Azure
      RepoName: azure-sdk
      ExcludePaths: "eng/common"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-android
      ExcludePaths: "sdk*,eng/common*,*resources/session-records*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-c
      ExcludePaths: "sdk*,eng/common*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-cpp
      ExcludePaths: "sdk*,eng/common*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-go
      ExcludePaths: "sdk*,eng/common*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-ios
      ExcludePaths: "sdk*,eng/common*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-java
      ExcludePaths: "sdk*,eng/common*,*resources/session-records*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-js
      ExcludePaths: "sdk*,eng/common*,*recordings/node*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-net
      ExcludePaths: "sdk*,eng/common*,*tests/SessionRecords*"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-python
      ExcludePaths: "sdk*,eng/common*,*tests/recordings*"
- name: MigrationMap
  type: object
  default: []
trigger: none
pr: none

jobs:
  - job: Migration
    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
    variables:
      - template: ./templates/variables/globals.yml
    steps:
      - ${{ each repo in parameters.Repos }}:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            SkipCheckoutNone: true
            Repositories:
              - Name: ${{ repo.RepoOwner }}/${{ repo.RepoName }}
                WorkingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
            Paths:
              - /*
        - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        - pwsh: |
            $excludes = @()
            if ("${{ repo.ExcludePaths }}") {
              $excludes = "${{ repo.ExcludePaths }}".Split(",") | Where-Object {$_.Trim()}
            }
            $excludes | Write-Host
            $files = Get-ChildItem "./" -Exclude $excludes | Get-ChildItem -Recurse -File
            if (Test-Path "./sdk/*") {
              $files += Get-ChildItem "./sdk/*" -Recurse -File -Filter "platform-matrix*" -Include *.json
              $files += Get-ChildItem "./sdk/*" -Recurse -File -Include *.yml
            }
            Write-Host "getting all files"
            # Scan all Files
            foreach ($file in $files) {
              $newcontent = Get-Content $file.FullName -Raw
              $flag = $False
              $map = '${{ convertToJson(parameters.MigrationMap) }}'
              $map = ConvertFrom-Json $map 
              foreach ($migrate in $map ) {
                if ($newcontent -match $migrate.MigrateFrom) {
                  $flag = $True
                  Write-Host $file.FullName
                  $newcontent = $newcontent -replace "$($migrate.MigrateFrom)", "$($migrate.MigrateTo)"
                }
              }
              if ($flag) {
                Set-Content -Path $file.FullName -Value $newcontent.Trim() -NoNewLine
              }
            }
          displayName: Update pool version for "${{ repo.RepoName }}"
          workingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
        - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
          parameters:
            BaseBranchName: $(DefaultBranch)
            PRBranchName: migrate-pool
            CommitMsg: "Migrate to new pool"
            RepoOwner: ${{ repo.RepoOwner }}
            RepoName: ${{ repo.RepoName }}
            PRTitle: "Migrate to new pool"
            # OpenAsDraft: true
            WorkingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
            PushArgs: -f
          