"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
const arm_networkanalytics_1 = require("@azure/arm-networkanalytics");
const identity_1 = require("@azure/identity");
const dotenv = tslib_1.__importStar(require("dotenv"));
dotenv.config();
/**
 * This sample demonstrates how to List data catalog by subscription.
 *
 * @summary List data catalog by subscription.
 * x-ms-original-file: specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/DataProductsCatalogs_ListBySubscription_MaximumSet_Gen.json
 */
async function dataProductsCatalogsListBySubscriptionMaximumSetGen() {
    const subscriptionId = process.env["NETWORKANALYTICS_SUBSCRIPTION_ID"] ||
        "00000000-0000-0000-0000-00000000000";
    const credential = new identity_1.DefaultAzureCredential();
    const client = new arm_networkanalytics_1.MicrosoftNetworkAnalytics(credential, subscriptionId);
    const resArray = new Array();
    for await (let item of client.dataProductsCatalogs.listBySubscription()) {
        resArray.push(item);
    }
    console.log(resArray);
}
/**
 * This sample demonstrates how to List data catalog by subscription.
 *
 * @summary List data catalog by subscription.
 * x-ms-original-file: specification/networkanalytics/resource-manager/Microsoft.NetworkAnalytics/stable/2023-11-15/examples/DataProductsCatalogs_ListBySubscription_MinimumSet_Gen.json
 */
async function dataProductsCatalogsListBySubscriptionMinimumSetGen() {
    const subscriptionId = process.env["NETWORKANALYTICS_SUBSCRIPTION_ID"] ||
        "00000000-0000-0000-0000-00000000000";
    const credential = new identity_1.DefaultAzureCredential();
    const client = new arm_networkanalytics_1.MicrosoftNetworkAnalytics(credential, subscriptionId);
    const resArray = new Array();
    for await (let item of client.dataProductsCatalogs.listBySubscription()) {
        resArray.push(item);
    }
    console.log(resArray);
}
async function main() {
    dataProductsCatalogsListBySubscriptionMaximumSetGen();
    dataProductsCatalogsListBySubscriptionMinimumSetGen();
}
main().catch(console.error);
//# sourceMappingURL=dataProductsCatalogsListBySubscriptionSample.js.map