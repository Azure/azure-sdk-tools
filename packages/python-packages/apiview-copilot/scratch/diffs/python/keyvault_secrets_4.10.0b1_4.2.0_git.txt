--- a/keyvault_secrets_4.2.0.txt
+++ b/keyvault_secrets_4.10.0b1.txt
@@ -7,281 +7,313 @@
 7: 		V2016_10_01 = "2016-10-01"
 8: 		V7_0 = "7.0"
 9: 		V7_1 = "7.1"
-10: 
-11: 
-12: 	class azure.keyvault.secrets.DeletedSecret:
-13: 		property deleted_date: datetime    # Read-only
-14: 		property id: str    # Read-only
-15: 		property name: str    # Read-only
-16: 		property properties: SecretProperties    # Read-only
-17: 		property recovery_id: str    # Read-only
-18: 		property scheduled_purge_date: datetime    # Read-only
-19: 
-20: 		def __init__(
-21: 			    self,
-22: 			    properties: SecretProperties,
-23: 			    deleted_date: Optional[datetime] = None,
-24: 			    recovery_id: Optional[str] = None,
-25: 			    scheduled_purge_date: Optional[datetime] = None
-26: 			) -> None
-27: 
-28: 		def __repr__(self) -> str
-29: 
-30: 
-31: 	class azure.keyvault.secrets.KeyVaultSecret:
-32: 		property id: str    # Read-only
-33: 		property name: str    # Read-only
-34: 		property properties: SecretProperties    # Read-only
-35: 		property value: str    # Read-only
-36: 
-37: 		def __init__(
-38: 			    self,
-39: 			    properties,
-40: 			    value
-41: 			) -> None
-42: 
-43: 		def __repr__(self) -> str
-44: 
-45: 
-46: 	class azure.keyvault.secrets.SecretClient(KeyVaultClientBase): implements ContextManager
-47: 		property vault_url: str    # Read-only
-48: 
-49: 		def __init__(
-50: 			    self,
-51: 			    vault_url: str,
-52: 			    credential,
-53: 			    *,
-54: 			    api_version: ApiVersion = ...,
-55: 			    transport: HttpTransport = ...,
-56: 			    **kwargs
-57: 			) -> None
+10: 		V7_2 = "7.2"
+11: 		V7_3 = "7.3"
+12: 		V7_4 = "7.4"
+13: 		V7_5 = "7.5"
+14: 		V7_6_PREVIEW_2 = "7.6-preview.2"
+15: 
+16: 
+17: 	class azure.keyvault.secrets.DeletedSecret:
+18: 		property deleted_date: Optional[datetime]    # Read-only
+19: 		property id: Optional[str]    # Read-only
+20: 		property name: Optional[str]    # Read-only
+21: 		property properties: SecretProperties    # Read-only
+22: 		property recovery_id: Optional[str]    # Read-only
+23: 		property scheduled_purge_date: Optional[datetime]    # Read-only
+24: 
+25: 		def __init__(
+26: 			    self,
+27: 			    properties: SecretProperties,
+28: 			    deleted_date: Optional[datetime] = None,
+29: 			    recovery_id: Optional[str] = None,
+30: 			    scheduled_purge_date: Optional[datetime] = None
+31: 			) -> None
+32: 
+33: 		def __repr__(self) -> str
+34: 
+35: 
+36: 	class azure.keyvault.secrets.KeyVaultSecret:
+37: 		property id: Optional[str]    # Read-only
+38: 		property name: Optional[str]    # Read-only
+39: 		property properties: SecretProperties    # Read-only
+40: 		property value: Optional[str]    # Read-only
+41: 
+42: 		def __init__(
+43: 			    self,
+44: 			    properties: SecretProperties,
+45: 			    value: Optional[str]
+46: 			) -> None
+47: 
+48: 		def __repr__(self) -> str
+49: 
+50: 
+51: 	class azure.keyvault.secrets.KeyVaultSecretIdentifier:
+52: 		property name: str    # Read-only
+53: 		property source_id: str    # Read-only
+54: 		property vault_url: str    # Read-only
+55: 		property version: Optional[str]    # Read-only
+56: 
+57: 		def __init__(self, source_id: str) -> None
 58: 
-59: 		@distributed_trace
-60: 		def backup_secret(
-61: 			    self,
-62: 			    name: str,
-63: 			    **kwargs
-64: 			) -> bytes
-65: 
-66: 		@distributed_trace
-67: 		def begin_delete_secret(
-68: 			    self,
-69: 			    name: str,
-70: 			    **kwargs
-71: 			) -> DeletedSecret
+59: 
+60: 	class azure.keyvault.secrets.SecretClient(KeyVaultClientBase): implements ContextManager
+61: 		property vault_url: str    # Read-only
+62: 
+63: 		def __init__(
+64: 			    self,
+65: 			    vault_url: str,
+66: 			    credential: TokenCredential,
+67: 			    *,
+68: 			    api_version: Union[ApiVersion, str] = ...,
+69: 			    verify_challenge_resource: Optional[bool] = ...,
+70: 			    **kwargs: Any
+71: 			) -> None
 72: 
 73: 		@distributed_trace
-74: 		def begin_recover_deleted_secret(
+74: 		def backup_secret(
 75: 			    self,
 76: 			    name: str,
-77: 			    **kwargs
-78: 			) -> SecretProperties
+77: 			    **kwargs: Any
+78: 			) -> bytes
 79: 
-80: 		def close(self) -> None
-81: 
-82: 		@distributed_trace
-83: 		def get_deleted_secret(
-84: 			    self,
-85: 			    name: str,
-86: 			    **kwargs
-87: 			) -> DeletedSecret
-88: 
-89: 		@distributed_trace
-90: 		def get_secret(
-91: 			    self,
-92: 			    name: str,
-93: 			    version: str = None,
-94: 			    **kwargs
-95: 			) -> KeyVaultSecret
-96: 
-97: 		@distributed_trace
-98: 		def list_deleted_secrets(self, **kwargs) -> ItemPaged[DeletedSecret]
-99: 
-100: 		@distributed_trace
-101: 		def list_properties_of_secret_versions(
-102: 			    self,
-103: 			    name: str,
-104: 			    **kwargs
-105: 			) -> ItemPaged[SecretProperties]
-106: 
-107: 		@distributed_trace
-108: 		def list_properties_of_secrets(self, **kwargs) -> ItemPaged[SecretProperties]
-109: 
-110: 		@distributed_trace
-111: 		def purge_deleted_secret(
-112: 			    self,
-113: 			    name: str,
-114: 			    **kwargs
-115: 			) -> None
-116: 
-117: 		@distributed_trace
-118: 		def restore_secret_backup(
-119: 			    self,
-120: 			    backup: bytes,
-121: 			    **kwargs
-122: 			) -> SecretProperties
+80: 		@distributed_trace
+81: 		def begin_delete_secret(
+82: 			    self,
+83: 			    name: str,
+84: 			    **kwargs: Any
+85: 			) -> LROPoller[DeletedSecret]
+86: 
+87: 		@distributed_trace
+88: 		def begin_recover_deleted_secret(
+89: 			    self,
+90: 			    name: str,
+91: 			    **kwargs: Any
+92: 			) -> LROPoller[SecretProperties]
+93: 
+94: 		def close(self) -> None
+95: 
+96: 		@distributed_trace
+97: 		def get_deleted_secret(
+98: 			    self,
+99: 			    name: str,
+100: 			    **kwargs: Any
+101: 			) -> DeletedSecret
+102: 
+103: 		@distributed_trace
+104: 		def get_secret(
+105: 			    self,
+106: 			    name: str,
+107: 			    version: Optional[str] = None,
+108: 			    **kwargs: Any
+109: 			) -> KeyVaultSecret
+110: 
+111: 		@distributed_trace
+112: 		def list_deleted_secrets(self, **kwargs: Any) -> ItemPaged[DeletedSecret]
+113: 
+114: 		@distributed_trace
+115: 		def list_properties_of_secret_versions(
+116: 			    self,
+117: 			    name: str,
+118: 			    **kwargs: Any
+119: 			) -> ItemPaged[SecretProperties]
+120: 
+121: 		@distributed_trace
+122: 		def list_properties_of_secrets(self, **kwargs: Any) -> ItemPaged[SecretProperties]
 123: 
 124: 		@distributed_trace
-125: 		def set_secret(
+125: 		def purge_deleted_secret(
 126: 			    self,
 127: 			    name: str,
-128: 			    value: str,
-129: 			    *,
-130: 			    content_type: Optional[str] = ...,
-131: 			    enabled: Optional[bool] = ...,
-132: 			    expires_on: Optional[datetime] = ...,
-133: 			    not_before: Optional[datetime] = ...,
-134: 			    tags: dict[str, str] = ...,
-135: 			    **kwargs
-136: 			) -> KeyVaultSecret
+128: 			    **kwargs: Any
+129: 			) -> None
+130: 
+131: 		@distributed_trace
+132: 		def restore_secret_backup(
+133: 			    self,
+134: 			    backup: bytes,
+135: 			    **kwargs: Any
+136: 			) -> SecretProperties
 137: 
 138: 		@distributed_trace
-139: 		def update_secret_properties(
+139: 		def send_request(
 140: 			    self,
-141: 			    name: str,
-142: 			    version: str = None,
-143: 			    *,
-144: 			    content_type: Optional[str] = ...,
-145: 			    enabled: Optional[bool] = ...,
-146: 			    expires_on: Optional[datetime] = ...,
-147: 			    not_before: Optional[datetime] = ...,
-148: 			    tags: dict[str, str] = ...,
-149: 			    **kwargs
-150: 			) -> SecretProperties
-151: 
-152: 
-153: 	class azure.keyvault.secrets.SecretProperties:
-154: 		property content_type: str    # Read-only
-155: 		property created_on: datetime    # Read-only
-156: 		property enabled: bool    # Read-only
-157: 		property expires_on: datetime    # Read-only
-158: 		property id: str    # Read-only
-159: 		property key_id: str    # Read-only
-160: 		property name: str    # Read-only
-161: 		property not_before: datetime    # Read-only
-162: 		property recoverable_days: Optional[int]    # Read-only
-163: 		property recovery_level: str    # Read-only
-164: 		property tags: Dict[str, str]    # Read-only
-165: 		property updated_on: datetime    # Read-only
-166: 		property vault_url: str    # Read-only
-167: 		property version: str    # Read-only
-168: 
-169: 		def __init__(
-170: 			    self,
-171: 			    attributes,
-172: 			    vault_id,
-173: 			    **kwargs
-174: 			) -> None
+141: 			    request: HttpRequest,
+142: 			    *,
+143: 			    stream: bool = False,
+144: 			    **kwargs: Any
+145: 			) -> HttpResponse
+146: 
+147: 		@distributed_trace
+148: 		def set_secret(
+149: 			    self,
+150: 			    name: str,
+151: 			    value: str,
+152: 			    *,
+153: 			    content_type: Optional[str] = ...,
+154: 			    enabled: Optional[bool] = ...,
+155: 			    expires_on: Optional[datetime] = ...,
+156: 			    not_before: Optional[datetime] = ...,
+157: 			    tags: Optional[Dict[str, str]] = ...,
+158: 			    **kwargs: Any
+159: 			) -> KeyVaultSecret
+160: 
+161: 		@distributed_trace
+162: 		def update_secret_properties(
+163: 			    self,
+164: 			    name: str,
+165: 			    version: Optional[str] = None,
+166: 			    *,
+167: 			    content_type: Optional[str] = ...,
+168: 			    enabled: Optional[bool] = ...,
+169: 			    expires_on: Optional[datetime] = ...,
+170: 			    not_before: Optional[datetime] = ...,
+171: 			    tags: Optional[Dict[str, str]] = ...,
+172: 			    **kwargs: Any
+173: 			) -> SecretProperties
+174: 
 175: 
-176: 		def __repr__(self)
-177: 
-178: 
-179: namespace azure.keyvault.secrets.aio
-180: 
-181: 	class azure.keyvault.secrets.aio.SecretClient(AsyncKeyVaultClientBase): implements AsyncContextManager
-182: 		property vault_url: str    # Read-only
-183: 
-184: 		def __init__(
-185: 			    self,
-186: 			    vault_url: str,
-187: 			    credential: AsyncTokenCredential,
-188: 			    *,
-189: 			    api_version: ApiVersion = ...,
-190: 			    transport: AsyncHttpTransport = ...,
-191: 			    **kwargs: Any
-192: 			) -> None
-193: 
-194: 		@distributed_trace_async
-195: 		async def backup_secret(
-196: 			    self,
-197: 			    name: str,
-198: 			    **kwargs: Any
-199: 			) -> bytes
+176: 	class azure.keyvault.secrets.SecretProperties:
+177: 		property content_type: Optional[str]    # Read-only
+178: 		property created_on: Optional[datetime]    # Read-only
+179: 		property enabled: Optional[bool]    # Read-only
+180: 		property expires_on: Optional[datetime]    # Read-only
+181: 		property id: Optional[str]    # Read-only
+182: 		property key_id: Optional[str]    # Read-only
+183: 		property managed: Optional[bool]    # Read-only
+184: 		property name: Optional[str]    # Read-only
+185: 		property not_before: Optional[datetime]    # Read-only
+186: 		property recoverable_days: Optional[int]    # Read-only
+187: 		property recovery_level: Optional[str]    # Read-only
+188: 		property tags: Optional[Dict[str, str]]    # Read-only
+189: 		property updated_on: Optional[datetime]    # Read-only
+190: 		property vault_url: Optional[str]    # Read-only
+191: 		property version: Optional[str]    # Read-only
+192: 
+193: 		def __init__(
+194: 			    self,
+195: 			    *args: Any,
+196: 			    **kwargs: Any
+197: 			) -> None
+198: 
+199: 		def __repr__(self) -> str
 200: 
-201: 		async def close(self) -> None
-202: 
-203: 		@distributed_trace_async
-204: 		async def delete_secret(
-205: 			    self,
-206: 			    name: str,
-207: 			    **kwargs: Any
-208: 			) -> DeletedSecret
-209: 
-210: 		@distributed_trace_async
-211: 		async def get_deleted_secret(
-212: 			    self,
-213: 			    name: str,
+201: 
+202: namespace azure.keyvault.secrets.aio
+203: 
+204: 	class azure.keyvault.secrets.aio.SecretClient(AsyncKeyVaultClientBase): implements AsyncContextManager
+205: 		property vault_url: str    # Read-only
+206: 
+207: 		def __init__(
+208: 			    self,
+209: 			    vault_url: str,
+210: 			    credential: AsyncTokenCredential,
+211: 			    *,
+212: 			    api_version: Union[ApiVersion, str] = ...,
+213: 			    verify_challenge_resource: Optional[bool] = ...,
 214: 			    **kwargs: Any
-215: 			) -> DeletedSecret
+215: 			) -> None
 216: 
 217: 		@distributed_trace_async
-218: 		async def get_secret(
+218: 		async def backup_secret(
 219: 			    self,
 220: 			    name: str,
-221: 			    version: Optional[str] = None,
-222: 			    **kwargs: Any
-223: 			) -> KeyVaultSecret
-224: 
-225: 		@distributed_trace
-226: 		def list_deleted_secrets(self, **kwargs: Any) -> AsyncIterable[DeletedSecret]
-227: 
-228: 		@distributed_trace
-229: 		def list_properties_of_secret_versions(
-230: 			    self,
-231: 			    name: str,
-232: 			    **kwargs: Any
-233: 			) -> AsyncIterable[SecretProperties]
-234: 
-235: 		@distributed_trace
-236: 		def list_properties_of_secrets(self, **kwargs: Any) -> AsyncIterable[SecretProperties]
-237: 
-238: 		@distributed_trace_async
-239: 		async def purge_deleted_secret(
-240: 			    self,
-241: 			    name: str,
-242: 			    **kwargs: Any
-243: 			) -> None
-244: 
-245: 		@distributed_trace_async
-246: 		async def recover_deleted_secret(
-247: 			    self,
-248: 			    name: str,
-249: 			    **kwargs: Any
-250: 			) -> SecretProperties
-251: 
-252: 		@distributed_trace_async
-253: 		async def restore_secret_backup(
-254: 			    self,
-255: 			    backup: bytes,
-256: 			    **kwargs: Any
-257: 			) -> SecretProperties
-258: 
-259: 		@distributed_trace_async
-260: 		async def set_secret(
-261: 			    self,
-262: 			    name: str,
-263: 			    value: str,
-264: 			    *,
-265: 			    content_type: Optional[str] = ...,
-266: 			    enabled: Optional[bool] = ...,
-267: 			    expires_on: Optional[datetime] = ...,
-268: 			    not_before: Optional[datetime] = ...,
-269: 			    tags: dict[str, str] = ...,
-270: 			    **kwargs: Any
-271: 			) -> KeyVaultSecret
-272: 
-273: 		@distributed_trace_async
-274: 		async def update_secret_properties(
-275: 			    self,
-276: 			    name: str,
-277: 			    version: Optional[str] = None,
-278: 			    *,
-279: 			    content_type: Optional[str] = ...,
-280: 			    enabled: Optional[bool] = ...,
-281: 			    expires_on: Optional[datetime] = ...,
-282: 			    not_before: Optional[datetime] = ...,
-283: 			    tags: dict[str, str] = ...,
-284: 			    **kwargs: Any
-285: 			) -> SecretProperties
-286: 
-287: 
+221: 			    **kwargs: Any
+222: 			) -> bytes
+223: 
+224: 		async def close(self) -> None
+225: 
+226: 		@distributed_trace_async
+227: 		async def delete_secret(
+228: 			    self,
+229: 			    name: str,
+230: 			    **kwargs: Any
+231: 			) -> DeletedSecret
+232: 
+233: 		@distributed_trace_async
+234: 		async def get_deleted_secret(
+235: 			    self,
+236: 			    name: str,
+237: 			    **kwargs: Any
+238: 			) -> DeletedSecret
+239: 
+240: 		@distributed_trace_async
+241: 		async def get_secret(
+242: 			    self,
+243: 			    name: str,
+244: 			    version: Optional[str] = None,
+245: 			    **kwargs: Any
+246: 			) -> KeyVaultSecret
+247: 
+248: 		@distributed_trace
+249: 		def list_deleted_secrets(self, **kwargs: Any) -> AsyncItemPaged[DeletedSecret]
+250: 
+251: 		@distributed_trace
+252: 		def list_properties_of_secret_versions(
+253: 			    self,
+254: 			    name: str,
+255: 			    **kwargs: Any
+256: 			) -> AsyncItemPaged[SecretProperties]
+257: 
+258: 		@distributed_trace
+259: 		def list_properties_of_secrets(self, **kwargs: Any) -> AsyncItemPaged[SecretProperties]
+260: 
+261: 		@distributed_trace_async
+262: 		async def purge_deleted_secret(
+263: 			    self,
+264: 			    name: str,
+265: 			    **kwargs: Any
+266: 			) -> None
+267: 
+268: 		@distributed_trace_async
+269: 		async def recover_deleted_secret(
+270: 			    self,
+271: 			    name: str,
+272: 			    **kwargs: Any
+273: 			) -> SecretProperties
+274: 
+275: 		@distributed_trace_async
+276: 		async def restore_secret_backup(
+277: 			    self,
+278: 			    backup: bytes,
+279: 			    **kwargs: Any
+280: 			) -> SecretProperties
+281: 
+282: 		@distributed_trace_async
+283: 		def send_request(
+284: 			    self,
+285: 			    request: HttpRequest,
+286: 			    *,
+287: 			    stream: bool = False,
+288: 			    **kwargs: Any
+289: 			) -> Awaitable[AsyncHttpResponse]
+290: 
+291: 		@distributed_trace_async
+292: 		async def set_secret(
+293: 			    self,
+294: 			    name: str,
+295: 			    value: str,
+296: 			    *,
+297: 			    content_type: Optional[str] = ...,
+298: 			    enabled: Optional[bool] = ...,
+299: 			    expires_on: Optional[datetime] = ...,
+300: 			    not_before: Optional[datetime] = ...,
+301: 			    tags: Optional[Dict[str, str]] = ...,
+302: 			    **kwargs: Any
+303: 			) -> KeyVaultSecret
+304: 
+305: 		@distributed_trace_async
+306: 		async def update_secret_properties(
+307: 			    self,
+308: 			    name: str,
+309: 			    version: Optional[str] = None,
+310: 			    *,
+311: 			    content_type: Optional[str] = ...,
+312: 			    enabled: Optional[bool] = ...,
+313: 			    expires_on: Optional[datetime] = ...,
+314: 			    not_before: Optional[datetime] = ...,
+315: 			    tags: Optional[Dict[str, str]] = ...,
+316: 			    **kwargs: Any
+317: 			) -> SecretProperties
+318: 
+319: 