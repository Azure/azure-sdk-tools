trigger:
  branches:
    include:
      - main
  paths:
    include:
      - tools/spec-gen-sdk

pr:
  branches:
    include:
      - main
  paths:
    include:
      - tools/spec-gen-sdk

extends:
  template: /eng/pipelines/templates/stages/archetype-sdk-publish-js.yml
  parameters:
    BuildStageName: InstallAndBuild
    ArtifactName: drop
    PackageJsonPath: $(Build.SourcesDirectory)/tools/spec-gen-sdk
    BuildStages:
      - stage: InstallAndBuild
        variables:
          - template: /eng/pipelines/templates/variables/globals.yml
          - template: /eng/pipelines/templates/variables/image.yml
          - name: NodeVersion
            value: '20.x'
          - name: VAR_ARTIFACT_NAME
            value: 'drop'
          - name: VAR_BUILD_ARTIFACT_STAGING_DIRECTORY
            value: $(Build.ArtifactStagingDirectory)
        jobs:
          - job: Build_Linux
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux
            steps:
              - task: NodeTool@0
                inputs:
                  versionSpec: '$(NodeVersion)'
                displayName: 'Install Node.js'

              - bash: |
                  npm ci
                displayName: 'npm ci'
                workingDirectory: $(System.DefaultWorkingDirectory)/tools/spec-gen-sdk

              - bash: |
                  npm run build-test
                displayName: 'build and test'
                workingDirectory: $(System.DefaultWorkingDirectory)/tools/spec-gen-sdk

              - bash: |
                  npm pack
                displayName: 'npm pack'
                workingDirectory: $(System.DefaultWorkingDirectory)/tools/spec-gen-sdk

              - bash: 'cp azure-tools-spec-gen-sdk-*.tgz $(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)'
                displayName: 'copy to staging directory'
                workingDirectory: $(System.DefaultWorkingDirectory)/tools/spec-gen-sdk

              - pwsh: |
                  Get-ChildItem -Path $(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY) `
                    | ForEach-Object { Write-Host "npm install $($_.FullName)"; npm install $_.FullName }
                displayName: Smoke test a package installation

              - task: 1ES.PublishPipelineArtifact@1
                inputs:
                  targetPath: '$(VAR_BUILD_ARTIFACT_STAGING_DIRECTORY)'
                  artifactName: '$(VAR_ARTIFACT_NAME)'