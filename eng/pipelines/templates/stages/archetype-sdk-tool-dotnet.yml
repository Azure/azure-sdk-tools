stages:
- stage: Build
  variables:
  - template: ../variables/globals.yml
  jobs:
  - job: BuildPackage
    pool:
      name: azsdk-pool-mms-ubuntu-1804-general
      vmImage: MMSUbuntu18.04
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
        inputs:
          version: '$(DotNetCoreVersion)'
      - script: 'dotnet pack -o $(Build.ArtifactStagingDirectory) -warnaserror'
        displayName: 'Build and Package'
        workingDirectory: $(Build.SourcesDirectory)/tools/${{parameters.ToolDirectory}}
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          DOTNET_MULTILEVEL_LOOKUP: 0
      - publish: $(Build.ArtifactStagingDirectory)
        displayName: Publish package to run artifacts
        artifact: packages
        condition: succeededOrFailed()
- ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
  - stage: Release
    dependsOn: Build
    jobs:
    - deployment: PublishPackage
      environment: tools
      pool:
        name: azsdk-pool-mms-ubuntu-1804-general
        vmImage: MMSUbuntu18.04
      variables:
      - template: ../variables/globals.yml
      strategy:
        runOnce:
          deploy:
            steps:
            - task: NuGetCommand@2
              inputs:
                command: 'push'
                packagesToPush: '$(Pipeline.Workspace)/packages/**/*.nupkg'
                nuGetFeedType: 'internal'
                publishVstsFeed: '29ec6040-b234-4e31-b139-33dc4287b756/12354d14-c9a7-4f21-97dc-d3b97f89d71d'
