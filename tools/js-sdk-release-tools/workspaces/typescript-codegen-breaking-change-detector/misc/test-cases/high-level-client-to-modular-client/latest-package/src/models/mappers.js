"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataTypesDeleteDataHeaders = exports.DataTypesDeleteHeaders = exports.DataTypesUpdateHeaders = exports.DataTypesCreateHeaders = exports.DataProductsDeleteHeaders = exports.DataProductsUpdateHeaders = exports.DataProductsCreateHeaders = exports.DataType = exports.DataProductsCatalog = exports.DataProduct = exports.ProxyResource = exports.TrackedResource = exports.ResourceAccessRules = exports.KeyVaultInfo = exports.ListRoleAssignments = exports.AccountSasToken = exports.AccountSas = exports.ContainerSasToken = exports.ContainerSaS = exports.DataTypeUpdateProperties = exports.DataTypeUpdate = exports.DataTypeProperties = exports.DataTypeListResult = exports.RoleAssignmentDetail = exports.RoleAssignmentCommonProperties = exports.DataProductUpdateProperties = exports.DataProductUpdate = exports.DataProductVersion = exports.DataProductInformation = exports.PublisherInformation = exports.DataProductsCatalogProperties = exports.DataProductsCatalogListResult = exports.SystemData = exports.Resource = exports.UserAssignedIdentity = exports.ManagedServiceIdentity = exports.ConsumptionEndpointsProperties = exports.ManagedResourceGroupConfiguration = exports.IPRules = exports.VirtualNetworkRule = exports.DataProductNetworkAcls = exports.EncryptionKeyDetails = exports.DataProductProperties = exports.DataProductListResult = exports.ErrorAdditionalInfo = exports.ErrorDetail = exports.ErrorResponse = exports.OperationDisplay = exports.Operation = exports.OperationListResult = void 0;
exports.OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            actionType: {
                serializedName: "actionType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
exports.ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
exports.ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
exports.DataProductListResult = {
    type: {
        name: "Composite",
        className: "DataProductListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataProduct"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataProductProperties = {
    type: {
        name: "Composite",
        className: "DataProductProperties",
        modelProperties: {
            resourceGuid: {
                serializedName: "resourceGuid",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            publisher: {
                serializedName: "publisher",
                required: true,
                type: {
                    name: "String"
                }
            },
            product: {
                serializedName: "product",
                required: true,
                type: {
                    name: "String"
                }
            },
            majorVersion: {
                serializedName: "majorVersion",
                required: true,
                type: {
                    name: "String"
                }
            },
            owners: {
                serializedName: "owners",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            redundancy: {
                serializedName: "redundancy",
                type: {
                    name: "String"
                }
            },
            purviewAccount: {
                serializedName: "purviewAccount",
                type: {
                    name: "String"
                }
            },
            purviewCollection: {
                serializedName: "purviewCollection",
                type: {
                    name: "String"
                }
            },
            privateLinksEnabled: {
                serializedName: "privateLinksEnabled",
                type: {
                    name: "String"
                }
            },
            publicNetworkAccess: {
                serializedName: "publicNetworkAccess",
                type: {
                    name: "String"
                }
            },
            customerManagedKeyEncryptionEnabled: {
                serializedName: "customerManagedKeyEncryptionEnabled",
                type: {
                    name: "String"
                }
            },
            customerEncryptionKey: {
                serializedName: "customerEncryptionKey",
                type: {
                    name: "Composite",
                    className: "EncryptionKeyDetails"
                }
            },
            networkacls: {
                serializedName: "networkacls",
                type: {
                    name: "Composite",
                    className: "DataProductNetworkAcls"
                }
            },
            managedResourceGroupConfiguration: {
                serializedName: "managedResourceGroupConfiguration",
                type: {
                    name: "Composite",
                    className: "ManagedResourceGroupConfiguration"
                }
            },
            availableMinorVersions: {
                serializedName: "availableMinorVersions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            currentMinorVersion: {
                serializedName: "currentMinorVersion",
                type: {
                    name: "String"
                }
            },
            documentation: {
                serializedName: "documentation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            consumptionEndpoints: {
                serializedName: "consumptionEndpoints",
                type: {
                    name: "Composite",
                    className: "ConsumptionEndpointsProperties"
                }
            },
            keyVaultUrl: {
                serializedName: "keyVaultUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.EncryptionKeyDetails = {
    type: {
        name: "Composite",
        className: "EncryptionKeyDetails",
        modelProperties: {
            keyVaultUri: {
                serializedName: "keyVaultUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            keyName: {
                serializedName: "keyName",
                required: true,
                type: {
                    name: "String"
                }
            },
            keyVersion: {
                serializedName: "keyVersion",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataProductNetworkAcls = {
    type: {
        name: "Composite",
        className: "DataProductNetworkAcls",
        modelProperties: {
            virtualNetworkRule: {
                serializedName: "virtualNetworkRule",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            ipRules: {
                serializedName: "ipRules",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IPRules"
                        }
                    }
                }
            },
            allowedQueryIpRangeList: {
                serializedName: "allowedQueryIpRangeList",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            defaultAction: {
                serializedName: "defaultAction",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.VirtualNetworkRule = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.IPRules = {
    type: {
        name: "Composite",
        className: "IPRules",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            action: {
                serializedName: "action",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ManagedResourceGroupConfiguration = {
    type: {
        name: "Composite",
        className: "ManagedResourceGroupConfiguration",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ConsumptionEndpointsProperties = {
    type: {
        name: "Composite",
        className: "ConsumptionEndpointsProperties",
        modelProperties: {
            ingestionUrl: {
                serializedName: "ingestionUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ingestionResourceId: {
                serializedName: "ingestionResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            fileAccessUrl: {
                serializedName: "fileAccessUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            fileAccessResourceId: {
                serializedName: "fileAccessResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            queryUrl: {
                serializedName: "queryUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            queryResourceId: {
                serializedName: "queryResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ManagedServiceIdentity = {
    type: {
        name: "Composite",
        className: "ManagedServiceIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "UserAssignedIdentity" }
                    }
                }
            }
        }
    }
};
exports.UserAssignedIdentity = {
    type: {
        name: "Composite",
        className: "UserAssignedIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
exports.Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
exports.SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
exports.DataProductsCatalogListResult = {
    type: {
        name: "Composite",
        className: "DataProductsCatalogListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataProductsCatalog"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataProductsCatalogProperties = {
    type: {
        name: "Composite",
        className: "DataProductsCatalogProperties",
        modelProperties: {
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            publishers: {
                serializedName: "publishers",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PublisherInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.PublisherInformation = {
    type: {
        name: "Composite",
        className: "PublisherInformation",
        modelProperties: {
            publisherName: {
                serializedName: "publisherName",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataProducts: {
                serializedName: "dataProducts",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataProductInformation"
                        }
                    }
                }
            }
        }
    }
};
exports.DataProductInformation = {
    type: {
        name: "Composite",
        className: "DataProductInformation",
        modelProperties: {
            dataProductName: {
                serializedName: "dataProductName",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataProductVersions: {
                serializedName: "dataProductVersions",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataProductVersion"
                        }
                    }
                }
            }
        }
    }
};
exports.DataProductVersion = {
    type: {
        name: "Composite",
        className: "DataProductVersion",
        modelProperties: {
            version: {
                serializedName: "version",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataProductUpdate = {
    type: {
        name: "Composite",
        className: "DataProductUpdate",
        modelProperties: {
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataProductUpdateProperties"
                }
            }
        }
    }
};
exports.DataProductUpdateProperties = {
    type: {
        name: "Composite",
        className: "DataProductUpdateProperties",
        modelProperties: {
            owners: {
                serializedName: "owners",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            purviewAccount: {
                serializedName: "purviewAccount",
                type: {
                    name: "String"
                }
            },
            purviewCollection: {
                serializedName: "purviewCollection",
                type: {
                    name: "String"
                }
            },
            privateLinksEnabled: {
                serializedName: "privateLinksEnabled",
                type: {
                    name: "String"
                }
            },
            currentMinorVersion: {
                serializedName: "currentMinorVersion",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RoleAssignmentCommonProperties = {
    type: {
        name: "Composite",
        className: "RoleAssignmentCommonProperties",
        modelProperties: {
            roleId: {
                serializedName: "roleId",
                required: true,
                type: {
                    name: "String"
                }
            },
            principalId: {
                serializedName: "principalId",
                required: true,
                type: {
                    name: "String"
                }
            },
            userName: {
                serializedName: "userName",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataTypeScope: {
                serializedName: "dataTypeScope",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            principalType: {
                serializedName: "principalType",
                required: true,
                type: {
                    name: "String"
                }
            },
            role: {
                serializedName: "role",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.RoleAssignmentDetail = {
    type: {
        name: "Composite",
        className: "RoleAssignmentDetail",
        modelProperties: {
            roleId: {
                serializedName: "roleId",
                required: true,
                type: {
                    name: "String"
                }
            },
            principalId: {
                serializedName: "principalId",
                required: true,
                type: {
                    name: "String"
                }
            },
            userName: {
                serializedName: "userName",
                required: true,
                type: {
                    name: "String"
                }
            },
            dataTypeScope: {
                serializedName: "dataTypeScope",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            principalType: {
                serializedName: "principalType",
                required: true,
                type: {
                    name: "String"
                }
            },
            role: {
                serializedName: "role",
                required: true,
                type: {
                    name: "String"
                }
            },
            roleAssignmentId: {
                serializedName: "roleAssignmentId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataTypeListResult = {
    type: {
        name: "Composite",
        className: "DataTypeListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataType"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataTypeProperties = {
    type: {
        name: "Composite",
        className: "DataTypeProperties",
        modelProperties: {
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            stateReason: {
                serializedName: "stateReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            storageOutputRetention: {
                serializedName: "storageOutputRetention",
                type: {
                    name: "Number"
                }
            },
            databaseCacheRetention: {
                serializedName: "databaseCacheRetention",
                type: {
                    name: "Number"
                }
            },
            databaseRetention: {
                serializedName: "databaseRetention",
                type: {
                    name: "Number"
                }
            },
            visualizationUrl: {
                serializedName: "visualizationUrl",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataTypeUpdate = {
    type: {
        name: "Composite",
        className: "DataTypeUpdate",
        modelProperties: {
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataTypeUpdateProperties"
                }
            }
        }
    }
};
exports.DataTypeUpdateProperties = {
    type: {
        name: "Composite",
        className: "DataTypeUpdateProperties",
        modelProperties: {
            state: {
                serializedName: "state",
                type: {
                    name: "String"
                }
            },
            storageOutputRetention: {
                serializedName: "storageOutputRetention",
                type: {
                    name: "Number"
                }
            },
            databaseCacheRetention: {
                serializedName: "databaseCacheRetention",
                type: {
                    name: "Number"
                }
            },
            databaseRetention: {
                serializedName: "databaseRetention",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.ContainerSaS = {
    type: {
        name: "Composite",
        className: "ContainerSaS",
        modelProperties: {
            startTimeStamp: {
                serializedName: "startTimeStamp",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            expiryTimeStamp: {
                serializedName: "expiryTimeStamp",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            ipAddress: {
                serializedName: "ipAddress",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ContainerSasToken = {
    type: {
        name: "Composite",
        className: "ContainerSasToken",
        modelProperties: {
            storageContainerSasToken: {
                serializedName: "storageContainerSasToken",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AccountSas = {
    type: {
        name: "Composite",
        className: "AccountSas",
        modelProperties: {
            startTimeStamp: {
                serializedName: "startTimeStamp",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            expiryTimeStamp: {
                serializedName: "expiryTimeStamp",
                required: true,
                type: {
                    name: "DateTime"
                }
            },
            ipAddress: {
                serializedName: "ipAddress",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.AccountSasToken = {
    type: {
        name: "Composite",
        className: "AccountSasToken",
        modelProperties: {
            storageAccountSasToken: {
                serializedName: "storageAccountSasToken",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ListRoleAssignments = {
    type: {
        name: "Composite",
        className: "ListRoleAssignments",
        modelProperties: {
            count: {
                serializedName: "count",
                required: true,
                type: {
                    name: "Number"
                }
            },
            roleAssignmentResponse: {
                serializedName: "roleAssignmentResponse",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RoleAssignmentDetail"
                        }
                    }
                }
            }
        }
    }
};
exports.KeyVaultInfo = {
    type: {
        name: "Composite",
        className: "KeyVaultInfo",
        modelProperties: {
            keyVaultUrl: {
                serializedName: "keyVaultUrl",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ResourceAccessRules = {
    type: {
        name: "Composite",
        className: "ResourceAccessRules",
        modelProperties: {
            tenantId: {
                serializedName: "tenantId",
                required: true,
                type: {
                    name: "String"
                }
            },
            resourceId: {
                serializedName: "resourceId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: {
            ...exports.Resource.type.modelProperties,
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: {
            ...exports.Resource.type.modelProperties
        }
    }
};
exports.DataProduct = {
    type: {
        name: "Composite",
        className: "DataProduct",
        modelProperties: {
            ...exports.TrackedResource.type.modelProperties,
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataProductProperties"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ManagedServiceIdentity"
                }
            }
        }
    }
};
exports.DataProductsCatalog = {
    type: {
        name: "Composite",
        className: "DataProductsCatalog",
        modelProperties: {
            ...exports.ProxyResource.type.modelProperties,
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataProductsCatalogProperties"
                }
            }
        }
    }
};
exports.DataType = {
    type: {
        name: "Composite",
        className: "DataType",
        modelProperties: {
            ...exports.ProxyResource.type.modelProperties,
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DataTypeProperties"
                }
            }
        }
    }
};
exports.DataProductsCreateHeaders = {
    type: {
        name: "Composite",
        className: "DataProductsCreateHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.DataProductsUpdateHeaders = {
    type: {
        name: "Composite",
        className: "DataProductsUpdateHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataProductsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "DataProductsDeleteHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataTypesCreateHeaders = {
    type: {
        name: "Composite",
        className: "DataTypesCreateHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
exports.DataTypesUpdateHeaders = {
    type: {
        name: "Composite",
        className: "DataTypesUpdateHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataTypesDeleteHeaders = {
    type: {
        name: "Composite",
        className: "DataTypesDeleteHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
exports.DataTypesDeleteDataHeaders = {
    type: {
        name: "Composite",
        className: "DataTypesDeleteDataHeaders",
        modelProperties: {
            retryAfter: {
                serializedName: "retry-after",
                type: {
                    name: "Number"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map