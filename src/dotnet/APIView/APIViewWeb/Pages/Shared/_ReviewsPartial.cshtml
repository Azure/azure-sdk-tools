
@using APIViewWeb.Helpers;
@using APIViewWeb.LeanModels;
@using APIViewWeb.Models
@using System
@using System.Text.RegularExpressions
@model (IEnumerable<ReviewListItemModel> Reviews, int TotalCount, int TotalPages, int CurrentPage, int? PreviousPage, int? NextPage)
<div class="mt-3 row">
    @if (Model.Reviews.Any())
    {
        <div class="col-12 p-0 rounded table-responsive" id="reviews-table-container">
            <table id="reviews-table" class="table table-sm table-hover m-0" style="width:100%">
                <thead>
                    <tr>
                        <th scope="col" class="ps-4">Name</th>
                        <th scope="col" class="cst-bdr-left ps-3">Author</th>
                        <th scope="col" class="cst-bdr-left ps-3">Last Updated</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var review in Model.Reviews)
                    {
                        var truncationIndex = @Math.Min(@review.PackageName.Length, 100);
                        <tr class="package-data-row">
                            <td class="align-middle ps-4 pt-0 pb-0">
                                @if (review.Language != null)
                                {
                                    string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(@review.Language);
                                    <span role="img" class="mx-1 icon icon-language @iconClassName" aria-label="@review.Language"></span>
                                }
                                <a class="review-name align-middle" asp-page="./Review" asp-route-id="@review.Id">@review.PackageName.Substring(0, @truncationIndex)</a>
                                @if (review.IsApproved == true)
                                {
                                    <i class="fas fa-check-circle text-success ml-2"></i>
                                }
                            </td>
                            <td class="align-middle cst-bdr-left ps-3">
                                <a username="@review.CreatedBy">@review.CreatedBy</a>
                            </td>
                            <td class="align-middle cst-bdr-left ps-3">
                                <span data-bs-toggle="tooltip" title="@review.LastUpdatedOn" date="@review.LastUpdatedOn.ToLocalTime()"></span>
                            </td>
                            <td>
                                @if (review.CreatedBy == User.GetGitHubLogin())
                                {
                                    <a asp-page="./Delete" asp-route-id="@review.Id">
                                        <button type="button" class="btn pt-0 pb-0 ps-1 pe-1 btn-outline-danger"><i class="fas fa-times-circle"></i> Delete</button>
                                    </a>
                                }
                                else
                                {
                                    <span data-bs-toggle="tooltip" title="Only review creator can delete.">
                                        <button type="button" class="btn pt-0 pb-0 ps-1 pe-1 btn-outline-secondary invisible" disabled="disabled"><i class="fas fa-times-circle"></i> Delete</button>
                                    </span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-12 p-0 mt-2 mb-0 text-center">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-1">
                    @if (Model.TotalPages > 1)
                    {
                        @if (Model.PreviousPage == null)
                        {
                            <li class="page-item disabled shadow-sm">
                                <a class="page-link" aria-label="Previous" role="button">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item shadow-sm">
                                <a class="page-link" aria-label="Previous" role="button" href="@Model.PreviousPage">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                    }
                    @{
                        int noOfPageLinks = 10;
                        int firstPageNo;
                        int lastPageNo;

                        if (Model.CurrentPage < noOfPageLinks)
                        {
                            firstPageNo = (Model.CurrentPage / noOfPageLinks) + 1;
                            lastPageNo = Math.Min(firstPageNo + (noOfPageLinks - 1), Model.TotalPages);
                        }
                        else
                        {
                            firstPageNo = ((Model.CurrentPage / noOfPageLinks) * noOfPageLinks);
                            lastPageNo = Math.Min(firstPageNo + (noOfPageLinks), Model.TotalPages);
                        }
                    }
                    @for (int i = firstPageNo; i < lastPageNo; i++)
                    {
                        if (i == Model.CurrentPage)
                        {
                            <li class="page-item active shadow-sm"><a class="page-link">@i</a></li>
                        }
                        else
                        {
                            <li class="page-item shadow-sm"><a class="page-link" href="@i">@i</a></li>
                        }
                    }
                    @if (Model.TotalPages > 1)
                    {
                        @if (Model.NextPage == null)
                        {
                            <li class="page-item disabled shadow-sm">
                                <a class="page-link" aria-label="Next" role="button">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item shadow-sm">
                                <a class="page-link" aria-label="Next" role="button" href="@Model.NextPage">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }

                    }
                </ul>
            </nav>
            <span class="badge border p-1">
                @{
                    var pageSize = (int)Math.Ceiling((double)Model.TotalCount / (double)Model.TotalPages);
                    var noOfFirstItemOnPage = ((Model.CurrentPage - 1) * pageSize) + 1;
                    var noOfLastItemOnPage = noOfFirstItemOnPage + (pageSize - 1);
                }
                @noOfFirstItemOnPage - @noOfLastItemOnPage / @Model.TotalCount
            </span>
        </div>
    }
    else
    {
        <div class="col-12 p-4 border rounded text-center shadow-sm">
            No Reviews Found.
        </div>
    }
</div>