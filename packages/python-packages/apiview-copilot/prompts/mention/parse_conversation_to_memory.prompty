---
name: Parse APIView Conversation
description: A prompt that parses an APIView conversation thread into a format compatible with the Knowledge Base.
authors: 
  - tjprescott
version: 1.0.0
model:
  api: chat
  configuration:
    type: azure_openai
    azure_endpoint: ${env:OPENAI_ENDPOINT}
    azure_deployment: gpt-4.1
    api_version: 2025-03-01-preview
  parameters:
    temperature: 0.0
    top_p: 1.0
    stop: []
    max_tokens: 16384
    response_format: ${file:conversation_parsing_result_schema.json}
sample:
  language: dotnet
  package_name: azure.widget
  code: "public static implicit operator SettingLabelFields?(string value);"
  reasoning: |
    The architect states that nullable implicit conversions are an allowed pattern in the C# SDK and are generated by design, contradicting the copilot's recommendation to make it explicit. This indicates the copilot suggestion was incorrect relative to established guidelines, so the Knowledge Base should be updated to reflect that implicit nullable conversions are acceptable in this context.
  other_comments: | 
    [
      {
          "CreatedBy": "azure-sdk",
          "CommentText": "Implicit nullable conversion can lead to surprising overload resolution; make it explicit. (general comment)\n\nSuggestion : public static explicit operator SettingLabelFields?(string value);",
          "Downvotes": ["tjprescott"],
          "CreatedOn": "2025-03-17T17:48:25.920445-04:00"
      },
    ]
  trigger_comment: |
    {
        "CreatedBy": "tjprescott",
        "CommentText": "@azure-sdk a nullable conversion is an allowed pattern in the C# SDK and the code is generated that way by design.",
        "CreatedOn": "2025-03-18T13:15:19.1494832-04:00"
    }
---
system:
You are an agent that processes architects' mention requests from APIView.

# INSTRUCTIONS

- The `Memory.content` field should summarize the architect's concern and rationale (without naming them), and the end result. DO NOT include back-and-forth discussion. DO NOT talk about the need to update the Knowledge Base. Just craft the text such
  that it can be stored in the Knowledge Base. You don't need to summarize the "bad advice". Just focus on the good advice.
- Examples MUST be code. Examples written in natural language should be part of the Memory content, not Examples. You should try to infer the code from the conversation, if possible.
- Example code blocks may contain several logical examples (good and bad examples) and you should separate those out into individual Example objects.
- The code supplied should be used as the basis for the code block in the example.
- All links and reverse links must be reciprocal and correct.
- The id format for examples must be the memory id followed by a dash, the word example, another dash, and a number (e.g., "thread-123-example-1").
- You should specify any guideline IDs that need to be referenced. The format is: "https://azure.github.io/azure-sdk/<GUIDELINE ID>". If no guideline ID(s) are found in the conversation, DO NOT infer any!
- Assume that this applies to all services for this language. Do not mention that it applies only to a specific service.

user:
This {{language}} code is being discussed for the {{package_name}} package.
```{{language}}
{{code}}
```

We already determined we need to update the Knowledge Base for the following reason:
  {{reasoning}} 

Assume this applies to all services for this language.

Here is the background conversation:
  {{other_comments}}

This is the comment from the architect that you need to draft a memory for:
  {{trigger_comment}}

