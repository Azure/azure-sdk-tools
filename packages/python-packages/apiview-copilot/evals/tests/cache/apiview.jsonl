{"testcase": "small_apiview_no_violations", "actual": "{\"comments\":[{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":170,\"bad_code\":\"    ivar list: List[DenseCaption]\",\"suggestion\":\"    ivar items: List[DenseCaption]\",\"comment\":\"Rename the 'list' attribute to 'items' to avoid shadowing Python’s built-in 'list'.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"}]}"}
{"testcase": "small_apiview_few_violations", "actual": "{\"comments\":[{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":173,\"bad_code\":\"def __init__(self, *, list: List[DenseCaption])\",\"suggestion\":\"def __init__(self, *, captions: List[DenseCaption])\",\"comment\":\"Avoid using the reserved name 'list'; use a descriptive name such as 'captions'.\",\"correlation_id\":\"d853dae3-ba16-416b-9f9a-2230f07678ff\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":365,\"bad_code\":\"def __init__(self, *, list: List[DetectedObject])\",\"suggestion\":\"def __init__(self, *, objects: List[DetectedObject])\",\"comment\":\"Rename parameter 'list' to 'objects' to avoid shadowing the built-in name.\",\"correlation_id\":\"d853dae3-ba16-416b-9f9a-2230f07678ff\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":405,\"bad_code\":\"def __init__(self, *, list: List[CropRegion])\",\"suggestion\":\"def __init__(self, *, crop_regions: List[CropRegion])\",\"comment\":\"Rename parameter 'list' to 'crop_regions' to prevent conflict with the built-in type.\",\"correlation_id\":\"d853dae3-ba16-416b-9f9a-2230f07678ff\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":424,\"bad_code\":\"def __init__(self, *, list: List[DetectedTag])\",\"suggestion\":\"def __init__(self, *, tags: List[DetectedTag])\",\"comment\":\"Rename parameter 'list' to 'tags' to avoid clashing with the built-in name.\",\"correlation_id\":\"d853dae3-ba16-416b-9f9a-2230f07678ff\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-models-enum-string\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":439,\"bad_code\":\"class azure.ai.vision.imageanalysis.models.VisualFeatures(str, Enum):\",\"suggestion\":\"class azure.ai.vision.imageanalysis.models.VisualFeatures(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum types should use CaseInsensitiveEnumMeta so that comparisons are case‐insensitive, as recommended by the guidelines.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"}]}"}
{"testcase": "medium_apiview_no_violations", "actual": "{\"comments\":[{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":6,\"bad_code\":\"class azure.healthinsights.clinicalmatching.ClinicalMatchingClient(ClinicalMatchingClientOperationsMixin): implements ContextManager\",\"suggestion\":\"class ClinicalMatchingClient(ClinicalMatchingClientOperationsMixin, ContextManager):\",\"comment\":\"Replace the non-Python 'implements' syntax with multiple inheritance for context management.\",\"correlation_id\":\"9fcce931-dff1-48a2-b416-56d06e65977a\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-azurecore-http-telemetry-appid\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":8,\"bad_code\":\"def __init__(\",\"suggestion\":\"def __init__(self, endpoint: str, credential: AzureKeyCredential, *, api_version: str = ..., polling_interval: Optional[int] = ..., application_id: Optional[str] = None, **kwargs: Any) -> None\",\"comment\":\"The synchronous client constructor is missing an 'application_id' keyword-only parameter for setting telemetry information.\",\"correlation_id\":\"0424b530-8ed9-4a37-a63e-1a357698996d\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":56,\"bad_code\":\"    content_type: str = ...,\",\"suggestion\":\"    content_type: str = \\\"application/json\\\",\",\"comment\":\"Use an explicit default value for content_type to match the overload signatures.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":78,\"bad_code\":\"class azure.healthinsights.clinicalmatching.aio.ClinicalMatchingClient(ClinicalMatchingClientOperationsMixin): implements AsyncContextManager\",\"suggestion\":\"class ClinicalMatchingClient(ClinicalMatchingClientOperationsMixin, AsyncContextManager):\",\"comment\":\"Replace 'implements' with proper multiple inheritance for async context management.\",\"correlation_id\":\"9fcce931-dff1-48a2-b416-56d06e65977a\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-azurecore-http-telemetry-appid\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":80,\"bad_code\":\"def __init__(\",\"suggestion\":\"def __init__(self, endpoint: str, credential: AzureKeyCredential, *, api_version: str = ..., polling_interval: Optional[int] = ..., application_id: Optional[str] = None, **kwargs: Any) -> None\",\"comment\":\"The asynchronous client constructor is missing an 'application_id' keyword-only parameter needed for proper telemetry.\",\"correlation_id\":\"0424b530-8ed9-4a37-a63e-1a357698996d\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":150,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.AcceptedAge(MutableMapping[str, Any]):\",\"suggestion\":\"def __repr__(self) -> str: return f'AcceptedAge(unit={self.unit!r}, value={self.value!r})'\",\"comment\":\"Model types should implement a __repr__ method that includes the type name and key properties to aid in debugging.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"4706e90f-7d52-434a-9823-f116c3a5886b\"],\"is_generic\":false,\"line_no\":732,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"The 'id' attribute should be optional to accurately reflect that it may not always be present in responses.\",\"correlation_id\":\"9c63f93a-76c6-44f4-b6b1-99b455669c74\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":760,\"bad_code\":\"ivar clinical_info: Optional[List[ForwardRef('ClinicalCodedElement')]]\",\"suggestion\":\"clinical_info: Optional[List['ClinicalCodedElement']] = None\",\"comment\":\"Prefer using string literal type annotations over explicit ForwardRef to simplify the syntax and improve readability.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"4706e90f-7d52-434a-9823-f116c3a5886b\"],\"is_generic\":false,\"line_no\":790,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"The 'id' attribute should be marked as Optional so that its absence in some responses is properly indicated.\",\"correlation_id\":\"9c63f93a-76c6-44f4-b6b1-99b455669c74\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"4706e90f-7d52-434a-9823-f116c3a5886b\"],\"is_generic\":false,\"line_no\":928,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"The 'id' attribute should be optional to match the API specification and ensure consistency with the documented model.\",\"correlation_id\":\"9c63f93a-76c6-44f4-b6b1-99b455669c74\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"}]}"}
{"testcase": "small_apiview_multiple_same_violations", "actual": "{\"comments\":[{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":5,\"bad_code\":\"class azure.ai.vision.imageanalysis.ImageAnalysisClient(ImageAnalysisClient): implements ContextManager\",\"suggestion\":\"class azure.ai.vision.imageanalysis.ImageAnalysisClient(ImageAnalysisClient):\",\"comment\":\"Avoid the non‐Pythonic 'implements' syntax and self‐inheritance; implement __enter__ and __exit__ for context management instead.\",\"correlation_id\":\"d91406ad-9bdd-42a8-b74f-3aeb3c9653c7\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":51,\"bad_code\":\"class azure.ai.vision.imageanalysis.aio.ImageAnalysisClient(ImageAnalysisClient): implements AsyncContextManager\",\"suggestion\":\"class azure.ai.vision.imageanalysis.aio.ImageAnalysisClient(ImageAnalysisClient):\",\"comment\":\"Remove 'implements AsyncContextManager' and implement __aenter__ and __aexit__ to support async context management.\",\"correlation_id\":\"d91406ad-9bdd-42a8-b74f-3aeb3c9653c7\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":97,\"bad_code\":\"class azure.ai.vision.imageanalysis.models.CaptionResult(MutableMapping[str, Any]):\",\"suggestion\":\"class azure.ai.vision.imageanalysis.models.CaptionResult(MutableMapping[str, Any]): def __repr__(self) -> str: return f\\\"CaptionResult(confidence={self.confidence}, text={self.text})\\\"[:1024]\",\"comment\":\"Model types like CaptionResult should implement a __repr__ method that returns a concise, truncated representation including key properties.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3535f197-5635-4c3a-af83-18d2169bcdf8\"],\"is_generic\":true,\"line_no\":166,\"bad_code\":\"ivar list: List[DenseCaption]\",\"suggestion\":\"ivar items: List[DenseCaption]\",\"comment\":\"The attribute name 'list' shadows the built-in type; rename it to avoid confusion, such as 'items'.\",\"correlation_id\":\"e14a4ba7-5d2b-4641-ae73-c0644e126f9f\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3535f197-5635-4c3a-af83-18d2169bcdf8\"],\"is_generic\":false,\"line_no\":358,\"bad_code\":\"ivar list: List[DetectedObject]\",\"suggestion\":\"ivar items: List[DetectedObject]\",\"comment\":\"Using 'list' as an attribute name shadows the built-in type; consider renaming it to a more descriptive term such as 'items'.\",\"correlation_id\":\"e14a4ba7-5d2b-4641-ae73-c0644e126f9f\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3535f197-5635-4c3a-af83-18d2169bcdf8\"],\"is_generic\":false,\"line_no\":378,\"bad_code\":\"ivar list: List[DetectedPerson]\",\"suggestion\":\"ivar items: List[DetectedPerson]\",\"comment\":\"Avoid using the name 'list' for attributes as it overrides the built-in; use an alternative like 'items'.\",\"correlation_id\":\"e14a4ba7-5d2b-4641-ae73-c0644e126f9f\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3535f197-5635-4c3a-af83-18d2169bcdf8\"],\"is_generic\":false,\"line_no\":418,\"bad_code\":\"ivar list: List[CropRegion]\",\"suggestion\":\"ivar items: List[CropRegion]\",\"comment\":\"The attribute name 'list' conflicts with the Python built-in; rename it to something like 'items'.\",\"correlation_id\":\"e14a4ba7-5d2b-4641-ae73-c0644e126f9f\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3535f197-5635-4c3a-af83-18d2169bcdf8\"],\"is_generic\":false,\"line_no\":437,\"bad_code\":\"ivar list: List[DetectedTag]\",\"suggestion\":\"ivar items: List[DetectedTag]\",\"comment\":\"Avoid using 'list' as an attribute name to prevent shadowing the built-in; a name like 'items' is preferable.\",\"correlation_id\":\"e14a4ba7-5d2b-4641-ae73-c0644e126f9f\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"}]}"}
{"testcase": "medium_apiview_multiple_same_violations", "actual": "{\"comments\":[{\"guideline_ids\":[\"python_implementation.html#python-azurecore-http-telemetry-appid\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":8,\"bad_code\":\"def __init__(\",\"suggestion\":\"def __init__(self, endpoint: str, credential: AzureKeyCredential, *, application_id: Optional[str] = None, api_version: str = ..., polling_interval: Optional[int] = ..., **kwargs: Any) -> None\",\"comment\":\"The client constructor should expose an application_id parameter to allow users to set telemetry for cross-service diagnostics.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":56,\"bad_code\":\"    content_type: str = ...\",\"suggestion\":\"    content_type: str = 'application/json'\",\"comment\":\"Provide a concrete default for content_type to match the overloads and enhance discoverability.\",\"correlation_id\":\"9f7a064a-6642-4e1c-86bf-1f8bec3e4f26\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":128,\"bad_code\":\"    content_type: str = ...\",\"suggestion\":\"    content_type: str = 'application/json'\",\"comment\":\"Ensure the async method’s content_type default aligns with its overloads by using a consistent default value.\",\"correlation_id\":\"9f7a064a-6642-4e1c-86bf-1f8bec3e4f26\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-models-enum-string\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":194,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.AgeUnit(Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.AgeUnit(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should inherit from str and use CaseInsensitiveEnumMeta to support case‐insensitive comparisons.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"152ca641-dcc1-4130-b331-a7e78e337000\"],\"is_generic\":false,\"line_no\":282,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"Identifier attributes should be marked as optional to align with the clarified API specifications.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":522,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ContactDetails(MutableMapping[str, Any]):\",\"suggestion\":\"def __repr__(self) -> str: return json.dumps(self.__dict__)[:1024]\",\"comment\":\"Model types should explicitly implement a __repr__ method that returns the type name and key properties, truncated as needed.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":568,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.DocumentContentSourceType(Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.DocumentContentSourceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should subclass str and use CaseInsensitiveEnumMeta to allow case‐insensitive comparisons.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":573,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.DocumentType(Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.DocumentType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum types should be defined with str and a CaseInsensitiveEnumMeta metaclass for consistent, case‐insensitive behavior.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":638,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.GeoJsonGeometryType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.GeoJsonGeometryType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum definitions should include the CaseInsensitiveEnumMeta metaclass to support case‐insensitive string comparisons.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":642,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.GeoJsonPropertiesSubType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.GeoJsonPropertiesSubType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum types should be defined with str and CaseInsensitiveEnumMeta to enable case‐insensitive handling.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":646,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.GeoJsonType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.GeoJsonType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums must use CaseInsensitiveEnumMeta and subclass str for consistent, case‐insensitive comparisons.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"MUST\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":720,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.JobStatus(Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.JobStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should inherit from str and use CaseInsensitiveEnumMeta to ensure they are case‐insensitive.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":782,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.PatientInfoSex(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.PatientInfoSex(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum types should be defined with a metaclass for case‐insensitive comparisons.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":812,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.RepeatabilityResultType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.RepeatabilityResultType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Define enums with str, Enum, and CaseInsensitiveEnumMeta to allow for case‐insensitive string matching.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":899,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherInferenceType(Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherInferenceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum definitions should include str and CaseInsensitiveEnumMeta to support case‐insensitive enum values.\",\"correlation_id\":\"576dbdb3-4c44-460c-bc46-e34f781077ed\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"}]}"}
{"testcase": "medium_apiview_few_violations", "actual": "{\"comments\":[{\"guideline_ids\":[\"python_design.html#python-client-constructor-api-version-argument-5\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":13,\"bad_code\":\"api_version: str = ...\",\"suggestion\":\"api_version: Union[str, ServiceVersion] = ServiceVersion.LATEST\",\"comment\":\"The client constructor accepts an api_version parameter but does not expose a ServiceVersion enum listing the supported API versions.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":56,\"bad_code\":\"content_type: str = ...\",\"suggestion\":\"content_type: str = 'application/json'\",\"comment\":\"Ensure the default value for content_type is consistent across overloads.\",\"correlation_id\":\"208d4023-2836-435e-b17a-632d30e2ef20\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":91,\"bad_code\":\"async def begin_match_trials(\",\"suggestion\":\"async def begin_match_trials(self, body: Union[TrialMatcherData, JSON, IO], *, content_type: str = 'application/json', repeatability_first_sent: Optional[datetime] = None, repeatability_request_id: Optional[str] = None, **kwargs: Any)\",\"comment\":\"Add explicit type hints and default values to the async overload to improve discoverability and clarity.\",\"correlation_id\":\"208d4023-2836-435e-b17a-632d30e2ef20\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":199,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.AgeUnit(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.AgeUnit(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":275,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalDocumentType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalDocumentType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":312,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialAcceptedSex(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialAcceptedSex(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":398,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialPhase(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialPhase(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":407,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialPurpose(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialPurpose(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":420,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialRecruitmentStatus(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialRecruitmentStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":493,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialSource(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialSource(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"304eb9f9-719c-40f5-bac5-330262ffaf79\"],\"is_generic\":false,\"line_no\":498,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialStudyType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialStudyType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enums should use CaseInsensitiveEnumMeta so they support case‐insensitive comparisons.\",\"correlation_id\":\"490548d2-968c-4ce8-8891-bef77529baa1\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":505,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrials(MutableMapping[str, Any]):\",\"suggestion\":\"def __repr__(self) -> str: return json.dumps(self.__dict__)[:1024]\",\"comment\":\"Model types should implement a __repr__ method that returns a truncated representation including the type name and key properties.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"4706e90f-7d52-434a-9823-f116c3a5886b\"],\"is_generic\":false,\"line_no\":737,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"The 'id' attribute in PatientDocument should be declared as Optional to accurately reflect its output-only nature.\",\"correlation_id\":\"b8afd4be-08da-49a0-8c5f-96baf95162c9\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":739,\"bad_code\":\"ivar type: Union[str, DocumentType]\",\"suggestion\":\"ivar document_type: Union[str, DocumentType]\",\"comment\":\"Rename attribute 'type' to avoid built-in name conflicts.\",\"correlation_id\":\"43ccb60d-5692-414e-a5c1-37bc203a1908\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"4706e90f-7d52-434a-9823-f116c3a5886b\"],\"is_generic\":true,\"line_no\":795,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar record_id: Optional[str]\",\"comment\":\"Consider renaming the 'id' attribute to 'record_id' to avoid shadowing the built-in name 'id', and make it optional to align with API specifications regarding resource identifiers.\",\"correlation_id\":\"b8afd4be-08da-49a0-8c5f-96baf95162c9\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":851,\"bad_code\":\"ivar type: Union[str, TrialMatcherInferenceType]\",\"suggestion\":\"ivar inference_type: Union[str, TrialMatcherInferenceType]\",\"comment\":\"Rename 'type' to avoid conflict with the built-in keyword.\",\"correlation_id\":\"43ccb60d-5692-414e-a5c1-37bc203a1908\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"4706e90f-7d52-434a-9823-f116c3a5886b\"],\"is_generic\":false,\"line_no\":933,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"The 'id' attribute in TrialMatcherPatientResult should be optional as recommended by the guidelines.\",\"correlation_id\":\"b8afd4be-08da-49a0-8c5f-96baf95162c9\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"}]}"}
{"testcase": "medium_apiview_many_violations", "actual": "{\"comments\":[{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":56,\"bad_code\":\"    content_type: str = ...\",\"suggestion\":\"    content_type: str = 'application/json'\",\"comment\":\"Provide an explicit default for content_type to match the overloads.\",\"correlation_id\":\"22f3016d-5327-4540-a374-7239f34a0add\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-client-options-naming\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":66,\"bad_code\":\"def create_trials(\",\"suggestion\":\"def create_trials(self, body: Union[TrialMatcherData, JSON, IO], *, unit: Optional[Union[str, AgeUnit]] = None, value: Optional[float] = None, language: Optional[str] = None, date: Optional[datetime] = None, **kwargs: Any) -> LROPoller[TrialMatcherResult]\",\"comment\":\"Optional parameters should be flattened rather than grouped in an options bag.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-response-paged-protocol\",\"python_design.html#python-client-service-verbs\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":102,\"bad_code\":\"def trials(\",\"suggestion\":\"def list_trials(self, **kwargs: Any) -> ItemPaged[TrialMatcherResult]\",\"comment\":\"List operations should use the 'list_' prefix and return an iterable implementing the ItemPaged protocol.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-client-service-verbs\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":108,\"bad_code\":\"def erase_trials(\",\"suggestion\":\"def delete_trials(self, trial: str, *, timeout: float = None, **kwargs: Any) -> None\",\"comment\":\"Delete operations should use the 'delete_' prefix and explicitly include a timeout keyword argument.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":177,\"bad_code\":\"    content_type: str = ...\",\"suggestion\":\"    content_type: str = 'application/json'\",\"comment\":\"Set a concrete default for content_type in the async signature for consistency with its overloads.\",\"correlation_id\":\"22f3016d-5327-4540-a374-7239f34a0add\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-models-enum-string\"],\"memory_ids\":[\"e2a9a6ea-731c-4d09-9daa-2cbc760a0bed\"],\"is_generic\":false,\"line_no\":318,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.AgeUnit(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.AgeUnit(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum classes should use CaseInsensitiveEnumMeta to enable case-insensitive string comparisons.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"e2a9a6ea-731c-4d09-9daa-2cbc760a0bed\"],\"is_generic\":false,\"line_no\":394,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalDocumentType(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalDocumentType(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum types should incorporate CaseInsensitiveEnumMeta to support case-insensitive string comparisons.\",\"correlation_id\":\"12d80828-2d04-4bcf-8f8c-c751d2873610\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"e2a9a6ea-731c-4d09-9daa-2cbc760a0bed\"],\"is_generic\":false,\"line_no\":431,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialAcceptedSex(str, Enum):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialAcceptedSex(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Enum types should incorporate CaseInsensitiveEnumMeta to support case-insensitive string comparisons.\",\"correlation_id\":\"12d80828-2d04-4bcf-8f8c-c751d2873610\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"152ca641-dcc1-4130-b331-a7e78e337000\"],\"is_generic\":false,\"line_no\":462,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar id: Optional[str]\",\"comment\":\"The 'id' field should be marked as optional to align with API specifications.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr-length\"],\"memory_ids\":[],\"is_generic\":true,\"line_no\":517,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialPhase(str, Enum):\",\"suggestion\":\"class ClinicalTrialPhase(str, Enum, metaclass=CaseInsensitiveEnumMeta):\",\"comment\":\"Use CaseInsensitiveEnumMeta for the enum to enable case-insensitive comparisons, and remove the fully qualified module path from the class definition for a cleaner, more conventional declaration.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":546,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.ClinicalTrialRegistryFilter(MutableMapping[str, Any]):\",\"suggestion\":\"def __repr__(self) -> str: return json.dumps(self.__dict__)[:1024]\",\"comment\":\"Model types should implement a __repr__ method that includes key properties for easier debugging and logging.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":824,\"bad_code\":\"ivar innerrror: Optional[InnerError]\",\"suggestion\":\"ivar innererror: Optional[InnerError]\",\"comment\":\"Fix the typo in the attribute name to consistently use 'innererror'.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":858,\"bad_code\":\"ivar type: Union[str, DocumentType]\",\"suggestion\":\"ivar document_type: Union[str, DocumentType]\",\"comment\":\"Avoid using the built-in name 'type' as an attribute; rename it (e.g. to 'document_type').\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-codestyle-vars-naming\"],\"memory_ids\":[],\"is_generic\":true,\"line_no\":998,\"bad_code\":\"ivar eligibilityCriteriaEvidence: Optional[str]\",\"suggestion\":\"ivar eligibility_criteria_evidence: Optional[str]\",\"comment\":\"Attribute names should use snake_case to maintain consistency with parameter naming and adhere to Python style guidelines.\",\"correlation_id\":\"030ad2da-59d2-44c9-8c6e-f475b353104c\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-codestyle-vars-naming\"],\"memory_ids\":[],\"is_generic\":true,\"line_no\":1000,\"bad_code\":\"ivar patientDataEvidence: Optional[ClinicalNoteEvidence]\",\"suggestion\":\"ivar patient_data_evidence: Optional[ClinicalNoteEvidence]\",\"comment\":\"Rename this attribute to snake_case to maintain consistency with Python naming conventions and ensure attribute names follow standard style.\",\"correlation_id\":\"030ad2da-59d2-44c9-8c6e-f475b353104c\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-codestyle-vars-naming\"],\"memory_ids\":[],\"is_generic\":true,\"line_no\":1001,\"bad_code\":\"ivar patientInfoEvidence: Optional[ClinicalCodedElement]\",\"suggestion\":\"ivar patient_info_evidence: Optional[ClinicalCodedElement]\",\"comment\":\"Attribute names should use snake_case to maintain consistency with parameter naming and adhere to Python style guidelines.\",\"correlation_id\":\"030ad2da-59d2-44c9-8c6e-f475b353104c\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3c68449b-341f-4f65-8515-5142eea2852b\"],\"is_generic\":false,\"line_no\":1027,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherModelConfiguration(MutableMapping[str, Any]):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherModelConfiguration(Mapping[str, Any]):\",\"comment\":\"Since this is an output model, inherit from Mapping to enforce immutability.\",\"correlation_id\":\"fad4d370-5146-4881-a318-805504da8fee\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3c68449b-341f-4f65-8515-5142eea2852b\"],\"is_generic\":false,\"line_no\":1051,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherPatientResult(MutableMapping[str, Any]):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherPatientResult(Mapping[str, Any]):\",\"comment\":\"Output models should use Mapping; use Mapping instead of MutableMapping here.\",\"correlation_id\":\"fad4d370-5146-4881-a318-805504da8fee\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"5b697e30-5cff-44f3-a3eb-8af7c3d1275e\"],\"is_generic\":true,\"line_no\":1052,\"bad_code\":\"ivar id: str\",\"suggestion\":\"ivar patient_id: str\",\"comment\":\"Consider renaming 'id' to 'patient_id' to avoid shadowing the built-in function and improve clarity. Additionally, if the attribute may be absent, mark it as Optional to accurately reflect its potential absence in the response.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3c68449b-341f-4f65-8515-5142eea2852b\"],\"is_generic\":false,\"line_no\":1075,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherResult(MutableMapping[str, Any]):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherResult(Mapping[str, Any]):\",\"comment\":\"Use Mapping for output-only models to reduce mutability risks.\",\"correlation_id\":\"fad4d370-5146-4881-a318-805504da8fee\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"3c68449b-341f-4f65-8515-5142eea2852b\"],\"is_generic\":false,\"line_no\":1085,\"bad_code\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherResults(MutableMapping[str, Any]):\",\"suggestion\":\"class azure.healthinsights.clinicalmatching.models.TrialMatcherResults(Mapping[str, Any]):\",\"comment\":\"Switch from MutableMapping to Mapping for models that are output-only.\",\"correlation_id\":\"fad4d370-5146-4881-a318-805504da8fee\",\"confidence_score\":1.0,\"severity\":\"SHOULD\"}]}"}
{"testcase": "small_apiview_many_violations", "actual": "{\"comments\":[{\"guideline_ids\":[\"python_design.html#python-client-connection-string\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":10,\"bad_code\":\"connection_string: Optional[str] = None,\",\"suggestion\":null,\"comment\":\"Client constructors must not accept connection strings; use a from_connection_string factory method instead.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"MUST\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":30,\"bad_code\":\"def analyze_from_url(\",\"suggestion\":\"def analyze_from_url(self, image_url: str, visual_features: List[VisualFeatures], *, gender_neutral_caption: Optional[bool] = ..., language: Optional[str] = ..., model_version: Optional[str] = ..., smart_crops_aspect_ratios: Optional[List[float]] = ..., **kwargs: Any) -> ImageAnalysisResult\",\"comment\":\"Ensure optional parameters are keyword‐only by inserting '*' after required parameters for consistency.\",\"correlation_id\":\"db7972c1-a66f-47cb-ab41-336477465a22\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":53,\"bad_code\":\"class azure.ai.vision.imageanalysis.aio.AsyncImageAnalysisClient(ImageAnalysisClient): implements AsyncContextManager\",\"suggestion\":\"class AsyncImageAnalysisClient(ImageAnalysisClient, AsyncContextManager):\",\"comment\":\"Avoid 'implements' syntax; use multiple inheritance to indicate async context management.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-codestyle-static-methods\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":90,\"bad_code\":\"self,\",\"suggestion\":null,\"comment\":\"Static methods should not include a 'self' parameter; remove it from the method signature.\",\"correlation_id\":null,\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-models-repr\"],\"memory_ids\":[],\"is_generic\":false,\"line_no\":99,\"bad_code\":\"class azure.ai.vision.imageanalysis.models.CaptionResult(MutableMapping[str, Any]):\",\"suggestion\":\"def __repr__(self) -> str: return json.dumps(self.__dict__)[:1024]\",\"comment\":\"Model types should implement __repr__ to include the type name and key properties.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":168,\"bad_code\":\"ivar list: List[DenseCaption]\",\"suggestion\":\"ivar items: List[DenseCaption]\",\"comment\":\"Avoid using built-in names like 'list' as attribute identifiers; use a more descriptive name such as 'items'.\",\"correlation_id\":\"e858a4e3-34c6-4dcf-99ea-cc18dc2a8989\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_implementation.html#python-codestyle-type-naming\"],\"memory_ids\":[],\"is_generic\":true,\"line_no\":209,\"bad_code\":\"class azure.ai.vision.imageanalysis.models.detectedPerson(MutableMapping[str, Any]):\",\"suggestion\":\"class DetectedPerson(MutableMapping[str, Any]):\",\"comment\":\"Rename the class to use PascalCase, specifically 'DetectedPerson', to comply with Python naming conventions and improve code readability.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":411,\"bad_code\":\"def get_result(self) -> ObjectsResult\",\"suggestion\":null,\"comment\":\"Consider removing the redundant getter method in favor of direct mapping access for a more Pythonic design.\",\"correlation_id\":null,\"confidence_score\":0.4,\"severity\":\"SUGGESTION\"},{\"guideline_ids\":[],\"memory_ids\":[\"3c68449b-341f-4f65-8515-5142eea2852b\"],\"is_generic\":false,\"line_no\":491,\"bad_code\":\"class azure.ai.vision.imageanalysis.models.TagsResult(MutableMapping[str, Any]):\",\"suggestion\":\"class azure.ai.vision.imageanalysis.models.TagsResult(Mapping[str, Any]):\",\"comment\":\"Result models meant for output should use the less-permissive Mapping instead of MutableMapping to prevent unintended mutations.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":492,\"bad_code\":\"ivar list: List[DetectedTag]\",\"suggestion\":\"ivar detected_tags: List[DetectedTag]\",\"comment\":\"Rename the attribute to avoid shadowing the built-in 'list' and make its purpose clearer.\",\"correlation_id\":\"e858a4e3-34c6-4dcf-99ea-cc18dc2a8989\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":498,\"bad_code\":\"list: List[DetectedTag]\",\"suggestion\":\"detected_tags: List[DetectedTag]\",\"comment\":\"Rename the constructor parameter to avoid using the built-in name 'list' for improved clarity.\",\"correlation_id\":\"e858a4e3-34c6-4dcf-99ea-cc18dc2a8989\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[],\"is_generic\":true,\"line_no\":504,\"bad_code\":\"def __init__(self, *args: Any, **kwargs: Any) -> None\",\"suggestion\":\"def __init__(self, mapping: Optional[Mapping[str, Any]] = None, *, detected_tags: Optional[List[DetectedTag]] = None) -> None:\",\"comment\":\"Use an explicit constructor signature instead of *args/**kwargs to improve discoverability of valid parameters.\",\"correlation_id\":\"db7972c1-a66f-47cb-ab41-336477465a22\",\"confidence_score\":0.8,\"severity\":\"SHOULD\"},{\"guideline_ids\":[],\"memory_ids\":[\"215ecd4b-b4b1-4719-ad1a-99a47afdf6ac\"],\"is_generic\":false,\"line_no\":507,\"bad_code\":\"**kwargs: Any\",\"suggestion\":\"def __init__(self, *, list: Optional[List[DetectedTag]] = None, mapping: Optional[Mapping[str, Any]] = None) -> None:\",\"comment\":\"GA model constructors should avoid untyped *args and **kwargs; use explicit parameters to ensure proper type safety.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"},{\"guideline_ids\":[\"python_design.html#python-models-enum-name-uppercase\"],\"memory_ids\":[],\"is_generic\":true,\"line_no\":517,\"bad_code\":\"tags = 'tags'\",\"suggestion\":\"TAGS = 'tags'\",\"comment\":\"Enum member names should be consistently uppercase to follow Python conventions.\",\"correlation_id\":null,\"confidence_score\":1.0,\"severity\":\"SHOULD\"}]}"}
