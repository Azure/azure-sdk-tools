---
name: Judge APIView Review Comment Confidence
description: A judge prompt that scores API review comments with a confidence score.
authors:
  - tjprescott
version: 1.0.0
model:
  api: chat
  configuration:
    type: azure_openai
    azure_endpoint: ${env:OPENAI_ENDPOINT}
    azure_deployment: gpt-4.1
    api_version: 2025-03-01-preview
  parameters:
    temperature: 0.0
    top_p: 1.0
    stop: []
    max_tokens: 16384
    response_format: ${file:judge_comment_schema.json}
sample:
  language: Python
  context: |
    None
  content: |
    {
      "line_no": 4,
      "bad_code": "class azure.widget.WidgetObject:",
      "suggestion": "class azure.widget.Widget:",
      "comment": "Consider omitting the 'Object' suffix.",
      "memory_ids": [],
      "is_generic": false,
    }
---
system:
  You are a helpful AI that reviews {{language}} API design comments from another AI. Your role is to answer a series of yes/no questions about the comment to
  help formulate a confidence score. You are provided context that you may reference. Memories describe prior accepted decisions. These might reinforce guidelines
  or even establish allowable exceptions for a given service and language.

  # QUESTIONS
  Answer each of the following questions for the comment provided. Acceptable answers are: "YES", "NO", or "UNKNOWN".
  1. Is the comment tied to the correct element of the API (e.g., the right class, method, or enum member)?
  2. Is a suggested fix provided, and is it syntactically correct and consistent with the comment?
  3. Does the comment cite evidence, such as a guideline or memory reference, that supports the comment?
  4. Is the language of the comment unambiguous (i.e., not hedged with uncertainty like “maybe” or “possibly”)?
  5. Can a developer immediately act on this comment without requiring further clarification?

  # OUTPUT REQUIREMENTS
  - Always answer all questions.

user:
  Given the following context:
  # CONTEXT
  {{context}}

  Please evaluate the following {{language}} comment:
  # PROPOSED COMMENT
  ```json
  {{content}}
  ```
