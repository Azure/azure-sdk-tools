parameters:
  - name: Paths
    type: object
    default: []
  - name: Repositories
    type: object
    default:
      - Name: $(Build.Repository.Name)
        Commitish: $(Build.SourceVersion)
        WorkingDirectory: $(System.DefaultWorkingDirectory)
  - name: SkipCheckoutNone
    type: boolean
    default: false

steps:
  - ${{ if not(parameters.SkipCheckoutNone) }}:
      - checkout: none

  - task: PowerShell@2
    ${{ if eq(length(parameters.Repositories), 1) }}:
      displayName: 'Sparse checkout ${{ parameters.Repositories[0].Name }}'
    ${{ else }}:
      displayName: 'Sparse checkout repositories'
    inputs:
      # Use inline instead of file because of the chicken/egg problem with loading a script
      # when nothing has been checked out yet. Download script to save size on the generated
      # template to stay below the devops max.
      targetType: inline
      script: |
        $req = Invoke-WebRequest "https://raw.githubusercontent.com/$(Build.Repository.Name)/main/eng/common/scripts/sparse-checkout.ps1"
        $req.RawContent | Out-File $(Agent.TempDirectory)/sparse-checkout.ps1
        # Paths may be sourced as a yaml object literal OR a dynamically generated variable json string.
        # If the latter, convertToJson will wrap the 'string' in quotes, so remove them.
        $paths = '${{ convertToJson(parameters.Paths) }}'.Trim('"') | ConvertFrom-Json
        # Replace windows backslash paths, as Azure Pipelines default directories are sometimes formatted like 'D:\a\1\s'
        $repositories = '${{ convertToJson(parameters.Repositories) }}' -replace '\\', '/' | ConvertFrom-Json -AsHashtable
        foreach ($repo in $Repositories) {
          $(Agent.TempDirectory)/sparse-checkout.ps1 -Paths $paths -Repository $repo
        }
      pwsh: true
      workingDirectory: $(System.DefaultWorkingDirectory)
