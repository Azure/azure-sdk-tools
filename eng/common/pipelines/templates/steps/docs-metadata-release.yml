# intended to be used as part of a release process
parameters:
  ArtifactLocation: 'not-specified'
  PackageRepository: 'not-specified'
  ReleaseSha: 'not-specified'
  RepoId: 'not-specified'
  WorkingDirectory: ''
  ScriptDirectory: eng/common/scripts
  TargetDocRepo: ''
  TargetDocBranch: 'smoke-test'
  PRBranchName: 'not-specified'
  ArtifactName: ''
  ServiceDirectory: ''

steps:
- pwsh: |
    git clone ${{ TargetDocRepository }} ${{ parameters.WorkingDirectory }}/repo
    
    $sourceBranch = "${{ parameters.TargetDocBranch }}"
  
    try {
      Push-Location {{ parameters.WorkingDirectory }}/repo
    
      # 0 if exists, 1 if not
      git show-ref --verify --quiet refs/heads/$sourceBranch
      $sourceBranchExists = $LastExitCode

      if (-not $sourceBranchExists) {
        # there is an existing smoke-test branch we can base off of
        Write-Host "git checkout $sourceBranch"
        git checkout $sourceBranch
      }

      Write-Host "git checkout -b {{ parameters.PRBranchName }}"
      git checkout -b ${{ parameters.PRBranchName }}
    } finally {
      Pop-Location
    }
  displayName: Clone Documentation Repository
  ignoreLASTEXITCODE: false

- task: PowerShell@2
  displayName: 'Apply Documentation Updates From Artifact'
  inputs:
    targetType: filePath
    filePath: ${{ parameters.ScriptDirectory }}/release-docs-metadata.ps1
    arguments: -ArtifactLocation ${{parameters.ArtifactLocation}} -Repository ${{parameters.PackageRepository}} -ReleaseSHA ${{parameters.ReleaseSha}} -RepoId ${{parameters.RepoId}} -WorkDirectory '${{parameters.WorkingDirectory}}' -DocRepoLocation "${{parameters.WorkingDirectory}}/repo" -Language "${{parameters.Language}}" -DocRepoContentLocation "docs-ref-services/"
    pwsh: true
  timeoutInMinutes: 5
  env:
    GH_TOKEN: $(azuresdk-github-pat)

- template: /eng/common/pipelines/templates/steps/create-pull-request.yml
  parameters:
    RepoName: ${{ parameters.TargetDocRepo }}
    PRBranchName: increment-package-version-${{ parameters.ArtifactName }}-$(Build.BuildId)
    CommitMsg: "Increment package version after release of ${{ parameters.ArtifactName }}"
    PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases."