resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20220329.1

parameters:
  - name: ToolDirectory
    type: string
    default: ''
  - name: DotNetCoreVersion
    type: string
    default: ''
  - name: SkipDotNetInstall
    type: boolean
    default: false
  - name: NoWarn
    type: boolean
    default: false
  - name: TestPostSteps
    type: object
    default: []
  - name: DockerDeployments
    type: object
    default: []
  - name: DockerTagPrefix
    type: string
    default: '1.0.0-dev'
  - name: ManifestDeployment
    type: object
    default: []

variables:
  - template: ../variables/globals.yml
  - name: Warn
    ${{ if parameters.NoWarn }}:
      value: ''
    ${{ if not(parameters.NoWarn) }}:
      value: -warnaserror

stages:
  - stage: BuildTestAndPackage

    pool:
      name: azsdk-pool-mms-ubuntu-2204-general
      vmImage: MMSUbuntu22.04

    jobs:
      - job: Run

        steps:
          - task: UseDotNet@2
            condition: eq(${{ parameters.SkipDotNetInstall }}, false)
            displayName: 'Use .NET Core sdk ${{ coalesce( parameters.DotNetCoreVersion, variables.DotNetCoreVersion) }}'
            inputs:
              version: '${{ coalesce( parameters.DotNetCoreVersion, variables.DotNetCoreVersion) }}'

          - script: 'dotnet run'
            displayName: 'run'
            workingDirectory: $(Build.SourcesDirectory)/${{parameters.ToolDirectory}}/Azure.Sdk.Tools.PipelineOwnersExtractor
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0

          - publish: $(Build.ArtifactStagingDirectory)
            displayName: Publish package to run artifacts
            artifact: packages
            condition: succeededOrFailed()