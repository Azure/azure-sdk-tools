# NOTE: Please refer to https://aka.ms/azsdk/engsys/ci-yaml before editing this file.
trigger:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - src/ts/ts-genapi

pr:
  branches:
    include:
      - main
      - feature/*
      - release/*
      - hotfix/*
  paths:
    include:
      - src/ts/ts-genapi

variables:
  NodeVersion: '12.x'
  TypeScriptGeneratorDirectory: 'src/ts/ts-genapi'

stages:
  - stage: 'Build'
    jobs:
      - job: 'Build'

        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          vmImage: MMSUbuntu20.04

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '$(NodeVersion)'
            displayName: 'Use NodeJS $(NodeVersion)'

          - script: |
              npm install -g npm@6.14.6
            displayName: "Install npm 6.14.6"
          
          - script: |
              npm install
            workingDirectory: $(TypeScriptGeneratorDirectory)
            displayName: "Install npm packages typescript generator"

          - script: |
              npm run-script build
            workingDirectory: $(TypeScriptGeneratorDirectory)
            displayName: "Build typescript generator"

          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: ${{ parameters.ArtifactName }}
              
      - ${{ if not(eq(length(parameters.TestSteps), 0)) }}:
        - job: 'Test'

          dependsOn:
            - 'Build'

          pool:
            name: azsdk-pool-mms-ubuntu-2004-general
            vmImage: MMSUbuntu20.04

          steps:
            - template: /eng/pipelines/templates/steps/use-python-version.yml
              parameters:
                versionSpec: '${{ parameters.PythonVersion }}'

            - ${{ parameters.TestSteps }}

  - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
    - stage: 'Release'
      dependsOn: Build
      condition: Succeeded()
      jobs:
      - job: PublishPackage
        displayName: 'Publish ${{ parameters.PackageName }} package to devops feed'
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          vmImage: MMSUbuntu20.04
        steps:
        - checkout: none
        - download: current
        - task: UsePythonVersion@0

        - script: |
            set -e
            pip install twine
          displayName: Install Twine

        - task: TwineAuthenticate@0
          displayName: 'Twine Authenticate to feed'
          inputs:
            artifactFeeds: ${{ parameters.FeedName }}

        - task: PipAuthenticate@1
          displayName: 'Pip Authenticate to feed'
          inputs:
            artifactFeeds: ${{ parameters.FeedName }}
            onlyAddExtraIndex: false

        - pwsh: |
            twine upload --repository ${{ parameters.FeedName }} --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/${{ parameters.ArtifactName }}/*.whl
            echo "Uploaded whl to devops feed ${{ parameters.FeedName }}"
          displayName: 'Publish ${{ parameters.PackageName }} to DevOps feed'
