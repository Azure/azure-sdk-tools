@page
@model APIViewWeb.Pages.Assemblies.IndexPageModel
@using APIViewWeb
@{
    ViewData["Title"] = "Reviews";
}

<div class="row">
    <div class="col my-2">
        <div class="float-left mb-2">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#uploadModel">Create review</button>
        </div>

        <div class="float-left pl-2">
            <input type="text" class="form-control" id="searchBox" placeholder="Filter by review name" autofocus>
        </div>

        <div class="btn-group float-left  pl-5">
            <a class="btn btn-secondary" active-if='@Model.Language == "All"' asp-all-route-data=@Model.GetRoutingData(language: "All")>All</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "C"' asp-all-route-data=@Model.GetRoutingData(language: "C")>C</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "C#"' asp-all-route-data=@Model.GetRoutingData(language: "C#")>C#</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "C++"' asp-all-route-data=@Model.GetRoutingData(language: "C++")>C++</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "Go"' asp-all-route-data=@Model.GetRoutingData(language: "Go")>Go</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "Java"' asp-all-route-data=@Model.GetRoutingData(language: "Java")>Java</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "JavaScript"' asp-all-route-data=@Model.GetRoutingData(language: "JavaScript")>JS/TS</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "Python"' asp-all-route-data=@Model.GetRoutingData(language: "Python")>Python</a>
            <a class="btn btn-secondary" active-if='@Model.Language == "Protocol"' asp-all-route-data=@Model.GetRoutingData(language: "Protocol")>Protocol</a>
        </div>

        <div class="btn-group float-right">
            <a class="btn btn-secondary" active-if="!@Model.Closed" asp-all-route-data=@Model.GetRoutingData(closed: false)>Open</a>
            <a class="btn btn-secondary" active-if="@Model.Closed" asp-all-route-data=@Model.GetRoutingData(closed: true)>Closed</a>
        </div>

        <div class="btn-group float-right pr-5">
            <a class="btn btn-secondary" active-if="!@Model.Automatic" asp-all-route-data=@Model.GetRoutingData(automatic: false)>Manual</a>
            <a class="btn btn-secondary" active-if="@Model.Automatic" asp-all-route-data=@Model.GetRoutingData(automatic: true)>Automatic</a>
        </div>

    </div>
</div>


<div class="modal fade" id="uploadModel" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form asp-page-handler="Upload" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <h5 class="modal-title">Create review</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="custom-file">
                            <input asp-for="Upload.Files" type="file" class="custom-file-input">
                            <label asp-for="Upload.Files" class="custom-file-label">Select file to include in API review</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input" asp-for="Upload.RunAnalysis" checked>
                            <label class="form-check-label">
                                Run static analysis
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <input asp-for="Label" class="form-control" type="text" placeholder="Enter an optional review label">
                    </div>
                    <div class="form-group">
                        <label>What to upload:</label>

                        <ul class="nav nav-pills mb-3">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#csharp-help">C#</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#java-help">Java</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#c-help">C</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#python-help">Python</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#js-help">JS/TS</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#cpp-help">C++</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#go-help">Go</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="profile-tab" data-toggle="tab" href="#protocol-help">Protocol</a>
                            </li>
                        </ul>

                        <!-- Tab panes -->
                        <div class="tab-content mb-4">
                            <div class="tab-pane active" id="csharp-help">
                                <li>
                                    Run
                                    <code>dotnet pack</code>
                                </li>
                                Upload the resulting .nupkg file.
                            </div>
                            <div class="tab-pane" id="java-help">Run a <code>mvn package</code> build on your project, which will generate a number of build artifacts in the <code>/target</code> directory. In there, find the file ending <code>sources.jar</code>, and select it.</div>
                            <div class="tab-pane" id="c-help">
                                <ol>
                                    <li>
                                        Install clang 10 or later.
                                    </li>
                                    <li>
                                        Run
                                        <code>clang [inputs like az_*.h] -Xclang -ast-dump=json -I ..\..\..\core\core\inc -I "c:\Program Files (x86)\Microsoft Visual Studio\2019\Preview\VC\Tools\MSVC\14.26.28801\include\" > az_core.ast</code>
                                    </li>
                                    <li>
                                        Archive the file <code>Compress-Archive az_core.ast -DestinationPath az_core.zip</code>
                                    </li>
                                    <li>
                                        Upload the resulting archive.
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="python-help">
                                <ol>
                                    <li>
                                        Generate wheel for the package.
                                        <code>python setup.py bdist_wheel -d [dest_folder]</code>
                                    </li>
                                    <li>
                                        Upload generated whl file
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="js-help">
                                <ol>
                                    <li>
                                        Use <code>api-extractor</code> to generate a <a href="https://api-extractor.com/pages/setup/generating_docs/">docModel file</a>
                                    </li>
                                    <li>
                                        Upload generated api.json file
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="cpp-help">
                                <ol>
                                    <li>
                                        Install clang 10 or later. Your environment may require additional include directories.
                                    </li>
                                    <li>
                                        Run
                                        <code>clang++ [input like .\sdk\storage\azure-storage-files-datalake\inc\azure\storage\files\datalake\datalake.hpp] -I .\sdk\storage\azure-storage-files-datalake\inc -I .\sdk\core\azure-core\inc -Xclang  -ast-dump -I .\sdk\storage\azure-storage-common\inc  -I .\sdk\storage\azure-storage-blobs\inc > Azure_Storage_Files_Datalake.ast</code>
                                    </li>
                                    <li>
                                        Archive the file <code>Compress-Archive Azure_Storage_Files_Datalake.ast -DestinationPath Azure_Storage_Files_Datalake.zip</code>
                                    </li>
                                    <li>
                                        Rename the file <code>Rename-Item Azure_Storage_Files_Datalake.zip -NewName  Azure_Storage_Files_Datalake.cppast</code>
                                    </li>
                                    <li>
                                        Upload the resulting archive.
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="go-help">
                                <ol>
                                    <li>
                                        Archive source module directory <code>Compress-Archive ./sdk/azcore -DestinationPath azcore.zip</code>
                                    </li>
                                    <li>
                                        Rename the file <code>Rename-Item azcore.zip -NewName  azcore.gosource</code>
                                    </li>
                                    <li>
                                        Upload the resulting archive.
                                    </li>
                                </ol>
                            </div>
                            <div class="tab-pane" id="protocol-help">
                                <ol>
                                    <li>
                                        Generate json file using Protocol parser
                                    </li>
                                    <li>
                                        Upload the resulting json file.
                                    </li>
                                </ol>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </form>
        </div>
    </div>
</div>

<table class="table table-hover table-striped">
    <thead class="thead-light">
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Uploader</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var assembly in Model.Assemblies)
        {
            <tr>
                <td>
                    <a class="review-name" asp-page="./Review" asp-route-id="@assembly.ReviewId">@assembly.DisplayName</a>
                    @if (assembly.Revisions.LastOrDefault()?.IsApproved == true)
                    {
                        <label class="text-success">✔️</label>
                    }
                </td>
                <td>
                    <a username="@assembly.Author">@assembly.Author</a>
                </td>
                <td>
                    <span date="@assembly.LastUpdated.ToLocalTime()"></span>
                </td>
                @if (assembly.Author == User.GetGitHubLogin())
                {
                    <td>
                        <a asp-page="./Delete" asp-route-id="@assembly.ReviewId">Delete</a>
                    </td>
                }
                else
                {
                    <td></td>
                }
            </tr>
        }
    </tbody>
</table>

