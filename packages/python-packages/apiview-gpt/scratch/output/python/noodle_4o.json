{
    "status": "Error",
    "violations": [
        {
            "rule_ids": [
                "python_design.html#python-client-async-keywords"
            ],
            "line_no": 20,
            "bad_code": "async def __init__(self, endpoint, credential, options: dict)",
            "suggestion": "def __init__(self, endpoint, credential, options: dict):",
            "comment": "The constructor should not be defined as an async method. Constructors in Python are not meant to be async."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-options-naming"
            ],
            "line_no": 13,
            "bad_code": "async def get_noodle_async(self, options: dict) -> NoodleResponse",
            "suggestion": "async def get_noodle_async(self, *, some_option: Type) -> NoodleResponse:",
            "comment": "The method should accept operation-specific arguments as keyword-only arguments rather than as a single options dictionary."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-options-naming"
            ],
            "line_no": 16,
            "bad_code": "async def get_noodles_async(self, options: dict) -> List[NoodleResponse]",
            "suggestion": "async def get_noodles_async(self, *, some_option: Type) -> List[NoodleResponse]:",
            "comment": "The method should accept operation-specific arguments as keyword-only arguments rather than as a single options dictionary."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-options-naming"
            ],
            "line_no": 9,
            "bad_code": "def create_noodle(self, body: NoodleCreateRequest, **kwargs) -> NoodleResponse",
            "suggestion": "def create_noodle(self, body: NoodleCreateRequest, *, some_option: Type) -> NoodleResponse:",
            "comment": "The method should accept operation-specific arguments as keyword-only arguments rather than as a **kwargs."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-options-naming"
            ],
            "line_no": 12,
            "bad_code": "def get_noodle(self, options: dict) -> NoodleResponse",
            "suggestion": "def get_noodle(self, *, some_option: Type) -> NoodleResponse:",
            "comment": "The method should accept operation-specific arguments as keyword-only arguments rather than as a single options dictionary."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-options-naming"
            ],
            "line_no": 15,
            "bad_code": "def get_noodles(self, options: dict) -> List[NoodleResponse]",
            "suggestion": "def get_noodles(self, *, some_option: Type) -> List[NoodleResponse]:",
            "comment": "The method should accept operation-specific arguments as keyword-only arguments rather than as a single options dictionary."
        }
    ]
}