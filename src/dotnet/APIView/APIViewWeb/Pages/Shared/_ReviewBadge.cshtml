@using APIViewWeb;
@using System
@using System.Text.RegularExpressions;
@model ReviewModel;
@{
    var packageName = Model.Revisions.LastOrDefault()?.Files.LastOrDefault()?.PackageName;
    var approver = Model.ApprovedForFirstReleaseBy ?? Model.Revisions.LastOrDefault(r => r.IsApproved)?.Approvers?.FirstOrDefault();
    var nameApprovalTip = approver != null? "Package has been approved for first release by " + approver : "Package has been approved for first release";
}
@if (Model.Language != null)
{
    string iconClassName = "icon-" + Model.GetLanguageCssSafeName();
    @if (!string.IsNullOrEmpty(Model.LanguageVariant) && Model.LanguageVariant.ToLower() != "default")
    {
        iconClassName += "-" + @Model.LanguageVariant.ToLower();
    }
    <span role="img" class="mr-2 mt-1 p-1 border rounded icon-language @iconClassName" aria-label="@Model.Language @Model.LanguageVariant"></span>
}

<span class="h6 mr-2 mt-auto">
    @(packageName ?? "")
</span>
<span class="mr-auto mt-2">
    @if (packageName != null)
    {
        @if (!Model.IsApprovedForFirstRelease)
        {
            <form asp-resource="@Model" class="form-inline" asp-controller="Review" asp-action="ApprovePackageName" asp-route-id="@Model.ReviewId" method="post" asp-requirement="@ApproverRequirement.Instance">
                <button type="submit" class="btn btn-sm shadow-sm btn-success" title="Package name must be approved before first preview release of a new package.">
                    <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve package for first release
                </button>
            </form>
        }
        else
        {

            <i class="text-success" title="@nameApprovalTip">âœ”</i>
        }
    }
</span>


