@using Azure.Sdk.Tools.TestProxy.Models;
@model ActiveMetadataModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Test-Proxy - Active Extensions</title>

    @await Html.PartialAsync("css.cshtml")
</head>
<body>
    @if (!string.IsNullOrWhiteSpace(Model.RecordingId))
    {
        <h1>
            Active Extensions for @Model.RecordingId
        </h1>
    }
    else
    {
        <h1>
            Active Extensions for All Sessions
        </h1>
    }


    @if (!string.IsNullOrWhiteSpace(Model.RecordingId))
    {
        <p>
            The below extensions are configured for recording <b>@Model.RecordingId</b>.
        </p>
    }
    else
    {
        <p>
            The below extensions are currently configured for all sessions.
        </p>
    }

    <p>
        To observe ALL extensions (rather than just what is currently active), visit <a href="/Info/Available">/Info/Available</a>. For clarity, note that argument values below are surrounded in quotes. The actual value itself being utilized by
        the test-proxy does not contain these quotes.
    </p>
    @if (Model.Sanitizers.Count() >= 0)
    {
        <h1>Active Sanitizers</h1>
    }
    @foreach (var extension in Model.Sanitizers)
    {
        <table style="width:100%">
            <tr>
                <td>
                    <h2>@extension.Name</h2>
                </td>
            </tr>
            <tr>
                <td>
                    <h3>Description</h3>
                    <p>
                        @extension.Description
                    </p>
                </td>
            </tr>
            <tr>
                <td>
                    <h3>Instance Details</h3>
                    @if (!String.IsNullOrEmpty(extension.ConstructorDetails.Description) || extension.ConstructorDetails.Arguments.Count() > 0)
                    {
                        <p>
                            This sanitizer was created with the following settings:
                        </p>
                        <ul>
                            @foreach (var arg in extension.ConstructorDetails.Arguments)
                            {
                                <li><span><code>@arg.Item1</code></span>: @Html.Raw(@arg.Item2)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="unused">
                            This sanitizer does not have any customizable settings.
                        </p>
                    }
                </td>
            </tr>
        </table>
    }

    @if (Model.Matchers.Count() >= 0)
    {
        <h1>Active Matchers</h1>
    }
    @foreach (var extension in Model.Matchers)
    {
        <table style="width:100%">
            <tr>
                <td>
                    <h2>@extension.Name</h2>
                </td>
            </tr>
            <tr>
                <td>
                    <h3>Description</h3>
                    <p>
                        @extension.Description
                    </p>
                </td>
            </tr>
            <tr>
                <td>
                    <h3>Instance Details</h3>
                    @if (!String.IsNullOrEmpty(extension.ConstructorDetails.Description) || extension.ConstructorDetails.Arguments.Count() > 0)
                    {
                        <p>
                            This matcher was created with the following settings:
                        </p>
                        <ul>
                            @foreach (var arg in extension.ConstructorDetails.Arguments)
                            {
                                <li><span><code>@arg.Item1</code></span>: @Html.Raw(@arg.Item2)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="unused">
                            This matcher does not have any customizable settings.
                        </p>
                    }
                </td>
            </tr>
        </table>
    }

    @if (Model.Transforms.Count() >= 0)
    {
        <h1>Active Transforms</h1>
    }
    @foreach (var extension in Model.Transforms)
    {
        <table style="width:100%">
            <tr>
                <td>
                    <h2>@extension.Name</h2>
                </td>
            </tr>
            <tr>
                <td>
                    <h3>Description</h3>
                    <p>
                        @extension.Description
                    </p>
                </td>
            </tr>
            <tr>
                <td>
                    <h3>Instance Details</h3>
                    @if (!String.IsNullOrEmpty(extension.ConstructorDetails.Description) || extension.ConstructorDetails.Arguments.Count() > 0)
                    {
                        <p>
                            This transform was created with the following settings:
                        </p>
                        <ul>
                            @foreach (var arg in extension.ConstructorDetails.Arguments)
                            {
                                <li><span><code>@arg.Item1</code></span>: @Html.Raw(@arg.Item2)</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="unused">
                            This transform does not have any customizable settings.
                        </p>
                    }
                </td>
            </tr>
        </table>
    }
</body>
</html>
