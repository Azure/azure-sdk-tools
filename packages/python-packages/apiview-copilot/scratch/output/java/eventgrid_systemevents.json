{
    "comments": [
        {
            "rule_ids": [
                "java_introduction.html#java-maven-scm"
            ],
            "line_no": 1,
            "bad_code": "maven {",
            "suggestion": "  <scm><url>scm:git:https://github.com/Azure/azure-sdk-for-java</url><connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection><tag>HEAD</tag></scm>",
            "comment": "The Maven configuration is missing the SCM section required to specify source code management details.",
            "source": "context"
        },
        {
            "rule_ids": [],
            "line_no": 1,
            "bad_code": "",
            "suggestion": null,
            "comment": "### API Summary\n\n**Purpose**  \nThis API provides a comprehensive set of immutable, strongly‐typed model classes designed to represent the payloads of Microsoft Azure Event Grid system events. It enables event consumers to deserialize JSON data into well‐structured Java objects that capture detailed event information across a wide range of Azure services such as communications, container registries, machine learning services, IoT Hub, healthcare systems, and many more. By implementing a uniform JSON serialization interface, these models ensure that the event information is both reliable and precise.\n\n**API Version**  \nThe package is part of the Microsoft Azure SDK for Event Grid System Events. Although no explicit version object is shown in the provided details, the API adheres to Azure SDK standards and is aligned with the overall versioning practices of Microsoft Azure services.\n\n**Client Classes**  \nNo dedicated client classes (such as a `*Client`) are part of this API. Instead, the functionality is centered around a broad set of event data and supporting model classes that are used to structure and handle system event content received from Azure Event Grid.\n\n**Functional Overview**  \nThe API’s functionality centers on providing a robust type system for Azure Event Grid system events. Each model class implements a JSON serialization interface—commonly featuring static methods like `fromJson` and instance methods such as `toJson`—to seamlessly convert between JSON representations and Java objects. The models cover events for a diverse set of Azure resources and operations, including events related to calls, chats, SMS, API management actions, container registry activities, device connectivity and telemetry, healthcare imaging and resource changes, machine learning model operations, and many additional scenarios. This design allows architects to integrate event-driven processing pipelines with the confidence that each event’s critical metadata, timestamps, identifiers, and state details are accurately captured in a strongly-typed manner.",
            "source": "summary"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-dependencies-versions"
            ],
            "line_no": 8,
            "bad_code": "com.azure:azure-core 1.55.4",
            "suggestion": "com.azure:azure-core",
            "comment": "Dependency versions must not be specified in the client library POM file. Version numbers should be managed centrally via tooling.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 20,
            "bad_code": "public final class SystemEventNames {",
            "suggestion": null,
            "comment": "Consider grouping the long list of event constants into nested enums or inner classes to improve maintainability and discoverability.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 185,
            "bad_code": "public static final String RESOURCE_NOTIFICATIONS_HEALTH_RESOURCES_AVAILABILITY_STATUS_CHANGED = \"Microsoft.ResourceNotifications.HealthResources.AvailabilityStatusChanged\"",
            "suggestion": "public static final String RESOURCE_NOTIFICATIONS_HEALTH_RESOURCES_AVAILABILITY_STATUS_CHANGED = \"Microsoft.ResourceNotifications.HealthResources.AvailabilityStatusChanged\";",
            "comment": "Fix the broken string literal by ensuring the declaration and its terminating semicolon are on the same line.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 227,
            "bad_code": "// This class does not have any public constructors, and is not able to be instantiated using 'new'",
            "suggestion": "private SystemEventNames() {}",
            "comment": "Add a private constructor to prevent instantiation as intended.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 231,
            "bad_code": "package com.azure.messaging.eventgrid.systemevents.models {",
            "suggestion": "package com.azure.messaging.eventgrid.systemevents.models;",
            "comment": "Remove the curly brace from the package declaration to adhere to standard Java syntax. Additionally, consider reorganizing the event data classes into sub-packages based on event type (such as call, chat, or email) to improve discoverability, modularity, and maintainability.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 244,
            "bad_code": "@Deprecated @Generated public AcsCallEndedByKind()",
            "suggestion": "@Deprecated @Generated private AcsCallEndedByKind()",
            "comment": "Make the deprecated enum constructor non‐public to prevent unintended instantiation.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 266,
            "bad_code": "@Generated @Override public Boolean isRoomsCall()",
            "suggestion": "@Generated @Override public boolean isRoomsCall()",
            "comment": "Use a primitive boolean for the getter to avoid unnecessary nullability.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 292,
            "bad_code": "public class AcsCallParticipantEventData extends AcsCallingEventProperties {",
            "suggestion": "public abstract class AcsCallParticipantEventData extends AcsCallingEventProperties {",
            "comment": "Mark this base event class as abstract to prevent direct instantiation.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 378,
            "bad_code": "public class AcsChatEventBaseProperties implements JsonSerializable<AcsChatEventBaseProperties> {",
            "suggestion": "public abstract class AcsChatEventBaseProperties implements JsonSerializable<AcsChatEventBaseProperties> {",
            "comment": "Declare the base event class as abstract to encourage factory-based creation.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 731,
            "bad_code": "@Generated public static final AcsMessageDeliveryStatus WARNING = fromString(\"warning\");",
            "suggestion": null,
            "comment": "If the set of values is fixed, consider using a standard Java enum with consistent casing for string values rather than an expandable string enum.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 733,
            "bad_code": "@Deprecated @Generated public AcsMessageDeliveryStatus()",
            "suggestion": "private AcsMessageDeliveryStatus()",
            "comment": "Change the public constructor to private to prevent direct instantiation of enum-like classes.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 745,
            "bad_code": "@Generated @Override public JsonWriter toJson(JsonWriter jsonWriter) throws IOException",
            "suggestion": null,
            "comment": "Centralize JSON serialization logic in a common base class or utility to reduce repetitive boilerplate code.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1231,
            "bad_code": "public List<AcsRouterChannelConfiguration> getChannelConfigurations()",
            "suggestion": null,
            "comment": "Consider organizing event classes into subpackages by domain to improve discoverability and reduce complexity. (general comment)",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1232,
            "bad_code": "public static AcsRouterWorkerUpdatedEventData fromJson(JsonReader jsonReader) throws IOException",
            "suggestion": null,
            "comment": "Consider using a standard JSON library (e.g. Jackson) for serialization to simplify integration with other Java components. (general comment)",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1237,
            "bad_code": "public Integer getTotalCapacity()",
            "suggestion": "public int getTotalCapacity()",
            "comment": "Use a primitive int for numeric getters if null is not expected, ensuring consistency with similar methods. (general comment)",
            "source": "generic"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-interface"
            ],
            "line_no": 1242,
            "bad_code": "public final class AcsSmsDeliveryAttemptProperties implements JsonSerializable<AcsSmsDeliveryAttemptProperties> {",
            "suggestion": "public interface AcsSmsDeliveryAttemptProperties extends JsonSerializable<AcsSmsDeliveryAttemptProperties> {",
            "comment": "Model types that are returned by the service but are not meant to be constructed by users (as indicated by the lack of public constructors) should be hidden behind an interface in the public API with their implementation moved to an internal package.",
            "source": "context"
        },
        {
            "rule_ids": [],
            "line_no": 1262,
            "bad_code": "public class AcsSmsEventBaseProperties implements JsonSerializable<AcsSmsEventBaseProperties>",
            "suggestion": "public abstract class AcsSmsEventBaseProperties implements JsonSerializable<AcsSmsEventBaseProperties>",
            "comment": "Mark the base event class as abstract to communicate that it is not directly instantiable.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-constructors"
            ],
            "line_no": 1289,
            "bad_code": "@Deprecated @Generated public AcsUserEngagement()",
            "suggestion": "protected AcsUserEngagement()",
            "comment": "The public constructor should not be exposed for this model type to prevent unintended instantiation. Use a non-public constructor, such as protected, and rely on the static fromJson method for object creation.",
            "source": "merged"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-constructors"
            ],
            "line_no": 1569,
            "bad_code": "@Deprecated @Generated public AppAction()",
            "suggestion": "protected AppAction()",
            "comment": "This ExpandableStringEnum model should not have a public constructor. It should be made non‐public so users must use the fromString method.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 1600,
            "bad_code": "public class AppConfigurationSnapshotEventData implements JsonSerializable<AppConfigurationSnapshotEventData>",
            "suggestion": "public abstract class AppConfigurationSnapshotEventData implements JsonSerializable<AppConfigurationSnapshotEventData>",
            "comment": "Declare the base snapshot event class as abstract to clarify its intended use only as a superclass.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-constructors"
            ],
            "line_no": 1623,
            "bad_code": "@Deprecated @Generated public AppServicePlanAction()",
            "suggestion": "protected AppServicePlanAction()",
            "comment": "The public constructor should be changed to a non-public modifier to prevent direct instantiation, as model types created via static factory methods must not expose public constructors. Additionally, consider removing the deprecated constructor from the ExpandableStringEnum subclass to avoid confusion and enforce correct usage.",
            "source": "merged"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-constructors"
            ],
            "line_no": 1640,
            "bad_code": "@Deprecated @Generated public AsyncStatus()",
            "suggestion": "protected AsyncStatus()",
            "comment": "AsyncStatus is meant to be extended via its static factory so its public constructor should be replaced with a protected one.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 1730,
            "bad_code": "@Generated @Override public List<String> getOutput()",
            "suggestion": null,
            "comment": "Extract common functionality like getOutput() into a shared interface or default method to reduce redundancy.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1731,
            "bad_code": "@Generated @Override public JsonWriter toJson(JsonWriter jsonWriter) throws IOException",
            "suggestion": null,
            "comment": "Consider providing a higher-level JSON serialization abstraction to simplify usage and error handling.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1735,
            "bad_code": "@Generated protected AvsScriptExecutionEventData(String operationId, String cmdletId)",
            "suggestion": null,
            "comment": "Consider using a builder pattern for constructors with multiple parameters to enhance readability and maintainability.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1769,
            "bad_code": "@Deprecated @Generated public CommunicationCloudEnvironmentModel()",
            "suggestion": "private CommunicationCloudEnvironmentModel()",
            "comment": "Make the deprecated no-arg constructor private to discourage unintended instantiation.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 1779,
            "bad_code": "@Deprecated @Generated public CommunicationIdentifierKind()",
            "suggestion": "private CommunicationIdentifierKind()",
            "comment": "Restrict the deprecated no-arg constructor's visibility by making it private to prevent misuse.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 2229,
            "bad_code": "// This class does not have any public constructors, and is not able to be instantiated using 'new'.",
            "suggestion": null,
            "comment": "Consider adding a builder or factory method for manual instantiation to improve usability for testing and custom object creation.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-constructors"
            ],
            "line_no": 2409,
            "bad_code": "@Deprecated @Generated public HealthcareFhirResourceType()",
            "suggestion": "protected HealthcareFhirResourceType()",
            "comment": "The default constructor should not be public to prevent unintended instantiation of ExpandableStringEnum types. Change its visibility to protected to restrict direct use and ensure instances are created via the fromString method as intended.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 2458,
            "bad_code": "@Generated public double getExp()",
            "suggestion": "@Generated public double getExpirationTime()",
            "comment": "Use a descriptive method name instead of the abbreviated 'Exp' for clarity.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 2461,
            "bad_code": "@Generated public double getNbf()",
            "suggestion": "@Generated public double getNotBeforeTime()",
            "comment": "Replace the non-descriptive abbreviation 'Nbf' with a more explicit name such as 'NotBeforeTime'.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 2716,
            "bad_code": "@Generated public String getValue()",
            "suggestion": "@Generated public String getPhoneNumber()",
            "comment": "Rename the ambiguous 'getValue' method to 'getPhoneNumber' to clearly convey its purpose.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 2729,
            "bad_code": "@Generated @Override public JsonWriter toJson(JsonWriter jsonWriter) throws IOException",
            "suggestion": null,
            "comment": "Consider abstracting JSON serialization into a shared base class to reduce boilerplate.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-fluent-annotation",
                "java_introduction.html#java-general-follow-general-guidelines"
            ],
            "line_no": 2949,
            "bad_code": "public class ResourceNotificationsResourceDeletedEventData implements JsonSerializable<ResourceNotificationsResourceDeletedEventData>",
            "suggestion": "@Immutable public abstract class ResourceNotificationsResourceDeletedEventData implements JsonSerializable<ResourceNotificationsResourceDeletedEventData> {",
            "comment": "This class should be annotated with @Immutable and declared abstract to align with similar event data models, clearly signal immutability, and indicate it is not meant to be instantiated directly. Declaring it abstract and immutable also ensures consistency and prevents unintended subclassing.",
            "source": "merged"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-models-fluent-annotation",
                "java_introduction.html#java-general-follow-general-guidelines"
            ],
            "line_no": 2981,
            "bad_code": "public class ResourceNotificationsResourceUpdatedEventData implements JsonSerializable<ResourceNotificationsResourceUpdatedEventData>",
            "suggestion": "@Immutable public abstract class ResourceNotificationsResourceUpdatedEventData implements JsonSerializable<ResourceNotificationsResourceUpdatedEventData> {",
            "comment": "The ResourceNotificationsResourceUpdatedEventData class should be marked with the @Immutable annotation and declared as abstract to ensure consistency with other immutable event data types, clarify its intended use as a base class, and prevent unintended extensions.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 3113,
            "bad_code": "@Deprecated @Generated public StampKind()",
            "suggestion": "@Deprecated @Generated private StampKind()",
            "comment": "The constructor in the enum-like ExpandableStringEnum should be private to enforce correct usage.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 3226,
            "bad_code": "public String getClientRequestId()",
            "suggestion": null,
            "comment": "Extract common event properties like clientRequestId into a shared interface or abstract base class to reduce duplication across event model classes. (general comment)",
            "source": "generic"
        },
        {
            "rule_ids": [
                "java_introduction.html#java-naming-uppercase-acronyms"
            ],
            "line_no": 3227,
            "bad_code": "Generated public String getETag()",
            "suggestion": "Generated public String getEtag()",
            "comment": "The method name uses a fully uppercase acronym; according to naming guidelines it should use camel case (i.e. 'getEtag') instead of 'getETag'. (general comment)",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 3268,
            "bad_code": "@Deprecated @Generated public StorageLifecycleCompletionStatus()",
            "suggestion": "@Generated private StorageLifecycleCompletionStatus()",
            "comment": "Change the public no-argument constructor in the expandable enum to private to enforce use of the fromString factory method.",
            "source": "generic"
        }
    ]
}