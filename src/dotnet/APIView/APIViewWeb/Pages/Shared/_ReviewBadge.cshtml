@using APIViewWeb;
@using System;
@using System.Text.RegularExpressions;
@using APIViewWeb.Helpers;
@using APIViewWeb.LeanModels;
@using APIViewWeb.Models
@model (ReviewListItemModel review, APIRevisionListItemModel activeAPIRevision, APIRevisionListItemModel diffAPIRevision, UserPreferenceModel userPreference);

<div class="col-md-11">
    <nav style="--bs-breadcrumb-divider: '-';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            @{
                string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(Model.review.Language);
                string langVariant = String.Empty;
            }
            @if (Model.activeAPIRevision != null && !string.IsNullOrEmpty(Model.activeAPIRevision.Files.First().LanguageVariant) && Model.activeAPIRevision.Files.First().LanguageVariant.ToLower() != "default")
            {
                langVariant = @Model.activeAPIRevision.Files.First().LanguageVariant.ToLower();
                iconClassName += "-" + @Model.activeAPIRevision.Files.First().LanguageVariant.ToLower();
            }
            <li class="breadcrumb-item"><span role="img" class="icon-language @iconClassName" aria-label="@Model.review.Language @langVariant"></span> @Model.review.PackageName</li>
            @if (Model.review.IsApproved)
            {
                <li class="breadcrumb-item" data-bs-toggle="tooltip" title="Approved for First Release"><i class="fa-regular fa-circle-check text-success"></i></li>
            }
            @if (Model.activeAPIRevision != null)
            {
                <li class="breadcrumb-item"><i class="bi bi-clock-history"></i> @PageModelHelpers.ResolveRevisionLabel(Model.activeAPIRevision, false)</li>
                @if (Model.activeAPIRevision.IsApproved)
                {
                    <li class="breadcrumb-item" data-bs-toggle="tooltip" title="APIRevision is Approved"><i class="fa-regular fa-circle-check text-success"></i></li>
                }
            }
            @if (Model.diffAPIRevision != null)
            {
                <li class="breadcrumb-item"><i class="bi bi-file-diff"></i> @PageModelHelpers.ResolveRevisionLabel(Model.diffAPIRevision, false)</li>
                @if (Model.diffAPIRevision.IsApproved)
                {
                    <li class="breadcrumb-item" data-bs-toggle="tooltip" title="Diff APIRevision is Approved"><i class="fa-regular fa-circle-check text-success"></i></li>
                }
            }
        </ol>
    </nav>
</div>
<div class="col-1">
    @if (TempData["page"].Equals("api"))
    {
        if (Model.userPreference != null && Model.userPreference.HideReviewPageOptions.HasValue && Model.userPreference.HideReviewPageOptions == true)
        {
            <input type="checkbox" class="btn-check" id="review-right-offcanvas-toggle" autocomplete="off">
        }
        else
        {
            <input type="checkbox" checked class="btn-check" id="review-right-offcanvas-toggle" autocomplete="off">
        }
        <label class="btn btn-sm btn-outline-primary float-end" accesskey="m" for="review-right-offcanvas-toggle"><i class="fa fa-bars"></i></label>
    }
</div>



