@page "{id}/{revisionId?}"
@model APIViewWeb.Pages.Assemblies.ReviewPageModel
@using APIViewWeb.Helpers
@using APIViewWeb.Models
@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = Model.Review.DisplayName;
    var userPreference = PageModelHelpers.GetUserPreference(Model._preferenceCache, User);
    TempData["UserPreference"] = userPreference;
    TempData["LanguageCssSafeName"] = Model.Review.GetLanguageCssSafeName();
    ViewBag.HasSections = (Model.CodeFile.LeafSections?.Count > 0) ? true : false;
}

<div id="right-offcanvas-menu" class="right-offcanvas">
    <div class="offcanvas-menu-content" id="review-offcanvas-menu-content">
        <p class="h6">
            <a data-bs-toggle="collapse" href="#approveCollapse" aria-expanded="true" aria-controls="approveCollapse">Approve&nbsp;&nbsp;<i class="fa-solid fa-ellipsis"></i></a>
        </p>
        <ul class="list-group collapse show mb-3" id="approveCollapse">
            <li class="list-group-item">
                <small>Approves the current revision of the API</small>
                <form asp-resource="@Model.Review" class="form-inline pt-1" asp-page-handler="ToggleApproval" method="post" asp-requirement="@ApproverRequirement.Instance">
                    <input type="hidden" name="revisionId" value="@Model.Revision.RevisionId" />
                    @if (Model.DiffRevision == null || Model.DiffRevision.Approvers.Count > 0)
                    {
                        @if (Model.Revision.Approvers.Contains(User.GetGitHubLogin()))
                        {
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-outline-secondary">Revert API Approval</button>
                            </div>
                        }
                        else
                        {
                            @if (Model.ActiveConversations > 0 && Model.PreferredApprovers.Contains(User.GetGitHubLogin()))
                            {
                                <div class="d-grid gap-2">
                                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#approveModel">
                                        Approve for GA
                                    </button>
                                </div>

                                <div class="modal fade" id="approveModel" tabindex="-1" role="dialog">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Approve Review</h5>
                                            </div>
                                            <div class="modal-body">
                                                <p> There are still active conversations. <br /> Would you like to review these first? </p>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <a asp-page="Conversation" asp-route-id="@Model.Review.ReviewId">
                                                    <div class="btn btn-outline-secondary">Check Conversations</div>
                                                </a>
                                                <button type="submit" class="btn btn-success">
                                                    Approve API Anyway
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                @if (Model.PreferredApprovers.Contains(User.GetGitHubLogin()))
                                {
                                    <div class="d-grid gap-2">
                                        <button type="submit" class="btn btn-success">Approve for GA</button>
                                    </div>
                                }
                                else
                                {
                                    <div class="d-grid gap-2">
                                        <button type="submit" class="btn btn-outline-secondary" disabled>Cannot Approve for GA</button>
                                    </div>
                                }
                            }
                        }
                    }
                    else
                    {
                        @if (Model.Revision.Approvers.Contains(User.GetGitHubLogin()))
                        {
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-outline-secondary" disabled data-bs-placement="bottom" data-bs-toggle="tooltip" title="API review cannot be approved when comparing against unapproved revision.">
                                    Revert API Approval
                                </button>
                            </div>
                        }
                        else
                        {
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-outline-secondary" disabled data-bs-placement="bottom" data-bs-toggle="tooltip" title="API review cannot be approved when comparing against unapproved revision.">
                                    <i class="far fa-thumbs-up" aria-hidden="true"></i>&nbsp;&nbsp;Approve API
                                </button>
                            </div>
                        }
                    }
                </form>
                @if (Model.Revision.Approvers.Count > 0)
                {
                    <span class="small">
                        Approvers:
                        @{
                            int i = 0;
                        }
                        @foreach (var approver in Model.Revision.Approvers)
                        {
                            <a username="@approver">@approver</a>
                            @if (i < (@Model.Revision.Approvers.Count - 1))
                            {
                                @Html.Raw(",&nbsp;")
                                ;
                            }
                            i++;
                        }
                    </span>
                }
            </li>
            <li class="list-group-item">
                @if (Model.Review.Revisions.LastOrDefault()?.Files.LastOrDefault()?.PackageName != null)
                {
                    var approver = Model.Review.ApprovedForFirstReleaseBy ?? Model.Review.Revisions.LastOrDefault(r => r.IsApproved)?.Approvers?.FirstOrDefault();
                    var nameApprovalTip = approver != null ? "Package has been approved for first release by " + approver : "Package has been approved for first release";

                    <form asp-resource="@Model" class="form-inline py-1" asp-controller="Review" asp-action="ApprovePackageName" asp-route-id="@Model.Review.ReviewId" method="post" asp-requirement="@ApproverRequirement.Instance">
                        @if (!Model.Review.IsApprovedForFirstRelease)
                        {
                            <small class="my-1">Approval for First Release.</small>
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-success" title="Package name must be approved before first preview release of a new package.">
                                    Approve First Release
                                </button>
                            </div>

                        }
                        else
                        {
                            @if (approver != null)
                            {
                                <span class="small my-1">Package has been approved for first release by <a username="@approver">@approver</a></span>
                            }
                            else
                            {
                                <span class="small my-1">Package has been approved for first release</span>
                            }
                        }
                    </form>
                }
            </li>
        </ul>
        <p class="h6">
            <a data-bs-toggle="collapse" href="#requestReviewersCollapse" aria-expanded="true" aria-controls="requestReviewersCollapse">Request Reviewers&nbsp;&nbsp;<i class="fa-solid fa-ellipsis"></i></a>
        </p>
        <ul class="list-group collapse mb-3" id="requestReviewersCollapse">
            @{
                var anyChecked = false;
            }
            <li class="list-group-item">
                <form asp-resource="@Model.Review" asp-page-handler="RequestReviewers" method="post">
                    <ul class="list-group list-group-flush">
                        @foreach (var approver in Model.PreferredApprovers)
                        {
                            <li class="list-group-item">
                                <div class="form-check">
                                    @if (Model.Review.RequestedReviewers != null && Model.Review.RequestedReviewers.Contains(approver))
                                    {
                                        <input class="form-check-input selectDropdownForRequest" type="checkbox" name="reviewers" value="@approver" id="@(approver)CheckBox" checked>
                                        <label class="form-check-label" for="@(approver)CheckBox">
                                            <img username="@approver" size="28" class="comment-icon align-self-start mr-2" />
                                            @approver
                                        </label>
                                        anyChecked = true;
                                    }
                                    else
                                    {
                                        <input class="form-check-input selectDropdownForRequest" type="checkbox" name="reviewers" value="@approver" id="@(approver)CheckBox">
                                        <label class="form-check-label" for="@(approver)CheckBox">
                                            <img username="@approver" size="28" class="comment-icon align-self-start mr-2" />
                                            @approver
                                        </label>
                                    }
                                </div>
                            </li>
                        }
                    </ul>
                </form>
            </li>
            <li class="list-group-item">
                <span>
                    @if (anyChecked)
                    {
                        <button class="btn btn-sm btn-outline-primary" id="submitReviewRequest" onclick="document.getElementById('submitRequestForReview').click()" disabled>Request Selected</button>
                    }
                    else
                    {
                        <button class="btn btn-sm btn-outline-primary" id="submitReviewRequest" onclick="var r = document.getElementsByName('reviewers'); r.forEach((e) => e.checked = true); document.getElementById('submitRequestForReview').click();">Request All</button>
                    }
                    <button type="submit" id="submitRequestForReview" hidden></button>
                </span>
            </li>
        </ul>
        <p class="h6">
            <a data-bs-toggle="collapse" href="#reviewOptionsCollapse" aria-expanded="true" aria-controls="approvalCollapse">Review Options&nbsp;&nbsp;<i class="fa-solid fa-ellipsis"></i></a>
        </p>
        <ul class="list-group collapse show mb-3" id="reviewOptionsCollapse">
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                    <label class="form-check-label" for="flexSwitchCheckDefault">Subscribe</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
                    <label class="form-check-label" for="flexSwitchCheckChecked">Close</label>
                </div>
            </li>
        </ul>
        <p class="h6">
            <a data-bs-toggle="collapse" href="#pageSettingsCollapse" aria-expanded="true" aria-controls="approvalCollapse">Page Settings&nbsp;&nbsp;<i class="fa-solid fa-ellipsis"></i></a>
        </p>
        <ul class="list-group collapse mb-3" id="pageSettingsCollapse">
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                    <label class="form-check-label" for="flexSwitchCheckDefault">Show Comments</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
                    <label class="form-check-label" for="flexSwitchCheckChecked">Show Comments</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckChecked" checked>
                    <label class="form-check-label" for="flexSwitchCheckChecked">Show Documentation</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDisabled" disabled>
                    <label class="form-check-label" for="flexSwitchCheckDisabled">Show Line Number</label>
                </div>
            </li>
            <li class="list-group-item">
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckCheckedDisabled2" checked disabled>
                    <label class="form-check-label" for="flexSwitchCheckCheckedDisabled2">Show Left Navigation</label>
                </div>
            </li>
        </ul>
                   
    </div>
</div>

<div class="container-fluid mx-0 px-0 sub-header-content">
    <div class="row mx-1 px-0 py-2">
        <div class="col-md-8">
            <div class="input-group input-group-sm" id="review-info-bar">
                <partial name="Shared/_ReviewBadge" model="Model.Review" />

                <span class="input-group-text">Revision:</span>

                <select id="revision-select" aria-label="Revision Select">
                    @foreach (var revision in Model.Review.Revisions.Reverse())
                    {
                        var optionName = revision.IsApproved ? $"{@revision.DisplayNameShort} ✔" : @revision.DisplayNameShort;
                        var urlValue = @Url.ActionLink("Review", "Assemblies", new
                        {
                            id = @Model.Review.ReviewId,
                            revisionId = @revision.RevisionId,
                            doc = @Model.ShowDocumentation
                        });
                        if (@revision.DisplayName == @Model.Revision.DisplayName)
                        {
                            <option selected value="@urlValue">@optionName</option>
                        }
                        else
                        {
                            <option value="@urlValue">@optionName</option>
                        }
                    }
                </select>

                @if (@Model.PreviousRevisions.Any())
                {
                    @if (Model.DiffRevisionId != null)
                    {

                        var urlValue = @Url.ActionLink("Review", "Assemblies", new
                        {
                            id = @Model.Review.ReviewId,
                            revisionId = @Model.Revision.RevisionId,
                            diffRevisionId = @Model.DiffRevisionId,
                            doc = @Model.ShowDocumentation,
                            diffOnly = @Model.ShowDiffOnly
                        });
                        <a class="input-group-text" href="@urlValue">Diff With:</a>
                    }
                    else
                    {
                        var urlValue = @Url.ActionLink("Review", "Assemblies", new
                        {
                            id = @Model.Review.ReviewId,
                            revisionId = @Model.Revision.RevisionId,
                            diffRevisionId = @Model.PreviousRevisions.Last().RevisionId,
                            doc = @Model.ShowDocumentation,
                            diffOnly = @Model.ShowDiffOnly
                        });
                        <a class="input-group-text" href="@urlValue">Diff:</a>
                    }
                    <select id="diff-select" aria-label="Diff Select">
                        if (@Model.DiffRevisionId == null)
                        {
                        <option value="" selected></option>
                        }
                        @foreach (var revision in Model.PreviousRevisions.Reverse())
                        {
                            var optionName = revision.IsApproved ? $"{@revision.DisplayNameShort} ✔" : @revision.DisplayNameShort;
                            var urlValue = @Url.ActionLink("Review", "Assemblies", new
                            {
                                id = @Model.Review.ReviewId,
                                diffRevisionId = @revision.RevisionId,
                                diffOnly = @Model.ShowDiffOnly,
                                revisionId = @Model.Revision.RevisionId,
                                doc = @Model.ShowDocumentation
                            });
                            if (@Model.DiffRevisionId != null)
                            {
                                if (@Model.DiffRevisionId == @revision.RevisionId)
                                {
                                    <option value="@urlValue" selected>@optionName</option>
                                }
                                else
                                {
                                    <option value="@urlValue">@optionName</option>
                                }
                            }
                            else
                            {
                                if (@Model.DiffRevisionId != @revision.RevisionId)
                                {
                                    <option value="@urlValue">@optionName</option>
                                }
                            }
                        }
                    </select>
                }
                @{
                    var popOverContent = $"<b>{Model.ActiveConversations}</b> active revision threads.<br><b>{Model.UsageSampleConversations}</b> active usage sample threads.<br><b>{Model.TotalActiveConversations}</b> total active threads.<br>"
                    + $"<b>Current Revision:</b> <em>{@Model.Revision.DisplayName}</em>";
                    @if (Model.DiffRevisionId != null)
                    {
                        popOverContent += $"<br><b>Current Diff:</b> <em>{@Model.DiffRevision?.DisplayName}</em>";
                    }
                    <button type="button" class="btn btn-outline-secondary" id="jump-to-first-comment">
                        <i class="far fa-comment-alt"></i>
                    </button>
                    <button type="button" class="btn btn-info" data-bs-placement="bottom" data-bs-trigger="focus" data-bs-toggle="popover" data-bs-html="true" data-bs-title="Page Info" data-bs-content="@popOverContent">
                        <span class="badge">@Model.ActiveConversations / @Model.TotalActiveConversations</span>
                    </button>
                }
            </div>
        </div>
        <div class="col-md-1">
        </div>
        <div class="col-md-3">
        </div>
    </div>

    <partial name="Shared/_ReviewNavBar" />
</div>
<div class="container-fluid pt-3" id="review-main-container">
    <div class="row mx-3 g-2" data-review-id="@Model.Review.ReviewId" data-revision-id="@Model.Revision.RevisionId" data-language="@Model.Review.Language">
        @{
            var reviewLeftDisplay = String.Empty;
            var reviewRightSize = "10";
            if (userPreference.HideLeftNavigation == true)
            {
                reviewLeftDisplay = "d-none";
                reviewRightSize = "12";
            }

            var reviewApprovedClass = (Model.Revision.Approvers.Count > 0) ? "review-approved" : "border rounded-1";
        }
        <div id="review-left" class="col-2 @reviewApprovedClass @reviewLeftDisplay">
            <div>
                <div class="namespace-view">
                    @if (Model.CodeFile != null)
                    {
                        <partial name="Shared/Navigation" model="Model.CodeFile.Navigation" />
                    }
                </div>
            </div>
        </div>

        <div id="review-right" class="col-@reviewRightSize @reviewApprovedClass">
            <table class="code-window">
                <tbody>
                    @foreach (var line in Model.Lines)
                    {
                        <partial name="_CodeLine" model="@line" />
                    }
                </tbody>
            </table>
        </div>
    </div>
    <partial name="_CommentFormPartial" model="@Model.TaggableUsers" /> 
</div>
