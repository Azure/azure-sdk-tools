"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnownVersions = exports.KnownBypass = exports.KnownDataTypeState = exports.KnownDataProductUserRole = exports.KnownCreatedByType = exports.KnownManagedServiceIdentityType = exports.KnownDefaultAction = exports.KnownControlState = exports.KnownProvisioningState = exports.KnownActionType = exports.KnownOrigin = void 0;
/** Known values of {@link Origin} that the service accepts. */
var KnownOrigin;
(function (KnownOrigin) {
    /** User */
    KnownOrigin["User"] = "user";
    /** System */
    KnownOrigin["System"] = "system";
    /** UserSystem */
    KnownOrigin["UserSystem"] = "user,system";
})(KnownOrigin || (exports.KnownOrigin = KnownOrigin = {}));
/** Known values of {@link ActionType} that the service accepts. */
var KnownActionType;
(function (KnownActionType) {
    /** Internal */
    KnownActionType["Internal"] = "Internal";
})(KnownActionType || (exports.KnownActionType = KnownActionType = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
var KnownProvisioningState;
(function (KnownProvisioningState) {
    /** Represents a succeeded operation. */
    KnownProvisioningState["Succeeded"] = "Succeeded";
    /** Represents a failed operation. */
    KnownProvisioningState["Failed"] = "Failed";
    /** Represents a canceled operation. */
    KnownProvisioningState["Canceled"] = "Canceled";
    /** Represents a pending operation. */
    KnownProvisioningState["Provisioning"] = "Provisioning";
    /** Represents a pending operation. */
    KnownProvisioningState["Updating"] = "Updating";
    /** Represents an operation under deletion. */
    KnownProvisioningState["Deleting"] = "Deleting";
    /** Represents an accepted operation. */
    KnownProvisioningState["Accepted"] = "Accepted";
})(KnownProvisioningState || (exports.KnownProvisioningState = KnownProvisioningState = {}));
/** Known values of {@link ControlState} that the service accepts. */
var KnownControlState;
(function (KnownControlState) {
    /** Field to enable a setting. */
    KnownControlState["Enabled"] = "Enabled";
    /** Field to disable a setting. */
    KnownControlState["Disabled"] = "Disabled";
})(KnownControlState || (exports.KnownControlState = KnownControlState = {}));
/** Known values of {@link DefaultAction} that the service accepts. */
var KnownDefaultAction;
(function (KnownDefaultAction) {
    /** Represents allow action. */
    KnownDefaultAction["Allow"] = "Allow";
    /** Represents deny action. */
    KnownDefaultAction["Deny"] = "Deny";
})(KnownDefaultAction || (exports.KnownDefaultAction = KnownDefaultAction = {}));
/** Known values of {@link ManagedServiceIdentityType} that the service accepts. */
var KnownManagedServiceIdentityType;
(function (KnownManagedServiceIdentityType) {
    /** None */
    KnownManagedServiceIdentityType["None"] = "None";
    /** SystemAssigned */
    KnownManagedServiceIdentityType["SystemAssigned"] = "SystemAssigned";
    /** UserAssigned */
    KnownManagedServiceIdentityType["UserAssigned"] = "UserAssigned";
    /** SystemAssignedUserAssigned */
    KnownManagedServiceIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned, UserAssigned";
})(KnownManagedServiceIdentityType || (exports.KnownManagedServiceIdentityType = KnownManagedServiceIdentityType = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
var KnownCreatedByType;
(function (KnownCreatedByType) {
    /** User */
    KnownCreatedByType["User"] = "User";
    /** Application */
    KnownCreatedByType["Application"] = "Application";
    /** ManagedIdentity */
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    /** Key */
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (exports.KnownCreatedByType = KnownCreatedByType = {}));
/** Known values of {@link DataProductUserRole} that the service accepts. */
var KnownDataProductUserRole;
(function (KnownDataProductUserRole) {
    /** Field to specify user of type Reader. */
    KnownDataProductUserRole["Reader"] = "Reader";
    /**
     * Field to specify user of type SensitiveReader.
     * This user has privileged access to read sensitive data of a data product.
     */
    KnownDataProductUserRole["SensitiveReader"] = "SensitiveReader";
})(KnownDataProductUserRole || (exports.KnownDataProductUserRole = KnownDataProductUserRole = {}));
/** Known values of {@link DataTypeState} that the service accepts. */
var KnownDataTypeState;
(function (KnownDataTypeState) {
    /** Field to specify stopped state. */
    KnownDataTypeState["Stopped"] = "Stopped";
    /** Field to specify running state. */
    KnownDataTypeState["Running"] = "Running";
})(KnownDataTypeState || (exports.KnownDataTypeState = KnownDataTypeState = {}));
/** Known values of {@link Bypass} that the service accepts. */
var KnownBypass;
(function (KnownBypass) {
    /** Represents no bypassing of traffic. */
    KnownBypass["None"] = "None";
    /** Represents bypassing logging traffic. */
    KnownBypass["Logging"] = "Logging";
    /** Represents bypassing metrics traffic. */
    KnownBypass["Metrics"] = "Metrics";
    /** Represents bypassing azure services traffic. */
    KnownBypass["AzureServices"] = "AzureServices";
})(KnownBypass || (exports.KnownBypass = KnownBypass = {}));
/** Known values of {@link Versions} that the service accepts. */
var KnownVersions;
(function (KnownVersions) {
    /** The 2023-11-15 stable version. */
    KnownVersions["V20231115"] = "2023-11-15";
})(KnownVersions || (exports.KnownVersions = KnownVersions = {}));
//# sourceMappingURL=index.js.map