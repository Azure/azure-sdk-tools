{
    "status": "Error",
    "violations": [
        {
            "rule_ids": [
                "python_design.html#python-client-naming",
                "python_design.html#python-client-same-name-sync-async"
            ],
            "line_no": 6,
            "bad_code": "class azure.healthinsights.clinicalmatching.ClinicalMatching(ClinicalMatchingClientOperationsMixin): implements ContextManager",
            "suggestion": "class azure.healthinsights.clinicalmatching.ClinicalMatchingClient(ClinicalMatchingClientOperationsMixin): implements ContextManager",
            "comment": "Service client types must have a 'Client' suffix and the sync and async client classes should share the same name."
        },
        {
            "rule_ids": [
                "python_design.html#python-auth-credential-azure-core"
            ],
            "line_no": 11,
            "bad_code": "api_key: str",
            "suggestion": "Use a credential object from azure.core.credentials (e.g., AzureKeyCredential) instead of a raw string for the api key.",
            "comment": "Authentication parameters should leverage azure-core credential classes rather than using a simple string."
        },
        {
            "rule_ids": [
                "python_design.html#python-lro-poller-begin-naming"
            ],
            "line_no": 66,
            "bad_code": "def create_trials(",
            "suggestion": "def begin_create_trials(",
            "comment": "Long running operations should use a 'begin_' prefix. Rename 'create_trials' to 'begin_create_trials'."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-options-naming"
            ],
            "line_no": 70,
            "bad_code": "options: Optional[CreateTrialsOptions] = None,",
            "suggestion": "Remove the 'options' bag parameter and instead expose each optional parameter directly as keyword-only arguments.",
            "comment": "The use of an 'options bag' (CreateTrialsOptions) is disallowed. Optional parameters should be provided as individual keyword-only arguments."
        },
        {
            "rule_ids": [
                "python_design.html#python-paged-prefix"
            ],
            "line_no": 102,
            "bad_code": "def trials(",
            "suggestion": "def list_trials(",
            "comment": "Methods that enumerate resources should be prefixed with 'list_'. Consider renaming 'trials' to 'list_trials' and returning an ItemPaged type."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-service-verbs"
            ],
            "line_no": 108,
            "bad_code": "def erase_trials(",
            "suggestion": "def delete_trials(",
            "comment": "Deletion operations should use a preferred verb like 'delete_' instead of 'erase_'."
        },
        {
            "rule_ids": [
                "python_design.html#python-lro-poller-begin-naming"
            ],
            "line_no": 181,
            "bad_code": "async def create_trials(",
            "suggestion": "async def begin_create_trials(",
            "comment": "Long running operations should use a 'begin_' prefix. Rename the async 'create_trials' method to 'begin_create_trials'."
        },
        {
            "rule_ids": [
                "python_design.html#python-paged-prefix"
            ],
            "line_no": 217,
            "bad_code": "def trials(",
            "suggestion": "def list_trials(",
            "comment": "Methods that enumerate resources should be prefixed with 'list_'. Consider renaming 'trials' to 'list_trials' and returning an ItemPaged type."
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-vars-naming"
            ],
            "line_no": 998,
            "bad_code": "ivar eligibilityCriteriaEvidence: Optional[str]",
            "suggestion": "ivar eligibility_criteria_evidence: Optional[str]",
            "comment": "Variable names should use snake_case instead of camelCase."
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-vars-naming"
            ],
            "line_no": 1000,
            "bad_code": "ivar patientDataEvidence: Optional[ClinicalNoteEvidence]",
            "suggestion": "ivar patient_data_evidence: Optional[ClinicalNoteEvidence]",
            "comment": "Variable names should use snake_case instead of camelCase."
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-vars-naming"
            ],
            "line_no": 1001,
            "bad_code": "ivar patientInfoEvidence: Optional[ClinicalCodedElement]",
            "suggestion": "ivar patient_info_evidence: Optional[ClinicalCodedElement]",
            "comment": "Variable names should use snake_case instead of camelCase."
        }
    ]
}