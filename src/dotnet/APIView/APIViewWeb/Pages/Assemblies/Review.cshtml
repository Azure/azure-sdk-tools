@page "{id}/{revisionId?}"
@model APIViewWeb.Pages.Assemblies.ReviewPageModel
@{
    Layout = "ReviewLayout";
    ViewData["Title"] = Model.Review.Name;
}

@if (Model.Review.UpdateAvailable)
{
    <div class="alert alert-warning" role="alert" asp-resource="@Model.Review" asp-requirement="@ReviewOwnerRequirement.Instance">
        <form asp-page-handler="RefreshModel" class=".form-inline" method="post" asp-route-id="@Model.Review.ReviewId">
            Your code review uses older format and can be updated
            <button type="submit" class="btn btn-link">Update model</button>
        </form>
    </div>
}
<div class="row">
    <div class="col my-2">
        <div class="dropdown float-left mr-2">
            <a class="btn btn-sm btn-outline-secondary dropdown-toggle" href="#" role="button" data-toggle="dropdown">
                @Model.Revision.Name
            </a>

            <div class="dropdown-menu">
                @foreach (var revision in Model.Review.Revisions)
                {
                    <a class="dropdown-item" asp-route-id="@Model.Review.ReviewId" asp-route-revisionId="@revision.RevisionId">@revision.Name</a>
                }
            </div>
        </div>

        @if (Model.PreviousRevisions.Any())
        {
            <div class="btn-group float-left">
                @if (Model.DiffRevisionId != null)
                {
                    <a class="btn btn-sm btn-outline-secondary active" asp-route-diffRevisionId="">Diff with @Model.DiffRevision?.Name</a>
                }
                else
                {
                    <a class="btn btn-sm btn-outline-secondary" asp-route-diffRevisionId="@Model.PreviousRevisions.Last().RevisionId">Diff</a>
                }
                <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>

                <div class="dropdown-menu">
                    @foreach (var revision in Model.PreviousRevisions)
                    {
                        <a class="dropdown-item" asp-route-diffRevisionId="@revision.RevisionId" active-if="@(Model.DiffRevisionId == revision.RevisionId)">@revision.Name</a>
                    }
                </div>
            </div>
        }

        <form asp-resource="@Model.Review" asp-requirement="@ReviewOwnerRequirement.Instance" class="form-inline float-right ml-2" method="post" asp-page-handler="ToggleClosed">
            <input type="submit" class="btn btn-sm btn-secondary" value="@(Model.Review.IsClosed ? "Reopen": "Close")" />
        </form>

        <div class="dropdown d-inline-block float-right">
            <a class="btn btn-sm btn-outline-secondary dropdown-toggle" href="#" role="button" data-toggle="dropdown">
                💬 @Model.ActiveConversations / @Model.TotalActiveConversations
            </a>
            <div class="dropdown-menu dropdown-menu-right">
                <span class="dropdown-item"><b>@Model.ActiveConversations</b> active revision threads.</span>
                <span class="dropdown-item"><b>@Model.TotalActiveConversations</b> total active threads.</span>
                <span class="dropdown-item checkbox">
                    <label>
                        <input type="checkbox" checked="checked" id="show-comments-checkbox">
                        Show comments
                    </label>
                </span>
            </div>
        </div>
    </div>
</div>
<div class="row" data-review-id="@Model.Review.ReviewId" data-revision-id="@Model.Revision.RevisionId">
    <div class="col-lg-2 col">
        <div class="namespace-view">
            @if (Model.CodeFile != null)
            {
                <partial name="Shared/Navigation" model=" Model.CodeFile.Navigation" />
            }
        </div>
    </div>

    <div class="col-10">
        <table class="code-window border rounded-1">
            <tbody>
                @foreach (var line in Model.Lines)
                {
                    <partial name="_CodeLine" model="@line" />
                }
            </tbody>

        </table>
    </div>
</div>
<div id="js-comment-form-template" class="d-none">
    <div class="comment-form border-top new-thread-comment">
        <form class="new-thread-comment-form comment" method="post" asp-controller="Comments" asp-action="Add">
            <div class="new-comment-content">
                <textarea class="new-thread-comment-text form-control" name="commentText" rows="3"></textarea>
            </div>
            <button data-post-update="comments" type="submit" name="submit" value="Submit" class="comment-submit-button btn btn-outline-dark">Add Comment</button>
            <button type="button" name="cancel" value="Cancel" class="comment-cancel-button btn btn-outline-dark">Cancel</button>
        </form>
    </div>
</div>


<div id="js-comment-edit-form-template" class="d-none">
    <div class="comment-form border-top new-thread-comment">
        <form class="new-thread-comment-form comment" method="post" asp-controller="Comments" asp-action="Update">
            <div class="new-comment-content">
                <textarea class="new-thread-comment-text form-control" name="commentText" rows="3"></textarea>
            </div>
            <input type="hidden" class="js-comment-id" name="commentId" />
            <button data-post-update="comments" type="submit" name="submit" value="Submit" class="comment-submit-button btn btn-outline-dark">Save</button>
            <button type="button" name="cancel" value="Cancel" class="comment-cancel-button btn btn-outline-dark">Cancel</button>
        </form>
    </div>
</div>