parameters:
- name: ToolName
- name: ServiceProject
- name: TestProject
- name: Production
  type: object
  default: {}
- name: Staging
  type: object
  default: {}
- name: ProductionArmSteps
  type: stepList
  default: []
- name: StagingArmSteps
  type: stepList
  default: []

stages:
    - stage: Build
      variables:
      - template: ../variables/globals.yml
      jobs:
      - job: BuildPackage
        pool:
          name: azsdk-pool-mms-ubuntu-2204-general
          vmImage: ubuntu-22.04
        steps:
          - template: /eng/pipelines/templates/steps/install-dotnet.yml
          - pwsh: |
              dotnet build tools/${{ parameters.ToolName }} --configuration Release
            displayName: Build
          - pwsh: |
              dotnet test tools/${{ parameters.ToolName }}/${{ parameters.TestProject }} --configuration Release
            displayName: Test
          - pwsh: |
              dotnet publish tools/${{ parameters.ToolName }}/${{ parameters.ServiceProject }} --configuration Release --output $(Build.ArtifactStagingDirectory)/app
            displayName: Publish
          - publish: $(Build.ArtifactStagingDirectory)
            displayName: Upload
            artifact: artifacts
            condition: succeededOrFailed()

    - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
      - stage: Staging
        dependsOn: Build
        jobs:
        - ${{ if ne(length(parameters.StagingArmSteps), 0) }}:
          - deployment: PublishArm
            displayName: Publish ARM
            environment: ${{ parameters.Staging.EnvironmentName }}
            pool:
              name: azsdk-pool-mms-ubuntu-2204-general
            strategy:
              runOnce:
                deploy:
                  steps: ${{ parameters.StagingArmSteps }}
                
        - deployment: PublishApp
          displayName: Publish App
          environment: ${{ parameters.Staging.EnvironmentName }}
          ${{ if ne(length(parameters.StagingArmSteps), 0) }}:
            dependsOn: PublishArm
          pool:
            name: azsdk-pool-mms-ubuntu-2204-general
            vmImage: ubuntu-22.04
          strategy:
            runOnce:
              deploy:
                steps:
                - task: ArchiveFiles@2
                  displayName: Archive
                  inputs:
                    rootFolderOrFile: $(Pipeline.Workspace)/artifacts/app
                    includeRootFolder: false
                    archiveFile: $(Pipeline.Workspace)/artifacts/${{ parameters.ToolName }}-$(Build.BuildID).zip
                - task: AzureWebApp@1
                  displayName: Deploy
                  inputs:
                    azureSubscription: ${{ parameters.Staging.AzureSubscription }}
                    resourceGroupName: ${{ parameters.Staging.ResourceGroupName }}
                    appName: ${{ parameters.Staging.ResourceName }}
                    package: $(Pipeline.Workspace)/artifacts/${{ parameters.ToolName }}-$(Build.BuildID).zip
                  

      - stage: Production
        dependsOn: Staging
        jobs:
        - ${{ if ne(length(parameters.ProductionArmSteps), 0) }}:
          - deployment: PublishArm
            displayName: Publish ARM
            environment: ${{ parameters.Production.EnvironmentName }}
            pool:
              name: azsdk-pool-mms-ubuntu-2204-general
            strategy:
              runOnce:
                deploy:
                  steps: ${{ parameters.ProductionArmSteps }}
        
        - deployment: PublishApp
          displayName: Publish App
          environment: ${{ parameters.Production.EnvironmentName }}
          ${{ if ne(length(parameters.ProductionArmSteps), 0) }}:
            dependsOn: PublishArm
          pool:
            name: azsdk-pool-mms-ubuntu-2204-general
            vmImage: ubuntu-22.04
          strategy:
            runOnce:
                deploy:
                  steps:
                    - task: ArchiveFiles@2
                      displayName: Archive
                      inputs:
                        rootFolderOrFile: $(Pipeline.Workspace)/artifacts/app
                        includeRootFolder: false
                        archiveFile: $(Pipeline.Workspace)/artifacts/${{ parameters.ToolName }}-$(Build.BuildID).zip
                    - task: AzureWebApp@1
                      displayName: Deploy
                      inputs:
                        azureSubscription: ${{ parameters.Production.AzureSubscription }}
                        resourceGroupName: ${{ parameters.Production.ResourceGroupName }}
                        appName: ${{ parameters.Production.ResourceName }}
                        package: $(Pipeline.Workspace)/artifacts/${{ parameters.ToolName }}-$(Build.BuildID).zip
