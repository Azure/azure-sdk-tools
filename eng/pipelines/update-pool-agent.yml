parameters:
- name: Repos
  type: object
  default:
    - RepoOwner: Azure
      RepoName: azure-sdk-tools
      ExcludePaths: ''
      IncludePaths: ''
    - RepoOwner: Azure
      RepoName: azure-sdk
      ExcludePaths: "^./eng/common/*"
      IncludePaths: ''
    - RepoOwner: Azure
      RepoName: azure-sdk-for-android
      ExcludePaths: "(^./sdk/)|(^./eng/common/)|(/tests/resources/session-records/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-c
      ExcludePaths: "(^./sdk/)|(^./eng/common/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-cpp
      ExcludePaths: "(^./sdk/)|(^./eng/common/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-go
      ExcludePaths: "(^./sdk/)|(^./eng/common/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-ios
      ExcludePaths: "(^./sdk/)|(^./eng/common/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-java
      ExcludePaths: "(^./sdk/,^./eng/common/)|(/resources/session-records/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-js
      ExcludePaths: "(^./sdk/)|(^./eng/common/)|(/recordings/node/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-net
      ExcludePaths: "(^./sdk/)|(^./eng/common/)|(/tests/SessionRecords/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
    - RepoOwner: Azure
      RepoName: azure-sdk-for-python
      ExcludePaths: "(^./sdk/)|(^./eng/common/)|(/tests/recordings/)"
      IncludePaths: "(^./sdk/.*/platform-matrix.*.json$)|(^./sdk/.*/.*yml$)"
- name: MigrationMap
  type: object
  default: []
trigger: none
pr: none

jobs:
  - job: Migration
    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
    variables:
      - template: ./templates/variables/globals.yml
    steps:
      - ${{ each repo in parameters.Repos }}:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            SkipCheckoutNone: true
            Repositories:
              - Name: ${{ repo.RepoOwner }}/${{ repo.RepoName }}
                WorkingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
            Paths:
              - /*
        - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        - pwsh: |
            $files = Get-ChildItem "./*" -Recurse -File 
            $newFileCollection = @()
            foreach ($file in $files) {
              $relativePath = Resolve-Path -LiteralPath $file.FullName -Relative
              if ($relativePath -notmatch ${{ repo.excludePaths }} -and $relativePath -match ${{ repo.includePaths }}) {
                $newFileCollection += $file
              }
            }
            
            Write-Host "The number of matching files: $($newFileCollection.Count)"
            # Scan all Files and check the match
            foreach ($file in $newFileCollection) {
              $newcontent = Get-Content $file.FullName -Raw
              $flag = $False
              $map = '${{ convertToJson(parameters.MigrationMap) }}'
              $map = ConvertFrom-Json $map 
              foreach ($migrate in $map ) {
                if ($newcontent -match $migrate.MigrateFrom) {
                  $flag = $True
                  Write-Host $file.FullName
                  $newcontent = $newcontent -replace "$($migrate.MigrateFrom)", "$($migrate.MigrateTo)"
                }
              }
              if ($flag) {
                Set-Content -Path $file.FullName -Value $newcontent.Trim()
              }
            }
          displayName: Update pool version for "${{ repo.RepoName }}"
          workingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
        - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
          parameters:
            BaseBranchName: $(DefaultBranch)
            PRBranchName: migrate-pool
            CommitMsg: "Migrate to new pool"
            RepoOwner: ${{ repo.RepoOwner }}
            RepoName: ${{ repo.RepoName }}
            PRTitle: "Migrate to new pool"
            OpenAsDraft: true
            WorkingDirectory: $(Build.SourcesDirectory)/docs/${{ repo.RepoName }}
            PushArgs: -f
          