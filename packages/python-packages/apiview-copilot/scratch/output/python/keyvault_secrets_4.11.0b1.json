{
    "comments": [
        {
            "rule_ids": [],
            "line_no": 1,
            "bad_code": "",
            "suggestion": null,
            "comment": "### API Summary\n\n**Purpose**  \nThis API provides a secret management service for securely handling secrets stored in a vault. It enables operations to create, read, update, and delete secrets along with additional functions such as backing up, restoring, and rolling secrets to support complete lifecycle management.\n\n**API Version**  \nThe API utilizes an `ApiVersion` enumeration to manage supported versions. The latest API version is \"7.7-preview.1\".\n\n**Client Classes**  \nThe service offers both synchronous and asynchronous implementations through the `SecretClient` classes. Both variants provide equivalent functionality, allowing architects to choose an approach that best fits their application's design.\n\n**Functional Overview**  \nThe client classes encapsulate comprehensive operations for secret management. They support full CRUD operations, coupled with additional capabilities such as backup, recovery, purging of deleted secrets, and the ability to send custom HTTP requests. These functions ensure secure handling of secrets, including managing their creation, update, deletion, and restoration within the vault.",
            "source": "summary"
        },
        {
            "rule_ids": [
                "python_design.html#python-models-enum-name-uppercase"
            ],
            "line_no": 15,
            "bad_code": "V7_7_preview_1 = \"7.7-preview.1\"",
            "suggestion": "V7_7_PREVIEW_1 = \"7.7-preview.1\"",
            "comment": "Enum member names should be in all uppercase for consistency and to match the naming convention used for other values.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 61,
            "bad_code": "\tclass azure.keyvault.secrets.RollSecretParametersObject:",
            "suggestion": "\tclass azure.keyvault.secrets.RollSecretParameters:",
            "comment": "Simplify the class name by removing the redundant 'Object' suffix.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "python_design.html#python-lro-poller-begin-naming"
            ],
            "line_no": 250,
            "bad_code": "async def delete_secret(",
            "suggestion": "async def begin_delete_secret(",
            "comment": "Long running operations must be prefixed with begin_.",
            "source": "guideline"
        },
        {
            "rule_ids": [
                "python_design.html#python-namespaces-async"
            ],
            "line_no": 271,
            "bad_code": "@distributed_trace",
            "suggestion": "@distributed_trace_async",
            "comment": "Async methods should use the async tracing decorator to ensure consistent and correct asynchronous behavior in the .aio client.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 272,
            "bad_code": "async def list_deleted_secrets(",
            "suggestion": "def list_deleted_secrets(",
            "comment": "Async list operations should not be defined with the async keyword since they return a paging object.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 274,
            "bad_code": "\t\t@distributed_trace",
            "suggestion": "\t\t@distributed_trace_async",
            "comment": "Async methods should use the async tracing decorator for consistency.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 275,
            "bad_code": "async def list_properties_of_secret_versions(",
            "suggestion": "def list_properties_of_secret_versions(",
            "comment": "Async list operations should not be defined with the async keyword since they return a paging object.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 281,
            "bad_code": "\t\t@distributed_trace",
            "suggestion": "\t\t@distributed_trace_async",
            "comment": "Async methods should use the async tracing decorator for consistency.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 282,
            "bad_code": "async def list_properties_of_secrets(",
            "suggestion": "def list_properties_of_secrets(",
            "comment": "Async list operations should not be defined with the async keyword since they return a paging object.",
            "source": "guideline"
        },
        {
            "rule_ids": [
                "python_design.html#python-lro-poller-begin-naming"
            ],
            "line_no": 292,
            "bad_code": "async def recover_deleted_secret(",
            "suggestion": "async def begin_recover_deleted_secret(",
            "comment": "Long running operations must be prefixed with begin_.",
            "source": "guideline"
        }
    ]
}