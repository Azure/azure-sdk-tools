package test

import (
	"fmt"
	"log"
	"testing"

	"github.com/azure-sdk-tools/tools/sdk-ai-bots/azure-sdk-qa-bot-backend/service/preprocess"
)

func TestUnicodeDecoding(t *testing.T) {
	service := preprocess.NewPreprocessService()

	// Test the problematic input with \u00a0 characters
	testInput := `Hi TypeSpec Discussion,\u00a0I have an two swaggers, we'll call it 2021 and 2023 - both are GA'd versions.\u00a0\u00a02023 (originally generated by swashbuckle) has been successfully migrated to typespec.\u00a0\u00a0What would be the appropriate way to go about representing 2021 in typespec?`

	log.Printf("Original: %s", testInput)

	decoded := service.DecodeHTMLContent(testInput)
	log.Printf("Decoded: %s", decoded)

	// Also test the full HTML preprocessing with a more complex example
	complexInput := `\u003cp\u003eHi \u003cat id=\"0\"\u003eTypeSpec Discussion\u003c/at\u003e,\u003c/p\u003e\n\u003cp\u003e\u00a0\u003c/p\u003e\n\u003cp\u003eI have an two swaggers, we'll call it 2021 and 2023 - both are GA'd versions.\u00a02023 (originally generated by swashbuckle) has been successfully migrated to typespec.\u00a02021 not yet migrated to typespec.\u003c/p\u003e`

	log.Printf("Complex original: %s", complexInput)

	preprocessed := service.PreprocessHTMLContent(complexInput)
	log.Printf("Preprocessed: %s", preprocessed)

	fmt.Println("\nTest completed!")
}
