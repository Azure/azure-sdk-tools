.create-merge table BuildDefinition (
    OrganizationName: string,
    ProjectId: string,
    BuildDefinitionId: long,
    BuildDefinitionRevision: long,
    BuildDefinitionName: string,
    Path: string,
    RepositoryId: string,
    RepositoryName: string,
    CreatedDate: datetime,
    DefaultBranch: string,
    ProjectName: string,
    ProjectRevision: long,
    ProjectState: string,
    Quality: string,
    QueueId: long,
    QueueName: string,
    QueuePoolId: long,
    QueuePoolIsHosted: string,
    QueuePoolName: string,
    QueueStatus: string,
    Type: string,
    Url: string,
    BadgeEnabled: bool,
    BuildNumberFormat: string,
    Comment: string,
    Description: string,
    JobAuthorizationScope: string,
    JobCancelTimeoutInMinutes: int,
    JobTimeoutInMinutes: int,
    ProcessType: int,
    ProcessYamlFilename: string,
    RepositoryCheckoutSubmodules: bool,
    RepositoryClean: string,
    RepositoryDefaultBranch: string,
    RepositoryRootFolder: string,
    RepositoryType: string,
    RepositoryUrl: string,
    Options: string,
    Variables: string,
    Tags: string,
    Triggers: dynamic,
    EtlIngestDate: datetime
) with (folder='', docstring='')

.create-or-alter table BuildDefinition ingestion json mapping 'BuildDefinition_mapping' ```[
    { "column": "OrganizationName", "path": "$['organizationName']" },
    { "column": "ProjectId", "path": "$['projectId']" },
    { "column": "BuildDefinitionId", "path": "$['buildDefinitionId']" },
    { "column": "BuildDefinitionRevision", "path": "$['buildDefinitionRevision']" },
    { "column": "BuildDefinitionName", "path": "$['buildDefinitionName']" },
    { "column": "Path", "path": "$['path']" },
    { "column": "RepositoryId", "path": "$['repositoryId']" },
    { "column": "RepositoryName", "path": "$['repositoryName']" },
    { "column": "CreatedDate", "path": "$['createdDate']" },
    { "column": "DefaultBranch", "path": "$['defaultBranch']" },
    { "column": "ProjectName", "path": "$['projectName']" },
    { "column": "ProjectRevision", "path": "$['projectRevision']" },
    { "column": "ProjectState", "path": "$['projectState']" },
    { "column": "Quality", "path": "$['quality']" },
    { "column": "QueueId", "path": "$['queueId']" },
    { "column": "QueueName", "path": "$['queueName']" },
    { "column": "QueuePoolId", "path": "$['queuePoolId']" },
    { "column": "QueuePoolIsHosted", "path": "$['queuePoolIsHosted']" },
    { "column": "QueuePoolName", "path": "$['queuePoolName']" },
    { "column": "QueueStatus", "path": "$['queueStatus']" },
    { "column": "Type", "path": "$['type']" },
    { "column": "Url", "path": "$['url']" },
    { "column": "BadgeEnabled", "path": "$['badgeEnabled']" },
    { "column": "BuildNumberFormat", "path": "$['buildNumberFormat']" },
    { "column": "Comment", "path": "$['comment']" },
    { "column": "Description", "path": "$['description']" },
    { "column": "JobAuthorizationScope", "path": "$['jobAuthorizationScope']" },
    { "column": "JobCancelTimeoutInMinutes", "path": "$['jobCancelTimeoutInMinutes']" },
    { "column": "JobTimeoutInMinutes", "path": "$['jobTimeoutInMinutes']" },
    { "column": "ProcessType", "path": "$['processType']" },
    { "column": "ProcessYamlFilename", "path": "$['processYamlFilename']" },
    { "column": "RepositoryCheckoutSubmodules", "path": "$['repositoryCheckoutSubmodules']" },
    { "column": "RepositoryClean", "path": "$['repositoryClean']" },
    { "column": "RepositoryDefaultBranch", "path": "$['repositoryDefaultBranch']" },
    { "column": "RepositoryRootFolder", "path": "$['repositoryRootFolder']" },
    { "column": "RepositoryType", "path": "$['repositoryType']" },
    { "column": "RepositoryUrl", "path": "$['repositoryUrl']" },
    { "column": "Options", "path": "$['options']" },
    { "column": "Variables", "path": "$['variables']" },
    { "column": "Tags", "path": "$['tags']" },
    { "column": "Triggers", "path": "$['triggers']" },
    { "column": "EtlIngestDate", "path": "$['etlIngestDate']" }
]```
