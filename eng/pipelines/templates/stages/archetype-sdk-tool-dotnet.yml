resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20221201.2

parameters:
  - name: ToolDirectory
    type: string
    default: ''
  - name: DotNetCoreVersion
    type: string
    default: ''
  - name: SkipDotNetInstall
    type: boolean
    default: false
  - name: NoWarn
    type: boolean
    default: false
  - name: TestPostSteps
    type: object
    default: []
  - name: DockerDeployments
    type: object
    default: []
  - name: DockerTagPrefix
    type: string
    default: '1.0.0-dev'
  - name: ManifestDeployment
    type: object
    default: []
  - name: StandaloneExeMatrix
    type: object
    default: []

variables:
  - template: ../variables/globals.yml
  - name: Warn
    ${{ if parameters.NoWarn }}:
      value: ''
    ${{ if not(parameters.NoWarn) }}:
      value: -warnaserror

stages:
  - stage: BuildTestAndPackage

    pool:
      name: azsdk-pool-mms-ubuntu-2004-general
      vmImage: MMSUbuntu20.04

    jobs:
      - job: BuildAndPackage
        displayName: Build and Package

        steps:
          - task: UseDotNet@2
            condition: eq(${{ parameters.SkipDotNetInstall }}, false)
            displayName: 'Use .NET Core sdk ${{ coalesce( parameters.DotNetCoreVersion, variables.DotNetCoreVersion) }}'
            inputs:
              version: '${{ coalesce( parameters.DotNetCoreVersion, variables.DotNetCoreVersion) }}'

          - script: 'dotnet pack /p:ArtifactsPackagesDir=$(Build.ArtifactStagingDirectory) $(Warn) -c Release'
            displayName: 'Build and Package'
            workingDirectory: $(Build.SourcesDirectory)/${{parameters.ToolDirectory}}
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0

          - template: /eng/pipelines/templates/steps/produce-net-standalone-packs.yml
            parameters:
              StagingDirectory: $(Build.ArtifactStagingDirectory)
              BuildMatrix: ${{ parameters.StandaloneExeMatrix }}
              TargetDirectory: $(Build.SourcesDirectory)/${{parameters.ToolDirectory}}

          - publish: $(Build.ArtifactStagingDirectory)
            displayName: Publish package to run artifacts
            artifact: packages
            condition: succeededOrFailed()

      - job: Test

        steps:
          - task: UseDotNet@2
            condition: eq(${{ parameters.SkipDotNetInstall }}, false)
            displayName: 'Use .NET Core sdk ${{ coalesce( parameters.DotNetCoreVersion, variables.DotNetCoreVersion) }}'
            inputs:
              version: '${{ coalesce( parameters.DotNetCoreVersion, variables.DotNetCoreVersion) }}'

          - script: 'dotnet test /p:ArtifactsPackagesDir=$(Build.ArtifactStagingDirectory) $(Warn) --logger trx'
            displayName: 'Test'
            workingDirectory: $(Build.SourcesDirectory)/${{parameters.ToolDirectory}}
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
          
          - ${{ parameters.TestPostSteps }}
          
          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/*.trx'
              testRunTitle: 'Windows DotNet $(DotNetCoreVersion)'
              testResultsFormat: 'VSTest'
              mergeTestResults: true

      - ${{ if not(eq(length(parameters.DockerDeployments), 0)) }}:
        - template: /eng/pipelines/publish-docker-image.yml
          parameters:
            DockerDeployments: ${{ parameters.DockerDeployments }}
            Publish: false
            ImageTag: "${{ parameters.DockerTagPrefix }}$(Build.BuildNumber)"

  - ${{if and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
    - template: pipelines/stages/net-release-to-feed.yml@azure-sdk-build-tools
      parameters:
        # Publish to https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-net
        DevOpsFeedId: '29ec6040-b234-4e31-b139-33dc4287b756/fa8c16a3-dbe0-4de2-a297-03065ec1ba3f'

  - ${{if and(not(eq(length(parameters.DockerDeployments), 0)), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['System.TeamProject'], 'internal'))}}:
    - stage: PublishDockerImages
      displayName: Publish Docker Images
      dependsOn: BuildTestAndPackage
      jobs:
        - template: /eng/pipelines/publish-docker-image.yml
          parameters:
            DockerDeployments: ${{ parameters.DockerDeployments }}
            ManifestDeployment: ${{ parameters.ManifestDeployment }}
            ImageTag: "${{ parameters.DockerTagPrefix }}$(Build.BuildNumber)"
