parameters:
  dependsOn: []
  ShouldTag: true
  ShouldSign: true
  ShouldPublish: true
  ShouldPublishSymbols: true
  # Publish to https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-net
  DevOpsFeedId: '29ec6040-b234-4e31-b139-33dc4287b756/fa8c16a3-dbe0-4de2-a297-03065ec1ba3f'

  ShouldPublishExecutables: false
  RequireStrongNames: true
  ExeMatrix: []
  SigningPool:
    name: azsdk-pool
    image: windows-2022
    os: windows

# Needs Github Release variable group linked.
# Needs AzureSDK Nuget Release Pipelines Secrets variable group linked.

stages:
- stage: Release
  dependsOn: ${{ parameters.DependsOn }}
  variables:
    Artifacts: $(System.DefaultWorkingDirectory)/_artifacts/packages
    Binaries: $(System.DefaultWorkingDirectory)/_artifacts/binaries
    BuildToolPath: $(Pipeline.Workspace)/_azure-sdk-build-tools
    BuildToolScripts: $(BuildToolPath)/scripts
    BuildToolTools: $(BuildToolPath)/tools
    ReleaseRepo: azure/azure-sdk-tools
  jobs:

  - job: SignPackage
    displayName: Sign Package
    pool:
      name: ${{ parameters.SigningPool.name }}
      ${{ if eq(parameters.OSName, 'macOS') }}:
        vmImage: ${{ parameters.SigningPool.image }}
      ${{ else }}:
        image: ${{ parameters.SigningPool.image }}
      os: ${{ parameters.SigningPool.os }}
    templateContext:
      outputs:
        - output: pipelineArtifact
          displayName: 'Store signed packages in $(Artifacts) artifact'
          targetPath: $(Artifacts)
          artifactName: packages-signed
    steps:
      - checkout: azure-sdk-build-tools
        path: _azure-sdk-build-tools

      - task: DownloadPipelineArtifact@2
        displayName: Download Packages
        inputs:
          artifact: packages
          path: $(Artifacts)

      - ${{ if and(eq(parameters.ShouldTag, 'true'),eq(parameters.ShouldPublishExecutables, 'true')) }}:
        - ${{ each target in parameters.ExeMatrix }}:
          - task: DownloadPipelineArtifact@2
            displayName: Download ${{ target.rid }} Binary
            inputs:
              artifact: standalone-${{ target.rid }}
              path: $(Binaries)

      - ${{ if eq(parameters.ShouldSign, 'true') }}:
        - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
          parameters:
            PackagesPath: $(Artifacts)
            BuildToolsPath: $(BuildToolPath)
            RequireStrongNames: ${{ parameters.RequireStrongNames }}

      # These tasks were originally located just before publishing in the Publish_Package deployment job,
      # but we moved them here because they utilize a local script, and that's not allowed in the Publish_Package job.
      # Functionally this is identical ordering to what was in Publish_Package originally, just across
      # two different jobs instead of within one.
      - ${{ if eq(parameters.ShouldTag, 'true') }}:
        - task: PowerShell@2
          displayName: 'Verify Package Tags and Create Git Releases'
          inputs:
            targetType: filePath
            filePath: 'eng/common/scripts/create-tags-and-git-release.ps1'
            arguments: '-artifactLocation $(Artifacts) -workingDirectory $(System.DefaultWorkingDirectory) -packageRepository Nuget -releaseSha $(Build.SourceVersion) -repoId $(Build.Repository.Id)'
          env:
            GH_TOKEN: $(azuresdk-github-pat)
        # sets output variable $(release) for use in the job after next
        - pwsh: |
            Write-Host "##vso[task.setvariable variable=releaseVar;isOutput=true]$(release)"
          displayName: 'Set Release Variable'
          name: SetRelease

  - deployment: Publish_Package
    dependsOn: SignPackage
    environment: net-release
    pool:
      name: ${{ parameters.SigningPool.name }}
      ${{ if eq(parameters.OSName, 'macOS') }}:
        vmImage: ${{ parameters.SigningPool.image }}
      ${{ else }}:
        image: ${{ parameters.SigningPool.image }}
      os: ${{ parameters.SigningPool.os }}

    templateContext:
      type: releaseJob
      isProduction: false
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ if eq(parameters.ShouldSign, 'true') }}:
              - task: 1ES.DownloadPipelineArtifact@1
                displayName: Download Signed Packages
                inputs:
                  ${{ if eq(parameters.ShouldSign, 'true') }}:
                    artifactName: packages-signed
                    targetPath: $(Artifacts)
                  ${{ else }}:
                    artifactName: packages
                    targetPath: $(Artifacts)

            - ${{ if eq(parameters.ShouldPublish, 'true') }}:
              - task: 1ES.PublishNuget@1
                displayName: Publish to DevOps Feed
                condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main')) # Optional condition
                inputs:
                  useDotNetTask: false
                  packagesToPush: '$(Artifacts)/*.nupkg;!$(Artifacts)/*.symbols.nupkg'
                  packageParentPath: '$(Artifacts)'
                  publishVstsFeed: ${{ parameters.DevOpsFeedID }}
                  nuGetFeedType: internal

  - job: PostPackagePublish
    dependsOn:
     - Publish_Package
     - SignPackage
    displayName: Post Package Publish
    variables:
      - name: release
        value: $[ dependencies.SignPackage.outputs['SignPackage.SetRelease.releaseVar'] ]
    pool:
      name: ${{ parameters.SigningPool.name }}
      ${{ if eq(parameters.OSName, 'macOS') }}:
        vmImage: ${{ parameters.SigningPool.image }}
      ${{ else }}:
        image: ${{ parameters.SigningPool.image }}
      os: ${{ parameters.SigningPool.os }}
    steps:
      - checkout: azure-sdk-build-tools
        path: _azure-sdk-build-tools

      - checkout: self

      - task: DownloadPipelineArtifact@2
        displayName: Download Packages
        inputs:
          ${{ if eq(parameters.ShouldSign, 'true') }}:
            artifactName: packages-signed
            targetPath: $(Artifacts)
          ${{ else }}:
            artifactName: packages
            targetPath: $(Artifacts)

      - ${{ if eq(parameters.ShouldPublishSymbols, 'true') }}:
        - template: pipelines/steps/publish-symbols.yml@azure-sdk-build-tools
          parameters:
            BuildToolsRepositoryPath: $(BuildToolPath)
            PackagesPath: $(Artifacts)
            StagingDirectory: $(Build.ArtifactStagingDirectory)/symbols

      - ${{ if and(eq(parameters.ShouldTag, 'true'),eq(parameters.ShouldPublishExecutables, 'true')) }}:
        - ${{ each target in parameters.ExeMatrix }}:
          - task: DownloadPipelineArtifact@2
            displayName: Download ${{ target.rid }} Binary
            inputs:
              artifact: standalone-${{ target.rid }}
              path: $(Binaries)
        - template: ../steps/platform-specific-signing.yml
          parameters:
            BinariesPath: $(Binaries)
            BuildScriptsPath: $(BuildToolScripts)
            ExeMatrix: ${{ parameters.ExeMatrix }}
            Use1ESTemplate: ${{ parameters.Use1ESTemplate }}

        - task: PowerShell@2
          displayName: 'Post to github release'
          inputs:
            targetType: filePath
            # todo, move this local script from the build tools repo as well
            filePath: '$(BuildToolScripts)/post-files-to-git-release.ps1'
            arguments: '-TargetRelease "$(release)" -BinariesDirectory "$(Binaries)" -RepoId $(ReleaseRepo)'
            pwsh: true
          env:
            GH_TOKEN: $(azuresdk-github-pat)
      - task: 1ES.PublishPipelineArtifact@1
        displayName: 'Publish processed files'
        inputs:
          artifactName: processed-files
          targetPath: $(Artifacts)
        condition: always()
