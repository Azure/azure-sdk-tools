parameters:
- name: PythonVersion
  type: string
  default: '3.10'

trigger: none
extends:
  template: /eng/pipelines/templates/stages/1es-redirect.yml
  parameters:
    stages:
      - stage: 'Build'
        variables:
          - template: /eng/pipelines/templates/variables/globals.yml
          - template: /eng/pipelines/templates/variables/image.yml
        jobs:
          - job: 'Build'

            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux

            steps:
              - template: /eng/pipelines/templates/steps/use-python-version.yml
                parameters:
                  versionSpec: '${{ parameters.PythonVersion }}'

              - script: |
                  python --version
                  python -m pip install virtualenv aiohttp chardet trio setuptools wheel packaging
                displayName: 'Setup Python Environment'

              - script: |
                  python -m pip install -r dev_requirements.txt
                  python -m pip install -e .
                displayName: 'Install Test Requirements'
                workingDirectory: $(Build.SourcesDirectory)/packages/python-packages/apiview-copilot

              - task: AzureCLI@2
                displayName: Run Evals (AzureCLI@2)
                inputs:
                  azureSubscription: azure-sdk-tests-playground
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    # Login using service principal (handled automatically by Azure DevOps)
                    az account set --subscription "a18897a6-7e44-457d-9260-f2854c0aca42"

                    # Verify the context
                    az account show --query '{subscription:name,tenant:tenantId}'

                    python packages/python-packages/apiview-copilot/evals/run.py

                    exit $?
                env:
                  AZURE_APP_CONFIG_ENDPOINT: $(evals-appconfig-endpoint)
                  ENVIRONMENT_NAME: staging
                  OPENAI_ENDPOINT: $(evals-openai-endpoint)
                  SYSTEM_ACCESSTOKEN: $(System.AccessToken)
