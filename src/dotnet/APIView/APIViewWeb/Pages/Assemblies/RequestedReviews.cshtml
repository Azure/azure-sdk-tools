@page ""
@model APIViewWeb.Pages.Assemblies.RequestedReviews
@using APIViewWeb.Helpers
@using APIViewWeb.Models
@using APIViewWeb.LeanModels
@{
    ViewData["Title"] = "Requested Reviews";
    var userPreference = PageModelHelpers.GetUserPreference(Model._userProfileCache, User) ?? new UserPreferenceModel();
}

<div class="mx-5 row">
    <div class="col-md-12" id="reviews-tabs-container">
        <!-- Tab Navigation -->
        <ul class="nav nav-tabs mt-3" id="reviewTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <a class="nav-link active" id="pending-reviews-tab" data-toggle="tab" href="#pending-reviews" role="tab" aria-controls="pending-reviews" aria-selected="true">
                    Pending Reviews
                    @if (Model.ActiveAPIRevisions.Any())
                    {
                        <span class="badge badge-primary ml-2">@Model.ActiveAPIRevisions.Count()</span>
                    }
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="pending-namespace-tab" data-toggle="tab" href="#pending-namespace" role="tab" aria-controls="pending-namespace" aria-selected="false">
                    Pending Namespace Approvals
                    @if (Model.NamespaceApprovalRequestedAPIRevisions.Any())
                    {
                        <span class="badge badge-warning ml-2">@Model.NamespaceApprovalRequestedAPIRevisions.Count()</span>
                    }
                </a>
            </li>
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="recently-approved-tab" data-toggle="tab" href="#recently-approved" role="tab" aria-controls="recently-approved" aria-selected="false">
                    Recently Approved
                    @if (Model.ApprovedAPIRevisions.Any())
                    {
                        <span class="badge badge-success ml-2">@Model.ApprovedAPIRevisions.Count()</span>
                    }
                </a>
            </li>
            @* BEGIN: Reviews without namespace approval tab commented out
            <li class="nav-item" role="presentation">
                <a class="nav-link" id="reviews-without-namespace-tab" data-toggle="tab" href="#reviews-without-namespace" role="tab" aria-controls="reviews-without-namespace" aria-selected="false">
                    Reviews without namespace approval
                    @if (Model.ReviewsWithoutNamespaceApproval.Any())
                    {
                        <span class="badge badge-info ml-2">@Model.ReviewsWithoutNamespaceApproval.Count()</span>
                    }
                </a>
            </li>
            END *@
        </ul>

        <!-- Tab Content -->
        <div class="tab-content mt-3" id="reviewTabsContent">
            <!-- Pending Reviews Tab -->
            <div class="tab-pane fade show active" id="pending-reviews" role="tabpanel" aria-labelledby="pending-reviews-tab">
                <div class="col-12 p-0 border rounded table-responsive shadow-sm">
                    <table id="pending-reviews-table" class="table table-sm table-hover m-0" style="width:100%">
                        <thead>
                            <tr>
                                <th scope="col" class="pl-4">Name</th>
                                <th scope="col" class="border-left pl-3">CreatedBy</th>
                                <th scope="col" class="border-left pl-3">Last Updated</th>
                                <th scope="col" class="border-left pl-3">Type</th>
                                <th scope="col" class="border-left pl-3">Requested on</th>
                                <th scope="col" class="border-left pl-3">Requested by</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.ActiveAPIRevisions.Any())
                            {
                                @foreach (var apiRevision in Model.ActiveAPIRevisions)
                                {
                                    var assignment = apiRevision.AssignedReviewers.FirstOrDefault(ar => ar.AssingedTo == User.GetGitHubLogin());
                                    var approvalRequestedOn = assignment?.AssingedOn;
                                    var requestBy = assignment?.AssignedBy;

                                    var truncationIndex = @Math.Min(apiRevision.PackageName.Length, 100);
                                    <tr class="package-data-row">
                                        <td class="align-middle pl-4 pt-0 pb-0">
                                            @if (apiRevision.Language != null)
                                            {
                                                string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(@apiRevision.Language);
                                                @* Only add language variant if it's not empty, default, or none (which don't have CSS classes) *@
                                                var languageVariant = apiRevision.Files.FirstOrDefault().LanguageVariant;
                                                @if (!string.IsNullOrEmpty(languageVariant) && 
                                                     !languageVariant.Equals("default", StringComparison.OrdinalIgnoreCase) &&
                                                     !languageVariant.Equals("none", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    iconClassName += "-" + languageVariant.ToLower();
                                                }
                                                <span role="img" class="mx-1 icon icon-language @iconClassName" aria-label="@apiRevision.Language @languageVariant"></span>
                                            }
                                            <a class="review-name align-middle" asp-page="./Review" asp-route-id="@apiRevision.ReviewId">@apiRevision.PackageName.Substring(0, @truncationIndex)</a>
                                            @if (apiRevision.IsApproved == true)
                                            {
                                                <i class="fas fa-check-circle text-success ml-2"></i>
                                            }
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <a username="@apiRevision.CreatedBy">@apiRevision.CreatedBy</a>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@apiRevision.LastUpdatedOn.ToLocalTime()"></span>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span>@apiRevision.APIRevisionType.ToString()</span>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            @if (approvalRequestedOn.HasValue)
                                            {
                                                <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@approvalRequestedOn.Value.ToLocalTime()"></span>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            @if (!string.IsNullOrEmpty(requestBy))
                                            {
                                                <a username="@requestBy">@requestBy</a>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else 
                            {
                                <tr class="package-data-row"> 
                                    <td colspan="6">No new reviews require approval.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Pending Namespace Approvals Tab -->
            <div class="tab-pane fade" id="pending-namespace" role="tabpanel" aria-labelledby="pending-namespace-tab">
                <div class="col-12 p-0 border rounded table-responsive shadow-sm">
                    <table id="namespace-reviews-table" class="table table-sm table-hover m-0" style="width:100%">
                        <thead>
                            <tr>
                                <th scope="col" class="pl-4">Name</th>
                                <th scope="col" class="border-left pl-3">CreatedBy</th>
                                <th scope="col" class="border-left pl-3">Last Updated</th>
                                <th scope="col" class="border-left pl-3">Type</th>
                                <th scope="col" class="border-left pl-3">Requested on</th>
                                <th scope="col" class="border-left pl-3">Requested by</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.NamespaceApprovalRequestedAPIRevisions.Any())
                            {
                                @foreach (var apiRevision in Model.NamespaceApprovalRequestedAPIRevisions)
                                {
                                    // Get namespace approval request information from the stored data
                                    var hasNamespaceInfo = Model.NamespaceApprovalInfo.TryGetValue(apiRevision.ReviewId, out var namespaceInfo);
                                    var approvalRequestedOn = hasNamespaceInfo ? namespaceInfo.RequestedOn : (DateTime?)null;
                                    var requestBy = hasNamespaceInfo ? namespaceInfo.RequestedBy : null;
                                    
                                    // Fallback to assignment info if namespace info not available
                                    if (!hasNamespaceInfo)
                                    {
                                        var assignment = apiRevision.AssignedReviewers.FirstOrDefault(ar => ar.AssingedTo == User.GetGitHubLogin());
                                        approvalRequestedOn = assignment?.AssingedOn;
                                        requestBy = assignment?.AssignedBy;
                                    }

                                    var truncationIndex = @Math.Min(apiRevision.PackageName.Length, 100);
                                    <tr class="package-data-row">
                                        <td class="align-middle pl-4 pt-0 pb-0">
                                            @if (apiRevision.Language != null)
                                            {
                                                string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(@apiRevision.Language);
                                                @* Only add language variant if it's not empty, default, or none (which don't have CSS classes) *@
                                                var languageVariant = apiRevision.Files.FirstOrDefault().LanguageVariant;
                                                @if (!string.IsNullOrEmpty(languageVariant) && 
                                                     !languageVariant.Equals("default", StringComparison.OrdinalIgnoreCase) &&
                                                     !languageVariant.Equals("none", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    iconClassName += "-" + languageVariant.ToLower();
                                                }
                                                <span role="img" class="mx-1 icon icon-language @iconClassName" aria-label="@apiRevision.Language @languageVariant"></span>
                                            }
                                            <a class="review-name align-middle" asp-page="./Review" asp-route-id="@apiRevision.ReviewId">@apiRevision.PackageName.Substring(0, @truncationIndex)</a>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <a username="@apiRevision.CreatedBy">@apiRevision.CreatedBy</a>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@apiRevision.LastUpdatedOn.ToLocalTime()"></span>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span>@apiRevision.APIRevisionType.ToString()</span>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            @if (approvalRequestedOn.HasValue)
                                            {
                                                <span data-placement="left" data-toggle="tooltip" title="@approvalRequestedOn" date="@approvalRequestedOn.Value.ToLocalTime()"></span>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            @if (!string.IsNullOrEmpty(requestBy))
                                            {
                                                <a username="@requestBy">@requestBy</a>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else 
                            {
                                <tr class="package-data-row">
                                    <td colspan="6">No reviews with pending namespace approval requests.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Recently Approved Tab -->
            <div class="tab-pane fade" id="recently-approved" role="tabpanel" aria-labelledby="recently-approved-tab">
                <div class="col-12 p-0 border rounded table-responsive shadow-sm">
                    <table id="approved-reviews-table" class="table table-sm table-hover m-0" style="width:100%">
                        <thead>
                            <tr>
                                <th scope="col" class="pl-4">Name</th>
                                <th scope="col" class="border-left pl-3">CreatedBy</th>
                                <th scope="col" class="border-left pl-3">Last Updated</th>
                                <th scope="col" class="border-left pl-3">Type</th>
                                <th scope="col" class="border-left pl-3">Approved last</th>
                                <th scope="col" class="border-left pl-3">Approved by</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.ApprovedAPIRevisions.Any())
                            {
                                @foreach (var apiRevision in Model.ApprovedAPIRevisions)
                                {
                                    var assignment = apiRevision.AssignedReviewers.FirstOrDefault(ar => ar.AssingedTo == User.GetGitHubLogin());
                                    var approvalRequestedOn = assignment?.AssingedOn;
                                    var requestBy = assignment?.AssignedBy;

                                    var truncationIndex = @Math.Min(apiRevision.PackageName.Length, 100);
                                    <tr class="package-data-row">
                                        <td class="align-middle pl-4 pt-0 pb-0">
                                            @if (apiRevision.Language != null)
                                            {
                                                string iconClassName = "icon-" + PageModelHelpers.GetLanguageCssSafeName(@apiRevision.Language);
                                                @* Only add language variant if it's not empty, default, or none (which don't have CSS classes) *@
                                                var languageVariant = apiRevision.Files.FirstOrDefault().LanguageVariant;
                                                @if (!string.IsNullOrEmpty(languageVariant) && 
                                                     !languageVariant.Equals("default", StringComparison.OrdinalIgnoreCase) &&
                                                     !languageVariant.Equals("none", StringComparison.OrdinalIgnoreCase))
                                                {
                                                    iconClassName += "-" + languageVariant.ToLower();
                                                }
                                                <span role="img" class="mx-1 icon icon-language @iconClassName" aria-label="@apiRevision.Language @languageVariant"></span>
                                            }
                                            <a class="review-name align-middle" asp-page="./Review" asp-route-id="@apiRevision.ReviewId">@apiRevision.PackageName.Substring(0, @truncationIndex)</a>
                                            @if (apiRevision.IsApproved == true)
                                            {
                                                <i class="fas fa-check-circle text-success ml-2"></i>
                                            }
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <a username="@apiRevision.CreatedBy">@apiRevision.CreatedBy</a>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@apiRevision.LastUpdatedOn.ToLocalTime()"></span>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span>@apiRevision.APIRevisionType.ToString()</span>
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            @if (approvalRequestedOn.HasValue)
                                            {
                                                <span data-placement="left" data-toggle="tooltip" title="@apiRevision.LastUpdatedOn" date="@approvalRequestedOn.Value.ToLocalTime()"></span>
                                            }
                                            else
                                            {
                                                <span>N/A</span>
                                            }
                                        </td>
                                        <td class="align-middle border-left pl-3">
                                            <span>
                                                @foreach(var approver in apiRevision.Approvers) {
                                                     <a username="@approver"> @approver </a>
                                                }
                                            </span>
                                        </td>
                                    </tr>
                                }
                            }
                            else 
                            {
                                <tr class="package-data-row">
                                    <td colspan="6">No reviews have been recently approved.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            @* Reviews without namespace approval tab removed *@
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize Bootstrap tabs
            $('#reviewTabs a').on('click', function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
            
            // Show the active tab on page load
            $('#reviewTabs a.active').tab('show');
        });
    </script>
}