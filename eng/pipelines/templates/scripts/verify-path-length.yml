# Template for all Python Scripts in this repository
parameters: 
  SourceDirectory: ''
  BasePathLength: 49

steps:
  - task: PythonScript@0
    displayName: Analyze Path Lengths
    inputs:
      scriptSource: inline
      script: |
        # Verifies Length of file path for all files in the SourceDirectory.
        # File paths and directory paths must be less than 260 and 248 characters respectively on windows OS
        # Repo users get a limited number of characters for the repo clone path. As Specified by the BasePathLength parameter.
        # Script makes sure that paths in the repo are less than 210 and 198 for files and directories respectively when counting from the SourceDirectory.
        import os
        import sys

        source_directory = r'${{ parameters.SourceDirectory }}'
        longest_file_path = ''
        longest_file_path_length = 0
        longest_dir_path = ''
        longest_dir_path_length = 0

        print('Analyzing length of paths...')
        for root, dirs, files in os.walk('{0}'.format(source_directory)):
            for file in files:
                file_path = os.path.relpath(os.path.join(root, file), source_directory)
                if ((len(file_path) + ${{ parameters.BasePathLength }}) > longest_file_path_length):
                    longest_file_path_length = len(file_path) + ${{ parameters.BasePathLength }}
                    longest_file_path = file_path
                    if (longest_file_path_length >= 260):
                        raise Exception('{0} : is 210 or more Characters long. Reduce path length'.format(longest_file_path))
                dir_path = os.path.relpath(root, source_directory)
                if ((len(dir_path) + ${{ parameters.BasePathLength }}) > longest_dir_path_length):
                    longest_dir_path_length = len(dir_path) + ${{ parameters.BasePathLength }}
                    longest_dir_path = dir_path
                    if (longest_dir_path_length >= 248):
                        raise Exception('{0} : is 198 or more Characters long. Reduce path length'.format(root))
        print('The Longest file path "{0}" is {1} characters long after adding BasePathLength'.format(longest_file_path, longest_file_path_length))
        print('The Longest directory path "{0}" is {1} characters long after adding BasePathLength'.format(longest_dir_path, longest_dir_path_length))
