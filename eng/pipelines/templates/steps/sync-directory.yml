parameters:
  Repos: []
  DirectoryToSync: eng/common
  CommitMessage: commit-message-not-set
  PRBranchName: branch-name-not-set
  BaseBranchName: master
  PRTitle: pr-title-not-set
  PRBody: pr-body-not-set
  PRDataArtifactPath: pr-data-artifact-path-not-set
  SkipCheckingForChanges: false
  ScriptDirectory: eng/common/scripts
  PROwner: Azure
  PushArgs:

steps:
  - pwsh: |
      New-Item -Path ${{ parameters.PRDataArtifactPath }} -ItemType File
    displayName: Create PRData Artifact

  - ${{ each repo in parameters.Repos }}:
    - pwsh: |
        Set-PsDebug -Trace 1
        git clone --branch ${{ parameters.BaseBranchName }} https://github.com/azure/${{ repo }}
        $repoPath = "${{ repo }}/${{ parameters.DirectoryToSync }}"
        if ('$(PatchFilesLocation)')
        {
          pushd ${{ repo }}
          $results = @()
          echo "##vso[task.setvariable variable=HasChanges]$false"
          $shaBeforePatches = git rev-parse --short HEAD
          foreach ($file in (Get-ChildItem $(PatchFilesLocation)))
          {
             Write-Host $file.FullName
             git -c user.name="azure-sdk" -c user.email="azuresdk@microsoft.com" am -3 $file.FullName
             if ($lastExitCode -ne 0) { 
               git am --show-current-patch=diff
               Write-Error "##vso[task.LogIssue type=warning;]Failed to properly apply patch files to [https://github.com/azure/${{ repo }}]"
               exit 1
             }
          }
          $shaAfterPatches = git rev-parse --short HEAD
          $hasChanges = $shaBeforePatches -ne $shaAfterPatches
          echo "##vso[task.setvariable variable=HasChanges]$hasChanges"
        }
        else
        {
          if (!(Test-Path $repoPath)) { mkdir $repoPath }
          Remove-Item -v -r $repoPath
          Copy-Item -v -r $(Build.SourcesDirectory)/${{ parameters.DirectoryToSync }} $repoPath
          Get-ChildItem -r $repoPath
        }
      displayName: Copy or Apply Patch for ${{ parameters.DirectoryToSync }} from azure-sdk-tools to ${{ repo }}
      workingDirectory: $(System.DefaultWorkingDirectory)

    - task: PowerShell@2
      displayName: Push changes
      condition: and(succeeded(), eq(variables['HasChanges'], 'true'))
      inputs:
        pwsh: true
        workingDirectory: ${{ parameters.WorkingDirectory }}
        filePath: ${{ parameters.ScriptDirectory }}/git-branch-push.ps1
        arguments: >
          -PRBranchName "${{ parameters.PRBranchName }}"
          -CommitMsg "${{ parameters.CommitMessage }}"
          -GitUrl "https://$(azuresdk-github-pat)@github.com/${{ parameters.PROwner }}/${{ repo }}.git"
          -PushArgs "${{ parameters.PushArgs }}"
          -SkipCommit "${{parameters.SkipCheckingForChanges}}"

    - pwsh: |
        $PRData = "Azure;${{ repo }};$(Submitted.PullRequest.Number)"
        Add-Content -Path ${{ parameters.PRDataArtifactPath }} -Value $PRData
      displayName: Write Sync PR Data to Artifact File
      condition: and(succeeded(), eq(variables['HasChanges'], 'true'))
