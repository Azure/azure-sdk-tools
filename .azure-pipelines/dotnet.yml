# External variables:
# ProjectFile - The project to build and test. This variable is defined in pipeline web ui because we want to be able to provide it at queue time and that isn't supported in yaml yet.
# MaxParallelTestJobs - Maximum number of parallel test jobs

trigger:
  - master

variables:
  DotNetCoreVersion: '2.1.503'

jobs:
  - job: 'Build'

    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - task: DotNetCoreInstaller@0
        displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
        inputs:
          version: '$(DotNetCoreVersion)'

      - script: 'dotnet pack $(ProjectFile) -o $(Build.ArtifactStagingDirectory) -warnaserror'
        displayName: 'Build and Package'
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          DOTNET_MULTILEVEL_LOOKUP: 0

      - task: PublishBuildArtifacts@1
        condition: succeededOrFailed()
        displayName: 'Publish Artifacts'
        inputs:
          ArtifactName: packages

  - job: 'Test'

    strategy:
      maxParallel: $[ variables['MaxParallelTestJobs'] ]
      matrix:
        Linux:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-16.04'
        Windows:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
        MacOs:
          OSName: 'MacOS'
          OSVmImage: 'macOS-10.13'

    pool:
      vmImage: '$(OSVmImage)'

    steps:
      - task: DotNetCoreInstaller@0
        displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
        inputs:
          version: '$(DotNetCoreVersion)'

      - task: DotNetCoreCLI@2
        displayName: 'Build & Test'
#        condition: eq(variables['System.TeamProject'], 'public')
        env:
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
          DOTNET_CLI_TELEMETRY_OPTOUT: 1
          DOTNET_MULTILEVEL_LOOKUP: 0
        inputs:
          command: test
          projects: '$(ProjectFile)'
          publishTestResults: false

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/*.trx'
          testRunTitle: '$(OSName) DotNet $(DotNetCoreVersion)'
          testResultsFormat: 'VSTest'
          mergeTestResults: true
