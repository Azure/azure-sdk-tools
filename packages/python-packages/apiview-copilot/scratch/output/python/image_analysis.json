{
    "comments": [
        {
            "rule_ids": [
                "python_design.html#python-client-connection-string"
            ],
            "line_no": 10,
            "bad_code": "connection_string: Optional[str] = None,",
            "suggestion": "null",
            "comment": "The constructor should not accept a connection string; instead provide a from_connection_string factory method.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 33,
            "bad_code": "    visual_features: List[VisualFeatures],",
            "suggestion": "    visual_features: List[VisualFeatures], *,",
            "comment": "Insert '*' after required parameters to enforce keyword-only optional arguments, ensuring consistency with the 'analyze' method.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 168,
            "bad_code": "    ivar list: List[DenseCaption]",
            "suggestion": "    ivar captions: List[DenseCaption]",
            "comment": "Avoid using the built-in name 'list' as an attribute; use a more descriptive name like 'captions'.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-type-naming"
            ],
            "line_no": 209,
            "bad_code": "class azure.ai.vision.imageanalysis.models.detectedPerson(MutableMapping[str, Any]):",
            "suggestion": "class azure.ai.vision.imageanalysis.models.DetectedPerson(MutableMapping[str, Any]):",
            "comment": "Type names must use PascalCase. Rename 'detectedPerson' to 'DetectedPerson' for consistency.",
            "source": "merged"
        },
        {
            "rule_ids": [],
            "line_no": 409,
            "bad_code": "    ivar list: List[DetectedObject]",
            "suggestion": "    ivar objects: List[DetectedObject]",
            "comment": "Avoid shadowing the built-in 'list'; rename the attribute to something more descriptive such as 'objects'.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-properties"
            ],
            "line_no": 411,
            "bad_code": "def get_result(self) -> ObjectsResult",
            "suggestion": "null",
            "comment": "Simple getter methods should be implemented as properties to follow Pythonic conventions and provide a more idiomatic API.",
            "source": "merged"
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-properties"
            ],
            "line_no": 413,
            "bad_code": "def set_result(self, obj) -> None",
            "suggestion": "null",
            "comment": "The set_result method should be replaced with a property setter to adhere to Pythonic design principles and avoid simple setter methods.",
            "source": "merged"
        },
        {
            "rule_ids": [
                "python_design.html#python-models-async"
            ],
            "line_no": 432,
            "bad_code": "class azure.ai.vision.imageanalysis.models.aio.PeopleResult(MutableMapping[str, Any]):",
            "suggestion": "null",
            "comment": "Models should not be duplicated in the aio namespace; shared models must exist in a single location.",
            "source": "guideline"
        },
        {
            "rule_ids": [],
            "line_no": 433,
            "bad_code": "    ivar list: List[detectedPerson]",
            "suggestion": "    ivar people: List[DetectedPerson]",
            "comment": "Avoid using built-in names for attributes and ensure type names use PascalCase; consider 'people' instead of 'list' with 'DetectedPerson'.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 473,
            "bad_code": "    ivar list: List[CropRegion]",
            "suggestion": "    ivar crop_regions: List[CropRegion]",
            "comment": "Avoid using the built-in 'list' as an attribute name; choose a descriptive name such as 'crop_regions'.",
            "source": "generic"
        },
        {
            "rule_ids": [],
            "line_no": 492,
            "bad_code": "ivar list: List[DetectedTag]",
            "suggestion": "ivar tags: List[DetectedTag]",
            "comment": "Using a built‚Äêin name like 'list' can be confusing. Rename it (e.g. to 'tags') for clarity and consistency.",
            "source": "generic"
        },
        {
            "rule_ids": [
                "python_design.html#python-models-enum-name-uppercase"
            ],
            "line_no": 517,
            "bad_code": "tags = 'tags'",
            "suggestion": "TAGS = 'tags'",
            "comment": "Enum member names should be uppercase for consistency. Change 'tags' to 'TAGS' to adhere to the guideline.",
            "source": "merged"
        }
    ]
}