{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "APITreeNode.json",
    "type": "object",
    "properties": {
        "Name": {
            "type": "string",
            "description": "The name of the tree node which will be used as label for the API Navigation. Generally this is the name of the module (class, method)."
        },
        "Id": {
            "type": "string",
            "description": "Id of the node, which should be unique at the node level. i.e. unique among its siblings. This was previously represented by the DefinitionId for the main Token of the node."
        },
        "Kind": {
            "anyOf": [
                {
                    "type": "string",
                    "const": "assembly"
                },
                {
                    "type": "string",
                    "const": "namespace"
                },
                {
                    "type": "string",
                    "const": "class"
                },
                {
                    "type": "string",
                    "const": "delegate"
                },
                {
                    "type": "string",
                    "const": "enum"
                },
                {
                    "type": "string",
                    "const": "interface"
                },
                {
                    "type": "string",
                    "const": "method"
                },
                {
                    "type": "string",
                    "const": "package"
                },
                {
                    "type": "string",
                    "const": "struct"
                },
                {
                    "type": "string",
                    "const": "type"
                }
            ],
            "description": "The kind of node"
        },
        "BottomTokens": {
            "type": "array",
            "items": {
                "$ref": "StructuredToken.json"
            },
            "description": "Tokens which are rendered after all child nodes. Depending on the language this would include the closing curly brace and/or empty lines."
        },
        "Children": {
            "type": "array",
            "items": {
                "$ref": "APITreeNode.json"
            },
            "description": "The nodes immediate children. For a namespace this would be classes, for a class this would be the class constructors and methods. Children are rendered after TopTokens but before BottomTokens, and are automatically indented."
        },
        "Properties": {
            "$ref": "APITreeNodeProperties.json",
            "description": "Properties of the APITreeNode."
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "APITreeNodeTags.json"
            },
            "description": "Tags of the APITreeNode."
        }
    },
    "required": [
        "Name",
        "Id",
        "Kind"
    ]
}