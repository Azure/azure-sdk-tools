parameters:
  - name: DependsOn
    type: object
    default: []
  - name: ArtifactName
    type: string
    default: 'packages'
  - name: Feed
    type: string
    default: 'public/azure-sdk-for-net'
  - name: PublishEnvironment
    type: string
    default: 'none'
  - name: ShouldSign
    type: boolean
    default: true
  - name: ShouldPublish
    type: boolean
    default: true
  - name: ShouldPublishSymbols
    type: boolean
    default: true

jobs:
  - job: PrePackagePublish
    displayName: Prepare package for publishing
    dependsOn: ${{ parameters.DependsOn }}
    pool:
      name: $(WINDOWSPOOL)
      image: $(WINDOWSVMIMAGE)
      os: windows

    variables:
    - name: Artifacts
      value: $(Pipeline.Workspace)/${{ parameters.ArtifactName }}
    - name: BuildToolPath
      value: $(Pipeline.Workspace)/_azure-sdk-build-tools
      
    templateContext:
      outputs:
        - output: pipelineArtifact
          displayName: Upload packages to publish
          condition: succeededOrFailed()
          artifactName: ${{ parameters.ArtifactName }}-signed
          targetPath: $(Artifacts)

    steps:
      - checkout: azure-sdk-build-tools
        path: _azure-sdk-build-tools

      - download: none # Disable the automatic downloading so that we can download ourselves to the location we want.
      - task: DownloadPipelineArtifact@2
        displayName: Download Packages
        inputs:
          artifact: ${{ parameters.ArtifactName }}
          path: $(Artifacts)

      - ${{ if eq(parameters.ShouldSign, true) }}:
        - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
          parameters:
            PackagesPath: $(Artifacts)
            BuildToolsPath: $(BuildToolPath)

      - ${{ if eq(parameters.ShouldPublishSymbols, true) }}:
        - template: pipelines/steps/publish-symbols.yml@azure-sdk-build-tools
          parameters:
            BuildToolsRepositoryPath: $(BuildToolPath)
            PackagesPath: $(Artifacts)
            StagingDirectory: $(Build.ArtifactStagingDirectory)/symbols

  - ${{ if eq(parameters.ShouldPublish, true) }}:
    - deployment: PublishPackage
      displayName: Publish package to ${{ parameters.Feed }}
      condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
      environment: ${{ parameters.PublishEnvironment }}
      dependsOn: PrePackagePublish

      pool: # Have to hardcode name and image because deployments don't support variables
        name: azsdk-pool
        image: windows-2022 # Nuget publish requires .NET framework on windows to handle the auth
        os: windows

      variables:
      - name: Artifacts
        value: $(Pipeline.Workspace)/${{ parameters.ArtifactName }}-signed

      templateContext:
        type: releaseJob
        isProduction: true
        inputs:
          - input: pipelineArtifact
            artifactName: ${{ parameters.ArtifactName }}-signed
            targetPath: $(Artifacts)

      strategy:
        runOnce:
          deploy:
            steps:
              - task: 1ES.PublishNuget@1
                displayName: Publish to ${{ parameters.Feed }}
                inputs:
                  packageParentPath: '$(Pipeline.Workspace)'
                  packagesToPush: '$(Artifacts)/**/*.nupkg;!$(Artifacts)/**/*.symbols.nupkg'
                  ${{ if eq(parameters.Feed, 'Nuget.org') }}:
                    nuGetFeedType: external
                    publishFeedCredentials: Nuget.org
                  ${{ if ne(parameters.Feed, 'Nuget.org') }}:
                    publishVstsFeed: ${{ parameters.Feed }}
