1: # Package is parsed using apiview-stub-generator(version:0.3.18), Python version: 3.10.16
2: 
3: 
4: namespace azure.keyvault.secrets
5: 
6: class azure.keyvault.secrets.ApiVersion(str, Enum):
7:     V2016_10_01 = "2016-10-01"
8:     V7_0 = "7.0"
9:     V7_1 = "7.1"
10: +    V7_2 = "7.2"
11: +    V7_3 = "7.3"
12: +    V7_4 = "7.4"
13: +    V7_5 = "7.5"
14: +    V7_6_PREVIEW_2 = "7.6-preview.2"
15: 
16: 
17: class azure.keyvault.secrets.DeletedSecret:
18: -    property deleted_date: datetime    # Read-only
19: +    property deleted_date: Optional[datetime]    # Read-only
20: -    property id: str    # Read-only
21: +    property id: Optional[str]    # Read-only
22:     property name: str    # Read-only
23: +    property name: Optional[str]    # Read-only
24:     property properties: SecretProperties    # Read-only
25: -    property recovery_id: str    # Read-only
26: +    property recovery_id: Optional[str]    # Read-only
27: -    property scheduled_purge_date: datetime    # Read-only
28: +    property scheduled_purge_date: Optional[datetime]    # Read-only
29: 
30: def __repr__(self) -> str
31: 
32: 
33: class azure.keyvault.secrets.KeyVaultSecret:
34: -    property id: str    # Read-only
35: +    property id: Optional[str]    # Read-only
36: -    property name: str    # Read-only
37: +    property name: Optional[str]    # Read-only
38:     property properties: SecretProperties    # Read-only
39: -    property value: str    # Read-only
40: +    property value: Optional[str]    # Read-only
41: 
42: 
43: def __init__(
44: -        properties,
45: +        properties: SecretProperties,
46: -        value
47: +        value: Optional[str]
48: ) -> None
49: 
50: def __repr__(self) -> str
51: 
52: 
53: +    class azure.keyvault.secrets.KeyVaultSecretIdentifier:
54: +    property name: str    # Read-only
55: +    property source_id: str    # Read-only
56: +    property vault_url: str    # Read-only
57: +    property version: Optional[str]    # Read-only
58: 
59: +    def __init__(self, source_id: str) -> None
60: 
61: 
62: class azure.keyvault.secrets.SecretClient(KeyVaultClientBase): implements ContextManager
63:     property vault_url: str    # Read-only
64: 
65:     def __init__(
66:         self,
67:         vault_url: str,
68: -        credential,
69: +        credential: TokenCredential,
70:         *,
71: -        api_version: ApiVersion = ...,
72: +        api_version: Union[ApiVersion, str] = ...,
73: +        verify_challenge_resource: Optional[bool] = ...,
74: -        **kwargs
75: +        **kwargs: Any
76: -        transport: HttpTransport = ...,
77:         ) -> None
78: 
79:     def backup_secret(
80:         self,
81:         name: str,
82: -        **kwargs
83: +        **kwargs: Any
84:         ) -> bytes
85: 
86:     def begin_delete_secret(
87:         self,
88:         name: str,
89: -        **kwargs
90: +        **kwargs: Any
91: -    ) -> DeletedSecret
92: +    ) -> LROPoller[DeletedSecret]
93: 
94:     def begin_recover_deleted_secret(
95:         self,
96:         name: str,
97: -        **kwargs
98: +        **kwargs: Any
99: -    ) -> SecretProperties
100: +    ) -> LROPoller[SecretProperties]
101: 
102:     def close(self) -> None
103: 
104:     def get_deleted_secret(
105:         self,
106:         name: str,
107: -        **kwargs
108: +        **kwargs: Any
109:         ) -> DeletedSecret
110: 
111:     def get_secret(
112:         self,
113:         name: str,
114: -    version: str = None,
115: +    version: Optional[str] = None,
116: -    **kwargs
117: +    **kwargs: Any
118:         ) -> KeyVaultSecret
119: 
120:     @distributed_trace
121: -    def list_deleted_secrets(self, **kwargs) -> ItemPaged[DeletedSecret]
122: +    def list_deleted_secrets(self, **kwargs: Any) -> ItemPaged[DeletedSecret]
123: 
124:     def list_properties_of_secret_versions(
125:         self,
126:         name: str,
127: -    **kwargs
128: +    **kwargs: Any
129:         ) -> ItemPaged[SecretProperties]
130: 
131:     @distributed_trace
132: -    def list_properties_of_secrets(self, **kwargs) -> ItemPaged[SecretProperties]
133: +    def list_properties_of_secrets(self, **kwargs: Any) -> ItemPaged[SecretProperties]
134: 
135:     def purge_deleted_secret(
136:         self,
137:         name: str,
138: -    **kwargs
139: +    **kwargs: Any
140:         ) -> None
141: 
142:     def restore_secret_backup(
143:         self,
144:         backup: bytes,
145: -    **kwargs
146: +    **kwargs: Any
147:         ) -> SecretProperties
148: 
149: +    @distributed_trace
150: +    def send_request(
151: +        self,
152: +        request: HttpRequest,
153: +        *,
154: +        stream: bool = False,
155: +        **kwargs: Any
156: +    ) -> HttpResponse
157: +
158:     def set_secret(
159:         self,
160:         name: str,
161:         value: str,
162:         *,
163:     content_type: Optional[str] = ...,
164:     enabled: Optional[bool] = ...,
165:     expires_on: Optional[datetime] = ...,
166:     not_before: Optional[datetime] = ...,
167: -    tags: dict[str, str] = ...,
168: +    tags: Optional[Dict[str, str]] = ...,
169: -    **kwargs
170: +    **kwargs: Any
171:     ) -> KeyVaultSecret
172: 
173:     def update_secret_properties(
174:         self,
175:         name: str,
176: -    version: str = None,
177: +    version: Optional[str] = None,
178:         *,
179:         content_type: Optional[str] = ...,
180:         enabled: Optional[bool] = ...,
181:         expires_on: Optional[datetime] = ...,
182:         not_before: Optional[datetime] = ...,
183: -    tags: dict[str, str] = ...,
184: +    tags: Optional[Dict[str, str]] = ...,
185: -    **kwargs
186: +    **kwargs: Any
187:     ) -> SecretProperties
188: 
189: class azure.keyvault.secrets.SecretProperties:
190: -    property content_type: str    # Read-only
191: +    property content_type: Optional[str]    # Read-only
192: -    property created_on: datetime    # Read-only
193: +    property created_on: Optional[datetime]    # Read-only
194: -    property enabled: bool    # Read-only
195: +    property enabled: Optional[bool]    # Read-only
196: -    property expires_on: datetime    # Read-only
197: +    property expires_on: Optional[datetime]    # Read-only
198: -    property id: str    # Read-only
199: +    property id: Optional[str]    # Read-only
200: -    property key_id: str    # Read-only
201: +    property key_id: Optional[str]    # Read-only
202: +    property managed: Optional[bool]    # Read-only
203: -    property name: str    # Read-only
204: +    property name: Optional[str]    # Read-only
205: -    property not_before: datetime    # Read-only
206: +    property not_before: Optional[datetime]    # Read-only
207:     property recoverable_days: Optional[int]    # Read-only
208: -    property recovery_level: str    # Read-only
209: +    property recovery_level: Optional[str]    # Read-only
210: -    property tags: Dict[str, str]    # Read-only
211: +    property tags: Optional[Dict[str, str]]    # Read-only
212: -    property updated_on: datetime    # Read-only
213: +    property updated_on: Optional[datetime]    # Read-only
214: -    property vault_url: str    # Read-only
215: +    property vault_url: Optional[str]    # Read-only
216: 
217: -    property version: str    # Read-only
218: +    property version: Optional[str]    # Read-only
219: 
220: def __init__(
221:         self,
222: +    *args: Any,
223: -    **kwargs
224: +    **kwargs: Any
225: -    attributes,
226: -    vault_id,
227:         ) -> None
228: 
229: -    def __repr__(self)
230: +    def __repr__(self) -> str
231:
232: 
233: namespace azure.keyvault.secrets.aio
234: 
235: class azure.keyvault.secrets.aio.SecretClient(AsyncKeyVaultClientBase): implements AsyncContextManager
236:     property vault_url: str    # Read-only
237: 
238:     def __init__(
239:         self,
240:         vault_url: str,
241:         credential: AsyncTokenCredential,
242:         *,
243: -        api_version: ApiVersion = ...,
244: +        api_version: Union[ApiVersion, str] = ...,
245: +        verify_challenge_resource: Optional[bool] = ...,
246: -        transport: AsyncHttpTransport = ...,
247:         **kwargs: Any
248:         ) -> None
249: 
250:     async def close(self) -> None
251: 
252:     @distributed_trace
253: -    def list_deleted_secrets(self, **kwargs: Any) -> AsyncIterable[DeletedSecret]
254: +    def list_deleted_secrets(self, **kwargs: Any) -> AsyncItemPaged[DeletedSecret]
255: 
256:     def list_properties_of_secret_versions(
257:         self,
258:         name: str,
259:         **kwargs: Any
260: -    ) -> AsyncIterable[SecretProperties]
261: +    ) -> AsyncItemPaged[SecretProperties]
262: 
263:     @distributed_trace
264: -    def list_properties_of_secrets(self, **kwargs: Any) -> AsyncIterable[SecretProperties]
265: +    def list_properties_of_secrets(self, **kwargs: Any) -> AsyncItemPaged[SecretProperties]
266: 
267: +    @distributed_trace_async
268: +    def send_request(
269: +        self,
270: +        request: HttpRequest,
271: +        *,
272: +        stream: bool = False,
273: +        **kwargs: Any
274: +    ) -> Awaitable[AsyncHttpResponse]
275: +
276:     async def set_secret(
277:         self,
278:         name: str,
279:         value: str,
280:         *,
281:         content_type: Optional[str] = ...,
282:         enabled: Optional[bool] = ...,
283:         expires_on: Optional[datetime] = ...,
284:         not_before: Optional[datetime] = ...,
285: -        tags: dict[str, str] = ...,
286: +        tags: Optional[Dict[str, str]] = ...,
287:         **kwargs: Any
288:     ) -> KeyVaultSecret
289: 
290:     async def update_secret_properties(
291:         self,
292:         name: str,
293:         version: Optional[str] = None,
294:         *,
295:         content_type: Optional[str] = ...,
296:         enabled: Optional[bool] = ...,
297:         expires_on: Optional[datetime] = ...,
298:         not_before: Optional[datetime] = ...,
299: -        tags: dict[str, str] = ...,
300: +        tags: Optional[Dict[str, str]] = ...,
301:         **kwargs: Any
302:     ) -> SecretProperties
303: 
304: