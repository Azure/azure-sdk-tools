{
    "status": "Error",
    "violations": [
        {
            "rule_ids": [
                "python_design.html#python-client-connection-string"
            ],
            "line_no": 10,
            "bad_code": "connection_string: Optional[str] = None,",
            "suggestion": "Remove the connection_string parameter from the constructor and provide a separate classmethod, for example from_connection_string, to create a client from a connection string.",
            "comment": "The constructor must not take a connection string per the guideline."
        },
        {
            "rule_ids": [
                "python_design.html#python-client-same-name-sync-async"
            ],
            "line_no": 53,
            "bad_code": "class azure.ai.vision.imageanalysis.aio.AsyncImageAnalysisClient(ImageAnalysisClient): implements AsyncContextManager",
            "suggestion": "Rename the async client to ImageAnalysisClient so that both sync and async clients share the same client name in their respective namespaces.",
            "comment": "The async and sync clients must use the same client name according to the guidelines."
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-type-naming"
            ],
            "line_no": 209,
            "bad_code": "class azure.ai.vision.imageanalysis.models.detectedPerson(MutableMapping[str, Any]):",
            "suggestion": "Rename the class to 'DetectedPerson' using PascalCase.",
            "comment": "Class names should use PascalCase."
        },
        {
            "rule_ids": [
                "python_implementation.html#python-codestyle-properties"
            ],
            "line_no": 411,
            "bad_code": "def get_result(self) -> ObjectsResult",
            "suggestion": "Replace the simple getter (and similarly the setter on line 413) with a property (using @property and @<name>.setter).",
            "comment": "Simple getter and setter methods should be implemented as properties."
        },
        {
            "rule_ids": [
                "python_design.html#python-models-enum-name-uppercase"
            ],
            "line_no": 517,
            "bad_code": "tags = 'tags'",
            "suggestion": "Rename the enum member to 'TAGS' so that all enum member names are uppercase.",
            "comment": "Enum member names should be in UPPERCASE."
        }
    ]
}