
resources:
  repositories:
    - repository: azure-sdk-build-tools
      type: git
      name: internal/azure-sdk-build-tools
      ref: refs/tags/azure-sdk-build-tools_20230321.1

parameters:
  - name: BuildToolsRepoPath
    type: string
    default: '$(Build.SourcesDirectory)/azure-sdk-build-tools'
  - name: ArtifactsPath
    type: string
    default: '$(System.DefaultWorkingDirectory)/artifacts'
  - name: PartnerDropsBlobBase
    type: string
    default: 'https://azuresdkpartnerdrops.blob.core.windows.net/drops'
  - name: PartnerDropsBlobSourceSuffix
    type: string
    default: ''
  - name: NugetVersion
    type: string
    default: '5.4.x'
  - name: DevOpsFeedID
    type: string
    default: ''
  - name: ShouldSign
    type: boolean
    default: true
  - name: ShouldPublish
    type: boolean
    default: true

variables:
  - template: /eng/pipelines/templates/variables/globals.yml

jobs:
  - job: AzurePartnerDropsToNuget
    pool:
      name: azsdk-pool-mms-win-2022-general
      vmImage: windows-2022

    steps:
      - checkout: self
      - checkout: azure-sdk-build-tools

      - task: Powershell@2
        inputs:
          filePath: $(Build.SourcesDirectory)/azure-sdk-tools/eng/common/scripts/copy-from-blobstorage.ps1
          arguments: >
            -SourceBlobPath '${{ parameters.PartnerDropsBlobBase }}/${{ parameters.PartnerDropsBlobSourceSuffix }}'
            -ApplicationId $(azuresdkpartnerdrops-application-id)
            -DestinationDirectory '${{ parameters.ArtifactsPath }}'
          pwsh: true
        displayName: 'Copy from AzureSdkPartnerDrops'
        env:
          AZCOPY_SPA_CLIENT_SECRET: $(azuresdkpartnerdrops-service-principal-key)
        condition: and(succeeded(), ne(variables['SkipCopyFromPartnerDrops'], 'true'))

      - ${{ if eq(parameters.ShouldSign, true) }}:
        - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
          parameters:
            PackagesPath: ${{ parameters.ArtifactsPath }}
            BuildToolsPath: ${{ parameters.BuildToolsRepoPath }}

      - ${{ if eq(parameters.ShouldPublish, true) }}:
        - task: MSBuild@1
          displayName: 'Upload Symbols'
          inputs:
            solution: '${{ parameters.BuildToolsRepoPath }}/tools/symboltool/SymbolUploader.proj'
            msbuildArguments: >
              /p:PackagesPath=${{ parameters.ArtifactsPath }}
              /p:MSPublicSymbolsPAT=$(azuresdk-microsoftpublicsymbols-devops-pat)
              /p:MSSymbolsPAT=$(azuresdk-microsoft-devops-pat)
              /p:AzureSDKSymbolsPAT=$(azuresdk-azure-sdk-devops-pat)

        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet ${{ parameters.NugetVersion }}'
          inputs:
            versionSpec: ${{ parameters.NugetVersion }}

        - ${{ if ne(parameters.DevOpsFeedID, '') }}:
          - task: NuGetCommand@2
            displayName: 'Publish to DevOps Feed'
            inputs:
              command: push
              packagesToPush: '${{ parameters.ArtifactsPath }}/**/*.nupkg;!${{ parameters.ArtifactsPath }}/**/*.symbols.nupkg'
              publishVstsFeed: ${{ parameters.DevOpsFeedID }}

        - ${{ if eq(parameters.DevOpsFeedID, '') }}:
          - task: NuGetCommand@2
            displayName: 'Publish to Nuget'
            inputs:
              command: push
              packagesToPush: '${{ parameters.ArtifactsPath }}/**/*.nupkg;!${{ parameters.ArtifactsPath }}/**/*.symbols.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: Nuget.org

      - publish: '${{ parameters.ArtifactsPath }}'
        displayName: Upload Packages to Artifacts
        artifact: packages
        condition: succeeded()