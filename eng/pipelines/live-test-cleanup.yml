pr: none
trigger: none

parameters:
  - name: DryRun
    type: boolean
    default: false
  - name: GroupFilter
    type: string
    default: '*'
  - name: Pool
    type: string
    default: azsdk-pool-mms-ubuntu-2204-general
  - name: Subscriptions
    type: object
    default:
      - DisplayName: AzureCloud TME - Resource Cleanup
        ServiceConnection: azure-sdk-tests-public
        AdditionalParameters: "-DeleteNonCompliantGroups -DeleteArmDeployments"
      - DisplayName: AzureCloud - Resource Cleanup
        ServiceConnection: azure-sdk-tests
        AdditionalParameters: "-DeleteNonCompliantGroups -DeleteArmDeployments"
      - DisplayName: AzureUSGovernment - Resource Cleanup
        ServiceConnection: azure-sdk-tests-usgov
        # TODO: Enable strict resource cleanup after pre-existing static groups have been handled
        # AdditionalParameters: "-DeleteNonCompliantGroups"
      - DisplayName: AzureChinaCloud - Resource Cleanup
        ServiceConnection: azure-sdk-tests-china
        # TODO: Enable strict resource cleanup after pre-existing static groups have been handled
        # AdditionalParameters: "-DeleteNonCompliantGroups"
      - DisplayName: AzureCloud Playground - Resource Cleanup
        ServiceConnection: azure-sdk-tests-playground
        AdditionalParameters: "-DeleteNonCompliantGroups -DeleteArmDeployments -MaxLifespanDeleteAfterHours 240"
      # TODO: Disabled this clean-up as the dogfood enviroment is busted and the tests are no longer running
      # see https://github.com/Azure/azure-sdk-for-python/pull/33483 were the tests were disabled.
      # - DisplayName: Dogfood Translation - Resource Cleanup
      #   SubscriptionConfigurations:
      #     - $(sub-config-translation-int-test-resources)
      # TODO: re-enable dogfood cleanup after resource deletion issues are solved, to avoid pipeline timeouts
      # - DisplayName: Dogfood ACS - Resource Cleanup
      #   SubscriptionConfigurations:
      #     - $(sub-config-communication-int-test-resources-common)
      - DisplayName: AzureCloud ACS - Resource Cleanup
        ServiceConnection: azure-sdk-tests-communication
        SubscriptionConfigurations:
          - $(sub-config-communication-services-cloud-test-resources-common)
      - DisplayName: AzureCloud Cosmos - Resource Cleanup
        ServiceConnection: azure-sdk-tests-cosmos
        SubscriptionConfigurations:
          - $(sub-config-cosmos-azure-cloud-test-resources)
      # - DisplayName: AzureCloud Storage NET - Resource Cleanup
      #   SubscriptionConfigurations:
      #     - $(sub-config-storage-test-resources-net)

stages:
- stage: Run

  variables:
  - template: /eng/pipelines/templates/variables/globals.yml
  - name: DailyCacheKey
    value: $[format('{0:ddMMyyyy}', pipeline.startTime)]
  - name: CachePath
    value: CleanupCache

  jobs:
  - job: Run
    timeoutInMinutes: 120  # sometimes RP throttling slows down the cleanup script
    pool:
      name: azsdk-pool-mms-ubuntu-2204-general

    steps:
    - template: /eng/common/pipelines/templates/steps/cache-ps-modules.yml

    - task: Cache@2
      inputs:
        # CacheSalt is an optional variable that can be overridden at pipeline runtime to
        # force invalidate the cache.
        # DailyCacheKey will trigger a new cache entry to refresh once per day.
        key: '"$(CacheSalt)" | "$(DailyCacheKey)" | $(Build.SourcesDirectory)/eng/scripts/live-test-resource-cleanup.ps1'
        path: $(CachePath)
      displayName: Cache Github Alias Mappings

    # Register the dogfood environment to clean up any custom subscriptions in it
    - template: /eng/common/TestResources/setup-environments.yml

    - task: AzureCLI@2
      displayName: Authenticate to OpenSource API
      inputs:
        azureSubscription: opensource-api-connection
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          $jwt_accessToken = az account get-access-token --resource "api://2efaf292-00a0-426c-ba7d-f5d2b214b8fc" --query "accessToken" --output tsv
          Write-Host "##vso[task.setvariable variable=opensource-api-token;isSecret=true]$jwt_accessToken"

    - ${{ each subscription in parameters.Subscriptions }}:
      - template: ./live-test-cleanup-template.yml
        parameters:
          DryRun: ${{ parameters.DryRun }}
          GroupFilter: ${{ parameters.GroupFilter }}
          DisplayName: ${{ subscription.DisplayName }}
          ServiceConnection: ${{ subscription.ServiceConnection }}
          SubscriptionConfigurationFilePaths: ${{ subscription.SubscriptionConfigurationFilePaths }}
          SubscriptionConfigurations: ${{ subscription.SubscriptionConfigurations }}
          GithubAliasCachePath: $(CachePath)/github-alias-mappings.txt
          AdditionalParameters: ${{ subscription.AdditionalParameters }}
          Pool: ${{ parameters.Pool }}
